//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMR.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AMREntities : DbContext
    {
        public AMREntities()
            : base("name=AMREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C_BloodType> C_BloodType { get; set; }
        public DbSet<C_Ethnicity> C_Ethnicity { get; set; }
        public DbSet<C_Gender> C_Gender { get; set; }
        public DbSet<C_MaritalStatus> C_MaritalStatus { get; set; }
        public DbSet<C_Race> C_Race { get; set; }
        public DbSet<C_Religion> C_Religion { get; set; }
        public DbSet<C_AuditAction> C_AuditAction { get; set; }
        public DbSet<C_DocumentType> C_DocumentType { get; set; }
        public DbSet<PatientDocumentAudit> PatientDocumentAudits { get; set; }
        public DbSet<C_FacilityTypes> C_FacilityTypes { get; set; }
        public DbSet<Practice> Practices { get; set; }
        public DbSet<PatientFacilityLink> PatientFacilityLinks { get; set; }
        public DbSet<C_UserRole> C_UserRole { get; set; }
        public DbSet<ProviderFacilityLink> ProviderFacilityLinks { get; set; }
        public DbSet<Token> Tokens { get; set; }
        public DbSet<C_SmokingStatus> C_SmokingStatus { get; set; }
        public DbSet<PatientOrgan> PatientOrgans { get; set; }
        public DbSet<C_ConditionStatus> C_ConditionStatus { get; set; }
        public DbSet<C_CodeSystem> C_CodeSystem { get; set; }
        public DbSet<C_MessagePeriod> C_MessagePeriod { get; set; }
        public DbSet<C_MessageResponseType> C_MessageResponseType { get; set; }
        public DbSet<C_MessageStatus> C_MessageStatus { get; set; }
        public DbSet<Message> Messages { get; set; }
        public DbSet<vwFacilitiesForPatient> vwFacilitiesForPatients { get; set; }
        public DbSet<vwProvidersForFacility> vwProvidersForFacilities { get; set; }
        public DbSet<PatientMatch> PatientMatches { get; set; }
        public DbSet<AttachmentMessage> AttachmentMessages { get; set; }
        public DbSet<ConfigAttachment> ConfigAttachments { get; set; }
        public DbSet<vwPatientSearch> vwPatientSearches { get; set; }
        public DbSet<Organization> Organizations { get; set; }
        public DbSet<C_Relationship> C_Relationship { get; set; }
        public DbSet<PatientAccountLink> PatientAccountLinks { get; set; }
        public DbSet<C_SecurityQuestion> C_SecurityQuestion { get; set; }
        public DbSet<C_InstructionType> C_InstructionType { get; set; }
        public DbSet<C_Problem> C_Problem { get; set; }
        public DbSet<C_AccessStatus> C_AccessStatus { get; set; }
        public DbSet<UserLoginAudit> UserLoginAudits { get; set; }
        public DbSet<MessageAudit> MessageAudits { get; set; }
        public DbSet<PatientProviderLink> PatientProviderLinks { get; set; }
        public DbSet<PatientMedicalHist> PatientMedicalHists { get; set; }
        public DbSet<C_Medication> C_Medication { get; set; }
        public DbSet<PatientAllergy> PatientAllergies { get; set; }
        public DbSet<PatientInsurance> PatientInsurances { get; set; }
        public DbSet<PatientProcedure> PatientProcedures { get; set; }
        public DbSet<C_Vaccine> C_Vaccine { get; set; }
        public DbSet<PatientSocialHist> PatientSocialHists { get; set; }
        public DbSet<PatientSurgicalHist> PatientSurgicalHists { get; set; }
        public DbSet<PatientClinicalDocument> PatientClinicalDocuments { get; set; }
        public DbSet<C_Country> C_Country { get; set; }
        public DbSet<C_Frequency> C_Frequency { get; set; }
        public DbSet<C_RouteOfAdministration> C_RouteOfAdministration { get; set; }
        public DbSet<C_State> C_State { get; set; }
        public DbSet<C_Social> C_Social { get; set; }
        public DbSet<PatientVitalSign> PatientVitalSigns { get; set; }
        public DbSet<C_MessageType> C_MessageType { get; set; }
        public DbSet<vwPatientsForFacility> vwPatientsForFacilities { get; set; }
        public DbSet<C_PreferredLanguage> C_PreferredLanguage { get; set; }
        public DbSet<PatientLabResultTest> PatientLabResultTests { get; set; }
        public DbSet<PatientImmunization> PatientImmunizations { get; set; }
        public DbSet<PatientFamilyHist> PatientFamilyHists { get; set; }
        public DbSet<PatientProblem> PatientProblems { get; set; }
        public DbSet<C_DoctorType> C_DoctorType { get; set; }
        public DbSet<PatientCareDocument> PatientCareDocuments { get; set; }
        public DbSet<PatientDocument> PatientDocuments { get; set; }
        public DbSet<PatientMedicalDocument> PatientMedicalDocuments { get; set; }
        public DbSet<C_Advisor> C_Advisor { get; set; }
        public DbSet<PatientAdvisor> PatientAdvisors { get; set; }
        public DbSet<PatientDoctor> PatientDoctors { get; set; }
        public DbSet<PatientInsurancePlan> PatientInsurancePlans { get; set; }
        public DbSet<ProviderWebSetting> ProviderWebSettings { get; set; }
        public DbSet<C_DocUploadType> C_DocUploadType { get; set; }
        public DbSet<C_PolicyType> C_PolicyType { get; set; }
        public DbSet<PatientPolicy> PatientPolicies { get; set; }
        public DbSet<PatientEmergency> PatientEmergencies { get; set; }
        public DbSet<vwMessageUnread> vwMessageUnreads { get; set; }
        public DbSet<BillPayment> BillPayments { get; set; }
        public DbSet<BillRate> BillRates { get; set; }
        public DbSet<vwMessageUnreadProv> vwMessageUnreadProvs { get; set; }
        public DbSet<Provider> Providers { get; set; }
        public DbSet<vwCCDAuditLog> vwCCDAuditLogs { get; set; }
        public DbSet<vwRptPatientLogin> vwRptPatientLogins { get; set; }
        public DbSet<vwRptSecureMessage> vwRptSecureMessages { get; set; }
        public DbSet<vwVisitCCD> vwVisitCCDs { get; set; }
        public DbSet<vwPatientFacilityOption> vwPatientFacilityOptions { get; set; }
        public DbSet<PatientShare> PatientShares { get; set; }
        public DbSet<PatientPlanOfCare> PatientPlanOfCares { get; set; }
        public DbSet<PatientNote> PatientNotes { get; set; }
        public DbSet<C_ActivityLevel> C_ActivityLevel { get; set; }
        public DbSet<C_AlcoholFrequency> C_AlcoholFrequency { get; set; }
        public DbSet<C_EducationLevel> C_EducationLevel { get; set; }
        public DbSet<C_ExerciseFrequency> C_ExerciseFrequency { get; set; }
        public DbSet<PatientSocialSelf> PatientSocialSelves { get; set; }
        public DbSet<C_ThirdParty> C_ThirdParty { get; set; }
        public DbSet<PatientWebSetting> PatientWebSettings { get; set; }
        public DbSet<Config> Configs { get; set; }
        public DbSet<vwPatientSummary> vwPatientSummaries { get; set; }
        public DbSet<Carrier> Carriers { get; set; }
        public DbSet<vwPatientVisitSummary> vwPatientVisitSummaries { get; set; }
        public DbSet<PatientMedication> PatientMedications { get; set; }
        public DbSet<vwMessageGetWaiting> vwMessageGetWaitings { get; set; }
        public DbSet<MessageDetail> MessageDetails { get; set; }
        public DbSet<vwMessageSummary> vwMessageSummaries { get; set; }
        public DbSet<PatientPharmacy> PatientPharmacies { get; set; }
        public DbSet<vwMessageDetailReceived> vwMessageDetailReceiveds { get; set; }
        public DbSet<vwMessageDetailSent> vwMessageDetailSents { get; set; }
        public DbSet<vwMessageGetCancelled> vwMessageGetCancelleds { get; set; }
        public DbSet<DirectReceived> DirectReceiveds { get; set; }
        public DbSet<vwPatientDocumentsList> vwPatientDocumentsLists { get; set; }
        public DbSet<PatientLabResult> PatientLabResults { get; set; }
        public DbSet<C_EMRSystem> C_EMRSystem { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<PatientVisit> PatientVisits { get; set; }
        public DbSet<Patient> Patients { get; set; }
        public DbSet<Facility> Facilities { get; set; }
        public DbSet<PatientRepresentative> PatientRepresentatives { get; set; }
    
        public virtual int FindPatient(ObjectParameter patientId, string firstName, string lastName, Nullable<System.DateTime> dOB, string sSN, Nullable<int> gender, string address1, string city, string state, string postal, string phone, string medicareId, string medicaidState, string medicaidId, string altId1_Type, string altId1_Key, string altId2_Type, string altId2_Key, string altId3_Type, string altId3_Key, string altId4_Type, string altId4_Key, string altId5_Type, string altId5_Key)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postalParameter = postal != null ?
                new ObjectParameter("Postal", postal) :
                new ObjectParameter("Postal", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var medicareIdParameter = medicareId != null ?
                new ObjectParameter("MedicareId", medicareId) :
                new ObjectParameter("MedicareId", typeof(string));
    
            var medicaidStateParameter = medicaidState != null ?
                new ObjectParameter("MedicaidState", medicaidState) :
                new ObjectParameter("MedicaidState", typeof(string));
    
            var medicaidIdParameter = medicaidId != null ?
                new ObjectParameter("MedicaidId", medicaidId) :
                new ObjectParameter("MedicaidId", typeof(string));
    
            var altId1_TypeParameter = altId1_Type != null ?
                new ObjectParameter("AltId1_Type", altId1_Type) :
                new ObjectParameter("AltId1_Type", typeof(string));
    
            var altId1_KeyParameter = altId1_Key != null ?
                new ObjectParameter("AltId1_Key", altId1_Key) :
                new ObjectParameter("AltId1_Key", typeof(string));
    
            var altId2_TypeParameter = altId2_Type != null ?
                new ObjectParameter("AltId2_Type", altId2_Type) :
                new ObjectParameter("AltId2_Type", typeof(string));
    
            var altId2_KeyParameter = altId2_Key != null ?
                new ObjectParameter("AltId2_Key", altId2_Key) :
                new ObjectParameter("AltId2_Key", typeof(string));
    
            var altId3_TypeParameter = altId3_Type != null ?
                new ObjectParameter("AltId3_Type", altId3_Type) :
                new ObjectParameter("AltId3_Type", typeof(string));
    
            var altId3_KeyParameter = altId3_Key != null ?
                new ObjectParameter("AltId3_Key", altId3_Key) :
                new ObjectParameter("AltId3_Key", typeof(string));
    
            var altId4_TypeParameter = altId4_Type != null ?
                new ObjectParameter("AltId4_Type", altId4_Type) :
                new ObjectParameter("AltId4_Type", typeof(string));
    
            var altId4_KeyParameter = altId4_Key != null ?
                new ObjectParameter("AltId4_Key", altId4_Key) :
                new ObjectParameter("AltId4_Key", typeof(string));
    
            var altId5_TypeParameter = altId5_Type != null ?
                new ObjectParameter("AltId5_Type", altId5_Type) :
                new ObjectParameter("AltId5_Type", typeof(string));
    
            var altId5_KeyParameter = altId5_Key != null ?
                new ObjectParameter("AltId5_Key", altId5_Key) :
                new ObjectParameter("AltId5_Key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FindPatient", patientId, firstNameParameter, lastNameParameter, dOBParameter, sSNParameter, genderParameter, address1Parameter, cityParameter, stateParameter, postalParameter, phoneParameter, medicareIdParameter, medicaidStateParameter, medicaidIdParameter, altId1_TypeParameter, altId1_KeyParameter, altId2_TypeParameter, altId2_KeyParameter, altId3_TypeParameter, altId3_KeyParameter, altId4_TypeParameter, altId4_KeyParameter, altId5_TypeParameter, altId5_KeyParameter);
        }
    }
}
