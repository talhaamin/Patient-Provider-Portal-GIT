//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Testing.PatientService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PatientWSSoap", Namespace="http://tempuri.org/")]
    public partial class PatientWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBillRateDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillPaymentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBillPaymentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillPaymentDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientEmailSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSummaryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAdminDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpgradePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DowngradePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenewPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePatientRenewDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientThirdPartyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientEMRSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePatientEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientOrganDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientOrganDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientVisitDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientVisitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestPatientVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback VisitShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFacilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientShareDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareAllergyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareFamilyHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareLabResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareMedicalHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareMedicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareSocialHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareSurgicalHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareVitalSignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareImmunizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareClinicalDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareInsuranceOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareEmergencyContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareVisitOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareUploadDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientSharePlanOfCareOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientShareClinicalInstructionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientAccountLinkDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientAccountLinkDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAccountLinkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAccountLinkParentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientWebSettingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientWebSettingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientImageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientmageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientRepDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientRepDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCareProviderDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCareProviderDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientForFacilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFacilityOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOutsideProviderEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillRateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillRateDataByPromoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBillRateDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PatientWS() {
            this.Url = global::Testing.Properties.Settings.Default.Testing_PatientService_PatientWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBillRateDataTableCompletedEventHandler GetBillRateDataTableCompleted;
        
        /// <remarks/>
        public event GetBillPaymentDataCompletedEventHandler GetBillPaymentDataCompleted;
        
        /// <remarks/>
        public event SaveBillPaymentDataCompletedEventHandler SaveBillPaymentDataCompleted;
        
        /// <remarks/>
        public event GetBillPaymentDataTableCompletedEventHandler GetBillPaymentDataTableCompleted;
        
        /// <remarks/>
        public event PatientEmailSearchCompletedEventHandler PatientEmailSearchCompleted;
        
        /// <remarks/>
        public event DeletePatientDataCompletedEventHandler DeletePatientDataCompleted;
        
        /// <remarks/>
        public event GetPatientDataCompletedEventHandler GetPatientDataCompleted;
        
        /// <remarks/>
        public event GetPatientExistsCompletedEventHandler GetPatientExistsCompleted;
        
        /// <remarks/>
        public event GetPatientSummaryDataCompletedEventHandler GetPatientSummaryDataCompleted;
        
        /// <remarks/>
        public event GetPatientAdminDataCompletedEventHandler GetPatientAdminDataCompleted;
        
        /// <remarks/>
        public event SavePatientDataCompletedEventHandler SavePatientDataCompleted;
        
        /// <remarks/>
        public event PatientSearchCompletedEventHandler PatientSearchCompleted;
        
        /// <remarks/>
        public event UpgradePatientCompletedEventHandler UpgradePatientCompleted;
        
        /// <remarks/>
        public event DowngradePatientCompletedEventHandler DowngradePatientCompleted;
        
        /// <remarks/>
        public event RenewPatientCompletedEventHandler RenewPatientCompleted;
        
        /// <remarks/>
        public event ChangePatientRenewDateCompletedEventHandler ChangePatientRenewDateCompleted;
        
        /// <remarks/>
        public event ActivatePatientCompletedEventHandler ActivatePatientCompleted;
        
        /// <remarks/>
        public event DeactivatePatientCompletedEventHandler DeactivatePatientCompleted;
        
        /// <remarks/>
        public event UpdatePatientThirdPartyCompletedEventHandler UpdatePatientThirdPartyCompleted;
        
        /// <remarks/>
        public event UpdatePatientEMRSystemCompletedEventHandler UpdatePatientEMRSystemCompleted;
        
        /// <remarks/>
        public event ChangePatientEmailCompletedEventHandler ChangePatientEmailCompleted;
        
        /// <remarks/>
        public event GetPatientOrganDataCompletedEventHandler GetPatientOrganDataCompleted;
        
        /// <remarks/>
        public event SavePatientOrganDataCompletedEventHandler SavePatientOrganDataCompleted;
        
        /// <remarks/>
        public event GetPatientVisitDataCompletedEventHandler GetPatientVisitDataCompleted;
        
        /// <remarks/>
        public event GetPatientVisitListCompletedEventHandler GetPatientVisitListCompleted;
        
        /// <remarks/>
        public event GetLatestPatientVisitCompletedEventHandler GetLatestPatientVisitCompleted;
        
        /// <remarks/>
        public event VisitShareCompletedEventHandler VisitShareCompleted;
        
        /// <remarks/>
        public event GetPatientFacilityListCompletedEventHandler GetPatientFacilityListCompleted;
        
        /// <remarks/>
        public event GetPatientShareDataCompletedEventHandler GetPatientShareDataCompleted;
        
        /// <remarks/>
        public event PatientShareDemographicsCompletedEventHandler PatientShareDemographicsCompleted;
        
        /// <remarks/>
        public event PatientShareAllergyCompletedEventHandler PatientShareAllergyCompleted;
        
        /// <remarks/>
        public event PatientShareFamilyHistoryCompletedEventHandler PatientShareFamilyHistoryCompleted;
        
        /// <remarks/>
        public event PatientShareLabResultsCompletedEventHandler PatientShareLabResultsCompleted;
        
        /// <remarks/>
        public event PatientShareMedicalHistoryCompletedEventHandler PatientShareMedicalHistoryCompleted;
        
        /// <remarks/>
        public event PatientShareMedicationCompletedEventHandler PatientShareMedicationCompleted;
        
        /// <remarks/>
        public event PatientShareProblemCompletedEventHandler PatientShareProblemCompleted;
        
        /// <remarks/>
        public event PatientShareProcedureCompletedEventHandler PatientShareProcedureCompleted;
        
        /// <remarks/>
        public event PatientShareSocialHistoryCompletedEventHandler PatientShareSocialHistoryCompleted;
        
        /// <remarks/>
        public event PatientShareSurgicalHistoryCompletedEventHandler PatientShareSurgicalHistoryCompleted;
        
        /// <remarks/>
        public event PatientShareVitalSignsCompletedEventHandler PatientShareVitalSignsCompleted;
        
        /// <remarks/>
        public event PatientShareImmunizationCompletedEventHandler PatientShareImmunizationCompleted;
        
        /// <remarks/>
        public event PatientShareOrganCompletedEventHandler PatientShareOrganCompleted;
        
        /// <remarks/>
        public event PatientShareClinicalDocCompletedEventHandler PatientShareClinicalDocCompleted;
        
        /// <remarks/>
        public event PatientShareInsuranceCompletedEventHandler PatientShareInsuranceCompleted;
        
        /// <remarks/>
        public event PatientShareEmergencyContactCompletedEventHandler PatientShareEmergencyContactCompleted;
        
        /// <remarks/>
        public event PatientShareAppointmentCompletedEventHandler PatientShareAppointmentCompleted;
        
        /// <remarks/>
        public event PatientShareVisitCompletedEventHandler PatientShareVisitCompleted;
        
        /// <remarks/>
        public event PatientShareUploadDocsCompletedEventHandler PatientShareUploadDocsCompleted;
        
        /// <remarks/>
        public event PatientSharePlanOfCareCompletedEventHandler PatientSharePlanOfCareCompleted;
        
        /// <remarks/>
        public event PatientShareClinicalInstructionsCompletedEventHandler PatientShareClinicalInstructionsCompleted;
        
        /// <remarks/>
        public event SavePatientAccountLinkDataCompletedEventHandler SavePatientAccountLinkDataCompleted;
        
        /// <remarks/>
        public event DeletePatientAccountLinkDataCompletedEventHandler DeletePatientAccountLinkDataCompleted;
        
        /// <remarks/>
        public event GetPatientAccountLinkListCompletedEventHandler GetPatientAccountLinkListCompleted;
        
        /// <remarks/>
        public event GetPatientAccountLinkParentListCompletedEventHandler GetPatientAccountLinkParentListCompleted;
        
        /// <remarks/>
        public event GetPatientWebSettingDataCompletedEventHandler GetPatientWebSettingDataCompleted;
        
        /// <remarks/>
        public event SavePatientWebSettingDataCompletedEventHandler SavePatientWebSettingDataCompleted;
        
        /// <remarks/>
        public event GetPatientImageDataCompletedEventHandler GetPatientImageDataCompleted;
        
        /// <remarks/>
        public event SavePatientmageDataCompletedEventHandler SavePatientmageDataCompleted;
        
        /// <remarks/>
        public event GetPatientRepDataCompletedEventHandler GetPatientRepDataCompleted;
        
        /// <remarks/>
        public event SavePatientRepDataCompletedEventHandler SavePatientRepDataCompleted;
        
        /// <remarks/>
        public event GetCareProviderDataCompletedEventHandler GetCareProviderDataCompleted;
        
        /// <remarks/>
        public event SaveCareProviderDataCompletedEventHandler SaveCareProviderDataCompleted;
        
        /// <remarks/>
        public event GetPatientForFacilityListCompletedEventHandler GetPatientForFacilityListCompleted;
        
        /// <remarks/>
        public event GetPatientFacilityOptionsCompletedEventHandler GetPatientFacilityOptionsCompleted;
        
        /// <remarks/>
        public event SendOutsideProviderEmailCompletedEventHandler SendOutsideProviderEmailCompleted;
        
        /// <remarks/>
        public event GetBillRateDataCompletedEventHandler GetBillRateDataCompleted;
        
        /// <remarks/>
        public event GetBillRateDataByPromoCompletedEventHandler GetBillRateDataByPromoCompleted;
        
        /// <remarks/>
        public event SaveBillRateDataCompletedEventHandler SaveBillRateDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillRateDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillRateTableData GetBillRateDataTable(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBillRateDataTable", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillRateTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillRateDataTableAsync(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            this.GetBillRateDataTableAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBillRateDataTableAsync(BillRateParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBillRateDataTableOperationCompleted == null)) {
                this.GetBillRateDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillRateDataTableOperationCompleted);
            }
            this.InvokeAsync("GetBillRateDataTable", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetBillRateDataTableOperationCompleted, userState);
        }
        
        private void OnGetBillRateDataTableOperationCompleted(object arg) {
            if ((this.GetBillRateDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillRateDataTableCompleted(this, new GetBillRateDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillPaymentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillPaymentData GetBillPaymentData(BillPaymentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBillPaymentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillPaymentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillPaymentDataAsync(BillPaymentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetBillPaymentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBillPaymentDataAsync(BillPaymentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBillPaymentDataOperationCompleted == null)) {
                this.GetBillPaymentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillPaymentDataOperationCompleted);
            }
            this.InvokeAsync("GetBillPaymentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetBillPaymentDataOperationCompleted, userState);
        }
        
        private void OnGetBillPaymentDataOperationCompleted(object arg) {
            if ((this.GetBillPaymentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillPaymentDataCompleted(this, new GetBillPaymentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveBillPaymentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillPaymentData SaveBillPaymentData(BillPaymentData BillPayment, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SaveBillPaymentData", new object[] {
                        BillPayment,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillPaymentData)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBillPaymentDataAsync(BillPaymentData BillPayment, string Token, long UserId, long FacilityId) {
            this.SaveBillPaymentDataAsync(BillPayment, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SaveBillPaymentDataAsync(BillPaymentData BillPayment, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SaveBillPaymentDataOperationCompleted == null)) {
                this.SaveBillPaymentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBillPaymentDataOperationCompleted);
            }
            this.InvokeAsync("SaveBillPaymentData", new object[] {
                        BillPayment,
                        Token,
                        UserId,
                        FacilityId}, this.SaveBillPaymentDataOperationCompleted, userState);
        }
        
        private void OnSaveBillPaymentDataOperationCompleted(object arg) {
            if ((this.SaveBillPaymentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBillPaymentDataCompleted(this, new SaveBillPaymentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillPaymentDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillPaymentTableData GetBillPaymentDataTable(BillPaymentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBillPaymentDataTable", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillPaymentTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillPaymentDataTableAsync(BillPaymentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetBillPaymentDataTableAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBillPaymentDataTableAsync(BillPaymentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBillPaymentDataTableOperationCompleted == null)) {
                this.GetBillPaymentDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillPaymentDataTableOperationCompleted);
            }
            this.InvokeAsync("GetBillPaymentDataTable", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetBillPaymentDataTableOperationCompleted, userState);
        }
        
        private void OnGetBillPaymentDataTableOperationCompleted(object arg) {
            if ((this.GetBillPaymentDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillPaymentDataTableCompleted(this, new GetBillPaymentDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientEmailSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTableData PatientEmailSearch(string EMail, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientEmailSearch", new object[] {
                        EMail,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientTableData)(results[0]));
        }
        
        /// <remarks/>
        public void PatientEmailSearchAsync(string EMail, string Token, long UserId, long FacilityId) {
            this.PatientEmailSearchAsync(EMail, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientEmailSearchAsync(string EMail, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientEmailSearchOperationCompleted == null)) {
                this.PatientEmailSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientEmailSearchOperationCompleted);
            }
            this.InvokeAsync("PatientEmailSearch", new object[] {
                        EMail,
                        Token,
                        UserId,
                        FacilityId}, this.PatientEmailSearchOperationCompleted, userState);
        }
        
        private void OnPatientEmailSearchOperationCompleted(object arg) {
            if ((this.PatientEmailSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientEmailSearchCompleted(this, new PatientEmailSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp DeletePatientData(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientData", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientDataAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.DeletePatientDataAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientDataAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientDataOperationCompleted == null)) {
                this.DeletePatientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientData", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientDataOperationCompleted(object arg) {
            if ((this.DeletePatientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientDataCompleted(this, new DeletePatientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientData GetPatientData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientDataOperationCompleted == null)) {
                this.GetPatientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientDataOperationCompleted, userState);
        }
        
        private void OnGetPatientDataOperationCompleted(object arg) {
            if ((this.GetPatientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDataCompleted(this, new GetPatientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientData GetPatientExists(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientExists", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientExistsAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientExistsAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientExistsAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientExistsOperationCompleted == null)) {
                this.GetPatientExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientExistsOperationCompleted);
            }
            this.InvokeAsync("GetPatientExists", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientExistsOperationCompleted, userState);
        }
        
        private void OnGetPatientExistsOperationCompleted(object arg) {
            if ((this.GetPatientExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientExistsCompleted(this, new GetPatientExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSummaryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSummaryData GetPatientSummaryData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSummaryData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSummaryDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientSummaryDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSummaryDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSummaryDataOperationCompleted == null)) {
                this.GetPatientSummaryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSummaryDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSummaryDataOperationCompleted, userState);
        }
        
        private void OnGetPatientSummaryDataOperationCompleted(object arg) {
            if ((this.GetPatientSummaryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSummaryDataCompleted(this, new GetPatientSummaryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAdminData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAdmin GetPatientAdminData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientAdminData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAdmin)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAdminDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientAdminDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientAdminDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientAdminDataOperationCompleted == null)) {
                this.GetPatientAdminDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAdminDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientAdminData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientAdminDataOperationCompleted, userState);
        }
        
        private void OnGetPatientAdminDataOperationCompleted(object arg) {
            if ((this.GetPatientAdminDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAdminDataCompleted(this, new GetPatientAdminDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientData SavePatientData(PatientData PatientData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientDataAsync(PatientData PatientData, string Token, long UserId, long FacilityId) {
            this.SavePatientDataAsync(PatientData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientDataAsync(PatientData PatientData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientDataOperationCompleted == null)) {
                this.SavePatientDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientDataOperationCompleted, userState);
        }
        
        private void OnSavePatientDataOperationCompleted(object arg) {
            if ((this.SavePatientDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientDataCompleted(this, new SavePatientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTableData PatientSearch(PatientSearchParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientSearch", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientTableData)(results[0]));
        }
        
        /// <remarks/>
        public void PatientSearchAsync(PatientSearchParms Parms, string Token, long UserId, long FacilityId) {
            this.PatientSearchAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientSearchAsync(PatientSearchParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientSearchOperationCompleted == null)) {
                this.PatientSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientSearchOperationCompleted);
            }
            this.InvokeAsync("PatientSearch", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.PatientSearchOperationCompleted, userState);
        }
        
        private void OnPatientSearchOperationCompleted(object arg) {
            if ((this.PatientSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientSearchCompleted(this, new PatientSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpgradePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp UpgradePatient(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("UpgradePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void UpgradePatientAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.UpgradePatientAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void UpgradePatientAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.UpgradePatientOperationCompleted == null)) {
                this.UpgradePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpgradePatientOperationCompleted);
            }
            this.InvokeAsync("UpgradePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.UpgradePatientOperationCompleted, userState);
        }
        
        private void OnUpgradePatientOperationCompleted(object arg) {
            if ((this.UpgradePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpgradePatientCompleted(this, new UpgradePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DowngradePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp DowngradePatient(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DowngradePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void DowngradePatientAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.DowngradePatientAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DowngradePatientAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DowngradePatientOperationCompleted == null)) {
                this.DowngradePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDowngradePatientOperationCompleted);
            }
            this.InvokeAsync("DowngradePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.DowngradePatientOperationCompleted, userState);
        }
        
        private void OnDowngradePatientOperationCompleted(object arg) {
            if ((this.DowngradePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DowngradePatientCompleted(this, new DowngradePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenewPatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp RenewPatient(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("RenewPatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void RenewPatientAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.RenewPatientAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void RenewPatientAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.RenewPatientOperationCompleted == null)) {
                this.RenewPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenewPatientOperationCompleted);
            }
            this.InvokeAsync("RenewPatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.RenewPatientOperationCompleted, userState);
        }
        
        private void OnRenewPatientOperationCompleted(object arg) {
            if ((this.RenewPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenewPatientCompleted(this, new RenewPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePatientRenewDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp ChangePatientRenewDate(long PatientId, System.DateTime RenewDate, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("ChangePatientRenewDate", new object[] {
                        PatientId,
                        RenewDate,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePatientRenewDateAsync(long PatientId, System.DateTime RenewDate, string Token, long UserId, long FacilityId) {
            this.ChangePatientRenewDateAsync(PatientId, RenewDate, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void ChangePatientRenewDateAsync(long PatientId, System.DateTime RenewDate, string Token, long UserId, long FacilityId, object userState) {
            if ((this.ChangePatientRenewDateOperationCompleted == null)) {
                this.ChangePatientRenewDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePatientRenewDateOperationCompleted);
            }
            this.InvokeAsync("ChangePatientRenewDate", new object[] {
                        PatientId,
                        RenewDate,
                        Token,
                        UserId,
                        FacilityId}, this.ChangePatientRenewDateOperationCompleted, userState);
        }
        
        private void OnChangePatientRenewDateOperationCompleted(object arg) {
            if ((this.ChangePatientRenewDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePatientRenewDateCompleted(this, new ChangePatientRenewDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivatePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp ActivatePatient(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("ActivatePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void ActivatePatientAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.ActivatePatientAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void ActivatePatientAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.ActivatePatientOperationCompleted == null)) {
                this.ActivatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivatePatientOperationCompleted);
            }
            this.InvokeAsync("ActivatePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.ActivatePatientOperationCompleted, userState);
        }
        
        private void OnActivatePatientOperationCompleted(object arg) {
            if ((this.ActivatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivatePatientCompleted(this, new ActivatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeactivatePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp DeactivatePatient(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeactivatePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void DeactivatePatientAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.DeactivatePatientAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeactivatePatientAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeactivatePatientOperationCompleted == null)) {
                this.DeactivatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivatePatientOperationCompleted);
            }
            this.InvokeAsync("DeactivatePatient", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.DeactivatePatientOperationCompleted, userState);
        }
        
        private void OnDeactivatePatientOperationCompleted(object arg) {
            if ((this.DeactivatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivatePatientCompleted(this, new DeactivatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatientThirdParty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp UpdatePatientThirdParty(long PatientId, int ThirdPartyId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("UpdatePatientThirdParty", new object[] {
                        PatientId,
                        ThirdPartyId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientThirdPartyAsync(long PatientId, int ThirdPartyId, string Token, long UserId, long FacilityId) {
            this.UpdatePatientThirdPartyAsync(PatientId, ThirdPartyId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void UpdatePatientThirdPartyAsync(long PatientId, int ThirdPartyId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.UpdatePatientThirdPartyOperationCompleted == null)) {
                this.UpdatePatientThirdPartyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientThirdPartyOperationCompleted);
            }
            this.InvokeAsync("UpdatePatientThirdParty", new object[] {
                        PatientId,
                        ThirdPartyId,
                        Token,
                        UserId,
                        FacilityId}, this.UpdatePatientThirdPartyOperationCompleted, userState);
        }
        
        private void OnUpdatePatientThirdPartyOperationCompleted(object arg) {
            if ((this.UpdatePatientThirdPartyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientThirdPartyCompleted(this, new UpdatePatientThirdPartyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatientEMRSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp UpdatePatientEMRSystem(long PatientId, int EMRSystemId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("UpdatePatientEMRSystem", new object[] {
                        PatientId,
                        EMRSystemId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientEMRSystemAsync(long PatientId, int EMRSystemId, string Token, long UserId, long FacilityId) {
            this.UpdatePatientEMRSystemAsync(PatientId, EMRSystemId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void UpdatePatientEMRSystemAsync(long PatientId, int EMRSystemId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.UpdatePatientEMRSystemOperationCompleted == null)) {
                this.UpdatePatientEMRSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientEMRSystemOperationCompleted);
            }
            this.InvokeAsync("UpdatePatientEMRSystem", new object[] {
                        PatientId,
                        EMRSystemId,
                        Token,
                        UserId,
                        FacilityId}, this.UpdatePatientEMRSystemOperationCompleted, userState);
        }
        
        private void OnUpdatePatientEMRSystemOperationCompleted(object arg) {
            if ((this.UpdatePatientEMRSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientEMRSystemCompleted(this, new UpdatePatientEMRSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePatientEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp ChangePatientEmail(long PatientId, string Email, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("ChangePatientEmail", new object[] {
                        PatientId,
                        Email,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePatientEmailAsync(long PatientId, string Email, string Token, long UserId, long FacilityId) {
            this.ChangePatientEmailAsync(PatientId, Email, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void ChangePatientEmailAsync(long PatientId, string Email, string Token, long UserId, long FacilityId, object userState) {
            if ((this.ChangePatientEmailOperationCompleted == null)) {
                this.ChangePatientEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePatientEmailOperationCompleted);
            }
            this.InvokeAsync("ChangePatientEmail", new object[] {
                        PatientId,
                        Email,
                        Token,
                        UserId,
                        FacilityId}, this.ChangePatientEmailOperationCompleted, userState);
        }
        
        private void OnChangePatientEmailOperationCompleted(object arg) {
            if ((this.ChangePatientEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePatientEmailCompleted(this, new ChangePatientEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientOrganData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientOrganData GetPatientOrganData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientOrganData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientOrganData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientOrganDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientOrganDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientOrganDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientOrganDataOperationCompleted == null)) {
                this.GetPatientOrganDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientOrganDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientOrganData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientOrganDataOperationCompleted, userState);
        }
        
        private void OnGetPatientOrganDataOperationCompleted(object arg) {
            if ((this.GetPatientOrganDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientOrganDataCompleted(this, new GetPatientOrganDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientOrganData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientOrganData SavePatientOrganData(PatientOrganData PatientOrganData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientOrganData", new object[] {
                        PatientOrganData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientOrganData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientOrganDataAsync(PatientOrganData PatientOrganData, string Token, long UserId, long FacilityId) {
            this.SavePatientOrganDataAsync(PatientOrganData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientOrganDataAsync(PatientOrganData PatientOrganData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientOrganDataOperationCompleted == null)) {
                this.SavePatientOrganDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientOrganDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientOrganData", new object[] {
                        PatientOrganData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientOrganDataOperationCompleted, userState);
        }
        
        private void OnSavePatientOrganDataOperationCompleted(object arg) {
            if ((this.SavePatientOrganDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientOrganDataCompleted(this, new SavePatientOrganDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientVisitData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVisitData GetPatientVisitData(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientVisitData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVisitData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientVisitDataAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientVisitDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientVisitDataAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientVisitDataOperationCompleted == null)) {
                this.GetPatientVisitDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientVisitDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientVisitData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientVisitDataOperationCompleted, userState);
        }
        
        private void OnGetPatientVisitDataOperationCompleted(object arg) {
            if ((this.GetPatientVisitDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientVisitDataCompleted(this, new GetPatientVisitDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientVisitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVisitTableData GetPatientVisitList(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientVisitList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVisitTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientVisitListAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientVisitListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientVisitListAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientVisitListOperationCompleted == null)) {
                this.GetPatientVisitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientVisitListOperationCompleted);
            }
            this.InvokeAsync("GetPatientVisitList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientVisitListOperationCompleted, userState);
        }
        
        private void OnGetPatientVisitListOperationCompleted(object arg) {
            if ((this.GetPatientVisitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientVisitListCompleted(this, new GetPatientVisitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestPatientVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVisitData GetLatestPatientVisit(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetLatestPatientVisit", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVisitData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestPatientVisitAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            this.GetLatestPatientVisitAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetLatestPatientVisitAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetLatestPatientVisitOperationCompleted == null)) {
                this.GetLatestPatientVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestPatientVisitOperationCompleted);
            }
            this.InvokeAsync("GetLatestPatientVisit", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetLatestPatientVisitOperationCompleted, userState);
        }
        
        private void OnGetLatestPatientVisitOperationCompleted(object arg) {
            if ((this.GetLatestPatientVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestPatientVisitCompleted(this, new GetLatestPatientVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VisitShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp VisitShare(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("VisitShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void VisitShareAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId) {
            this.VisitShareAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void VisitShareAsync(PatientVisitParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.VisitShareOperationCompleted == null)) {
                this.VisitShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVisitShareOperationCompleted);
            }
            this.InvokeAsync("VisitShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.VisitShareOperationCompleted, userState);
        }
        
        private void OnVisitShareOperationCompleted(object arg) {
            if ((this.VisitShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VisitShareCompleted(this, new VisitShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientFacilityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFacilityTableData GetPatientFacilityList(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientFacilityList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientFacilityTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFacilityListAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientFacilityListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientFacilityListAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientFacilityListOperationCompleted == null)) {
                this.GetPatientFacilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFacilityListOperationCompleted);
            }
            this.InvokeAsync("GetPatientFacilityList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientFacilityListOperationCompleted, userState);
        }
        
        private void OnGetPatientFacilityListOperationCompleted(object arg) {
            if ((this.GetPatientFacilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFacilityListCompleted(this, new GetPatientFacilityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientShareData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareData GetPatientShareData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientShareData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientShareDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientShareDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientShareDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientShareDataOperationCompleted == null)) {
                this.GetPatientShareDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientShareDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientShareData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientShareDataOperationCompleted, userState);
        }
        
        private void OnGetPatientShareDataOperationCompleted(object arg) {
            if ((this.GetPatientShareDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientShareDataCompleted(this, new GetPatientShareDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareDemographics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareDemographics(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareDemographics", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareDemographicsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareDemographicsAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareDemographicsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareDemographicsOperationCompleted == null)) {
                this.PatientShareDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareDemographicsOperationCompleted);
            }
            this.InvokeAsync("PatientShareDemographics", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareDemographicsOperationCompleted, userState);
        }
        
        private void OnPatientShareDemographicsOperationCompleted(object arg) {
            if ((this.PatientShareDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareDemographicsCompleted(this, new PatientShareDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareAllergy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareAllergy(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareAllergy", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareAllergyAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareAllergyAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareAllergyAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareAllergyOperationCompleted == null)) {
                this.PatientShareAllergyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareAllergyOperationCompleted);
            }
            this.InvokeAsync("PatientShareAllergy", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareAllergyOperationCompleted, userState);
        }
        
        private void OnPatientShareAllergyOperationCompleted(object arg) {
            if ((this.PatientShareAllergyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareAllergyCompleted(this, new PatientShareAllergyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareFamilyHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareFamilyHistory(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareFamilyHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareFamilyHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareFamilyHistoryAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareFamilyHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareFamilyHistoryOperationCompleted == null)) {
                this.PatientShareFamilyHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareFamilyHistoryOperationCompleted);
            }
            this.InvokeAsync("PatientShareFamilyHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareFamilyHistoryOperationCompleted, userState);
        }
        
        private void OnPatientShareFamilyHistoryOperationCompleted(object arg) {
            if ((this.PatientShareFamilyHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareFamilyHistoryCompleted(this, new PatientShareFamilyHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareLabResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareLabResults(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareLabResults", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareLabResultsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareLabResultsAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareLabResultsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareLabResultsOperationCompleted == null)) {
                this.PatientShareLabResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareLabResultsOperationCompleted);
            }
            this.InvokeAsync("PatientShareLabResults", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareLabResultsOperationCompleted, userState);
        }
        
        private void OnPatientShareLabResultsOperationCompleted(object arg) {
            if ((this.PatientShareLabResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareLabResultsCompleted(this, new PatientShareLabResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareMedicalHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareMedicalHistory(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareMedicalHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareMedicalHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareMedicalHistoryAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareMedicalHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareMedicalHistoryOperationCompleted == null)) {
                this.PatientShareMedicalHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareMedicalHistoryOperationCompleted);
            }
            this.InvokeAsync("PatientShareMedicalHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareMedicalHistoryOperationCompleted, userState);
        }
        
        private void OnPatientShareMedicalHistoryOperationCompleted(object arg) {
            if ((this.PatientShareMedicalHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareMedicalHistoryCompleted(this, new PatientShareMedicalHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareMedication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareMedication(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareMedication", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareMedicationAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareMedicationAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareMedicationAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareMedicationOperationCompleted == null)) {
                this.PatientShareMedicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareMedicationOperationCompleted);
            }
            this.InvokeAsync("PatientShareMedication", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareMedicationOperationCompleted, userState);
        }
        
        private void OnPatientShareMedicationOperationCompleted(object arg) {
            if ((this.PatientShareMedicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareMedicationCompleted(this, new PatientShareMedicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareProblem(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareProblem", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareProblemAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareProblemAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareProblemAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareProblemOperationCompleted == null)) {
                this.PatientShareProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareProblemOperationCompleted);
            }
            this.InvokeAsync("PatientShareProblem", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareProblemOperationCompleted, userState);
        }
        
        private void OnPatientShareProblemOperationCompleted(object arg) {
            if ((this.PatientShareProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareProblemCompleted(this, new PatientShareProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareProcedure(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareProcedure", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareProcedureAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareProcedureAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareProcedureAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareProcedureOperationCompleted == null)) {
                this.PatientShareProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareProcedureOperationCompleted);
            }
            this.InvokeAsync("PatientShareProcedure", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareProcedureOperationCompleted, userState);
        }
        
        private void OnPatientShareProcedureOperationCompleted(object arg) {
            if ((this.PatientShareProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareProcedureCompleted(this, new PatientShareProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareSocialHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareSocialHistory(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareSocialHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareSocialHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareSocialHistoryAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareSocialHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareSocialHistoryOperationCompleted == null)) {
                this.PatientShareSocialHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareSocialHistoryOperationCompleted);
            }
            this.InvokeAsync("PatientShareSocialHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareSocialHistoryOperationCompleted, userState);
        }
        
        private void OnPatientShareSocialHistoryOperationCompleted(object arg) {
            if ((this.PatientShareSocialHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareSocialHistoryCompleted(this, new PatientShareSocialHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareSurgicalHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareSurgicalHistory(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareSurgicalHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareSurgicalHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareSurgicalHistoryAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareSurgicalHistoryAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareSurgicalHistoryOperationCompleted == null)) {
                this.PatientShareSurgicalHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareSurgicalHistoryOperationCompleted);
            }
            this.InvokeAsync("PatientShareSurgicalHistory", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareSurgicalHistoryOperationCompleted, userState);
        }
        
        private void OnPatientShareSurgicalHistoryOperationCompleted(object arg) {
            if ((this.PatientShareSurgicalHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareSurgicalHistoryCompleted(this, new PatientShareSurgicalHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareVitalSigns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareVitalSigns(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareVitalSigns", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareVitalSignsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareVitalSignsAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareVitalSignsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareVitalSignsOperationCompleted == null)) {
                this.PatientShareVitalSignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareVitalSignsOperationCompleted);
            }
            this.InvokeAsync("PatientShareVitalSigns", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareVitalSignsOperationCompleted, userState);
        }
        
        private void OnPatientShareVitalSignsOperationCompleted(object arg) {
            if ((this.PatientShareVitalSignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareVitalSignsCompleted(this, new PatientShareVitalSignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareImmunization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareImmunization(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareImmunization", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareImmunizationAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareImmunizationAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareImmunizationAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareImmunizationOperationCompleted == null)) {
                this.PatientShareImmunizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareImmunizationOperationCompleted);
            }
            this.InvokeAsync("PatientShareImmunization", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareImmunizationOperationCompleted, userState);
        }
        
        private void OnPatientShareImmunizationOperationCompleted(object arg) {
            if ((this.PatientShareImmunizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareImmunizationCompleted(this, new PatientShareImmunizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareOrgan(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareOrgan", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareOrganAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareOrganAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareOrganAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareOrganOperationCompleted == null)) {
                this.PatientShareOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareOrganOperationCompleted);
            }
            this.InvokeAsync("PatientShareOrgan", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareOrganOperationCompleted, userState);
        }
        
        private void OnPatientShareOrganOperationCompleted(object arg) {
            if ((this.PatientShareOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareOrganCompleted(this, new PatientShareOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareClinicalDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareClinicalDoc(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareClinicalDoc", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareClinicalDocAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareClinicalDocAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareClinicalDocAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareClinicalDocOperationCompleted == null)) {
                this.PatientShareClinicalDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareClinicalDocOperationCompleted);
            }
            this.InvokeAsync("PatientShareClinicalDoc", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareClinicalDocOperationCompleted, userState);
        }
        
        private void OnPatientShareClinicalDocOperationCompleted(object arg) {
            if ((this.PatientShareClinicalDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareClinicalDocCompleted(this, new PatientShareClinicalDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareInsurance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareInsurance(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareInsurance", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareInsuranceAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareInsuranceAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareInsuranceAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareInsuranceOperationCompleted == null)) {
                this.PatientShareInsuranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareInsuranceOperationCompleted);
            }
            this.InvokeAsync("PatientShareInsurance", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareInsuranceOperationCompleted, userState);
        }
        
        private void OnPatientShareInsuranceOperationCompleted(object arg) {
            if ((this.PatientShareInsuranceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareInsuranceCompleted(this, new PatientShareInsuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareEmergencyContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareEmergencyContact(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareEmergencyContact", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareEmergencyContactAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareEmergencyContactAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareEmergencyContactAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareEmergencyContactOperationCompleted == null)) {
                this.PatientShareEmergencyContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareEmergencyContactOperationCompleted);
            }
            this.InvokeAsync("PatientShareEmergencyContact", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareEmergencyContactOperationCompleted, userState);
        }
        
        private void OnPatientShareEmergencyContactOperationCompleted(object arg) {
            if ((this.PatientShareEmergencyContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareEmergencyContactCompleted(this, new PatientShareEmergencyContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareAppointment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareAppointment(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareAppointment", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareAppointmentAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareAppointmentAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareAppointmentAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareAppointmentOperationCompleted == null)) {
                this.PatientShareAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareAppointmentOperationCompleted);
            }
            this.InvokeAsync("PatientShareAppointment", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareAppointmentOperationCompleted, userState);
        }
        
        private void OnPatientShareAppointmentOperationCompleted(object arg) {
            if ((this.PatientShareAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareAppointmentCompleted(this, new PatientShareAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareVisit(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareVisit", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareVisitAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareVisitAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareVisitAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareVisitOperationCompleted == null)) {
                this.PatientShareVisitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareVisitOperationCompleted);
            }
            this.InvokeAsync("PatientShareVisit", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareVisitOperationCompleted, userState);
        }
        
        private void OnPatientShareVisitOperationCompleted(object arg) {
            if ((this.PatientShareVisitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareVisitCompleted(this, new PatientShareVisitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareUploadDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareUploadDocs(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareUploadDocs", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareUploadDocsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareUploadDocsAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareUploadDocsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareUploadDocsOperationCompleted == null)) {
                this.PatientShareUploadDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareUploadDocsOperationCompleted);
            }
            this.InvokeAsync("PatientShareUploadDocs", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareUploadDocsOperationCompleted, userState);
        }
        
        private void OnPatientShareUploadDocsOperationCompleted(object arg) {
            if ((this.PatientShareUploadDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareUploadDocsCompleted(this, new PatientShareUploadDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientSharePlanOfCare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientSharePlanOfCare(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientSharePlanOfCare", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientSharePlanOfCareAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientSharePlanOfCareAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientSharePlanOfCareAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientSharePlanOfCareOperationCompleted == null)) {
                this.PatientSharePlanOfCareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientSharePlanOfCareOperationCompleted);
            }
            this.InvokeAsync("PatientSharePlanOfCare", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientSharePlanOfCareOperationCompleted, userState);
        }
        
        private void OnPatientSharePlanOfCareOperationCompleted(object arg) {
            if ((this.PatientSharePlanOfCareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientSharePlanOfCareCompleted(this, new PatientSharePlanOfCareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientShareClinicalInstructions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientShareResp PatientShareClinicalInstructions(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientShareClinicalInstructions", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientShareResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientShareClinicalInstructionsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId) {
            this.PatientShareClinicalInstructionsAsync(PatientId, Share, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientShareClinicalInstructionsAsync(long PatientId, bool Share, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientShareClinicalInstructionsOperationCompleted == null)) {
                this.PatientShareClinicalInstructionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientShareClinicalInstructionsOperationCompleted);
            }
            this.InvokeAsync("PatientShareClinicalInstructions", new object[] {
                        PatientId,
                        Share,
                        Token,
                        UserId,
                        FacilityId}, this.PatientShareClinicalInstructionsOperationCompleted, userState);
        }
        
        private void OnPatientShareClinicalInstructionsOperationCompleted(object arg) {
            if ((this.PatientShareClinicalInstructionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientShareClinicalInstructionsCompleted(this, new PatientShareClinicalInstructionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientAccountLinkData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAccountLinkData SavePatientAccountLinkData(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientAccountLinkData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAccountLinkData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientAccountLinkDataAsync(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId) {
            this.SavePatientAccountLinkDataAsync(PatientData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientAccountLinkDataAsync(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientAccountLinkDataOperationCompleted == null)) {
                this.SavePatientAccountLinkDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientAccountLinkDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientAccountLinkData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientAccountLinkDataOperationCompleted, userState);
        }
        
        private void OnSavePatientAccountLinkDataOperationCompleted(object arg) {
            if ((this.SavePatientAccountLinkDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientAccountLinkDataCompleted(this, new SavePatientAccountLinkDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientAccountLinkData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAccountLinkData DeletePatientAccountLinkData(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientAccountLinkData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAccountLinkData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAccountLinkDataAsync(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId) {
            this.DeletePatientAccountLinkDataAsync(PatientData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientAccountLinkDataAsync(PatientAccountLinkData PatientData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientAccountLinkDataOperationCompleted == null)) {
                this.DeletePatientAccountLinkDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientAccountLinkDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientAccountLinkData", new object[] {
                        PatientData,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientAccountLinkDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientAccountLinkDataOperationCompleted(object arg) {
            if ((this.DeletePatientAccountLinkDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientAccountLinkDataCompleted(this, new DeletePatientAccountLinkDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAccountLinkList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTableData GetPatientAccountLinkList(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientAccountLinkList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAccountLinkListAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientAccountLinkListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientAccountLinkListAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientAccountLinkListOperationCompleted == null)) {
                this.GetPatientAccountLinkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAccountLinkListOperationCompleted);
            }
            this.InvokeAsync("GetPatientAccountLinkList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientAccountLinkListOperationCompleted, userState);
        }
        
        private void OnGetPatientAccountLinkListOperationCompleted(object arg) {
            if ((this.GetPatientAccountLinkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAccountLinkListCompleted(this, new GetPatientAccountLinkListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAccountLinkParentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTableData GetPatientAccountLinkParentList(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientAccountLinkParentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAccountLinkParentListAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientAccountLinkParentListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientAccountLinkParentListAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientAccountLinkParentListOperationCompleted == null)) {
                this.GetPatientAccountLinkParentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAccountLinkParentListOperationCompleted);
            }
            this.InvokeAsync("GetPatientAccountLinkParentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientAccountLinkParentListOperationCompleted, userState);
        }
        
        private void OnGetPatientAccountLinkParentListOperationCompleted(object arg) {
            if ((this.GetPatientAccountLinkParentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAccountLinkParentListCompleted(this, new GetPatientAccountLinkParentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientWebSettingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientWebSettingData GetPatientWebSettingData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientWebSettingData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientWebSettingData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientWebSettingDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientWebSettingDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientWebSettingDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientWebSettingDataOperationCompleted == null)) {
                this.GetPatientWebSettingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientWebSettingDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientWebSettingData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientWebSettingDataOperationCompleted, userState);
        }
        
        private void OnGetPatientWebSettingDataOperationCompleted(object arg) {
            if ((this.GetPatientWebSettingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientWebSettingDataCompleted(this, new GetPatientWebSettingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientWebSettingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientWebSettingData SavePatientWebSettingData(PatientWebSettingData PatientWebSettingData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientWebSettingData", new object[] {
                        PatientWebSettingData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientWebSettingData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientWebSettingDataAsync(PatientWebSettingData PatientWebSettingData, string Token, long UserId, long FacilityId) {
            this.SavePatientWebSettingDataAsync(PatientWebSettingData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientWebSettingDataAsync(PatientWebSettingData PatientWebSettingData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientWebSettingDataOperationCompleted == null)) {
                this.SavePatientWebSettingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientWebSettingDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientWebSettingData", new object[] {
                        PatientWebSettingData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientWebSettingDataOperationCompleted, userState);
        }
        
        private void OnSavePatientWebSettingDataOperationCompleted(object arg) {
            if ((this.SavePatientWebSettingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientWebSettingDataCompleted(this, new SavePatientWebSettingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientImageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientImageData GetPatientImageData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientImageData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientImageData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientImageDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientImageDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientImageDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientImageDataOperationCompleted == null)) {
                this.GetPatientImageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientImageDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientImageData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientImageDataOperationCompleted, userState);
        }
        
        private void OnGetPatientImageDataOperationCompleted(object arg) {
            if ((this.GetPatientImageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientImageDataCompleted(this, new GetPatientImageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientmageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientImageData SavePatientmageData(PatientImageData ImageData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientmageData", new object[] {
                        ImageData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientImageData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientmageDataAsync(PatientImageData ImageData, string Token, long UserId, long FacilityId) {
            this.SavePatientmageDataAsync(ImageData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientmageDataAsync(PatientImageData ImageData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientmageDataOperationCompleted == null)) {
                this.SavePatientmageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientmageDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientmageData", new object[] {
                        ImageData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientmageDataOperationCompleted, userState);
        }
        
        private void OnSavePatientmageDataOperationCompleted(object arg) {
            if ((this.SavePatientmageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientmageDataCompleted(this, new SavePatientmageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientRepData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientRepData GetPatientRepData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientRepData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientRepData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientRepDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientRepDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientRepDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientRepDataOperationCompleted == null)) {
                this.GetPatientRepDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientRepDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientRepData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientRepDataOperationCompleted, userState);
        }
        
        private void OnGetPatientRepDataOperationCompleted(object arg) {
            if ((this.GetPatientRepDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientRepDataCompleted(this, new GetPatientRepDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientRepData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientRepData SavePatientRepData(PatientRepData PatientRepData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientRepData", new object[] {
                        PatientRepData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientRepData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientRepDataAsync(PatientRepData PatientRepData, string Token, long UserId, long FacilityId) {
            this.SavePatientRepDataAsync(PatientRepData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientRepDataAsync(PatientRepData PatientRepData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientRepDataOperationCompleted == null)) {
                this.SavePatientRepDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientRepDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientRepData", new object[] {
                        PatientRepData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientRepDataOperationCompleted, userState);
        }
        
        private void OnSavePatientRepDataOperationCompleted(object arg) {
            if ((this.SavePatientRepDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientRepDataCompleted(this, new SavePatientRepDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCareProviderData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CareProviderData GetCareProviderData(PatientParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetCareProviderData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((CareProviderData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCareProviderDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId) {
            this.GetCareProviderDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetCareProviderDataAsync(PatientParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetCareProviderDataOperationCompleted == null)) {
                this.GetCareProviderDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCareProviderDataOperationCompleted);
            }
            this.InvokeAsync("GetCareProviderData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetCareProviderDataOperationCompleted, userState);
        }
        
        private void OnGetCareProviderDataOperationCompleted(object arg) {
            if ((this.GetCareProviderDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCareProviderDataCompleted(this, new GetCareProviderDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCareProviderData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CareProviderData SaveCareProviderData(CareProviderData CareProviderData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SaveCareProviderData", new object[] {
                        CareProviderData,
                        Token,
                        UserId,
                        FacilityId});
            return ((CareProviderData)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCareProviderDataAsync(CareProviderData CareProviderData, string Token, long UserId, long FacilityId) {
            this.SaveCareProviderDataAsync(CareProviderData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SaveCareProviderDataAsync(CareProviderData CareProviderData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SaveCareProviderDataOperationCompleted == null)) {
                this.SaveCareProviderDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCareProviderDataOperationCompleted);
            }
            this.InvokeAsync("SaveCareProviderData", new object[] {
                        CareProviderData,
                        Token,
                        UserId,
                        FacilityId}, this.SaveCareProviderDataOperationCompleted, userState);
        }
        
        private void OnSaveCareProviderDataOperationCompleted(object arg) {
            if ((this.SaveCareProviderDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCareProviderDataCompleted(this, new SaveCareProviderDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientForFacilityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTableData GetPatientForFacilityList(long CkFacilityId, string FirstName, string LastName, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientForFacilityList", new object[] {
                        CkFacilityId,
                        FirstName,
                        LastName,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientForFacilityListAsync(long CkFacilityId, string FirstName, string LastName, string Token, long UserId, long FacilityId) {
            this.GetPatientForFacilityListAsync(CkFacilityId, FirstName, LastName, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientForFacilityListAsync(long CkFacilityId, string FirstName, string LastName, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientForFacilityListOperationCompleted == null)) {
                this.GetPatientForFacilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientForFacilityListOperationCompleted);
            }
            this.InvokeAsync("GetPatientForFacilityList", new object[] {
                        CkFacilityId,
                        FirstName,
                        LastName,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientForFacilityListOperationCompleted, userState);
        }
        
        private void OnGetPatientForFacilityListOperationCompleted(object arg) {
            if ((this.GetPatientForFacilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientForFacilityListCompleted(this, new GetPatientForFacilityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientFacilityOptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFacilityOptionsData GetPatientFacilityOptions(long CkPatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientFacilityOptions", new object[] {
                        CkPatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientFacilityOptionsData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFacilityOptionsAsync(long CkPatientId, string Token, long UserId, long FacilityId) {
            this.GetPatientFacilityOptionsAsync(CkPatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientFacilityOptionsAsync(long CkPatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientFacilityOptionsOperationCompleted == null)) {
                this.GetPatientFacilityOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFacilityOptionsOperationCompleted);
            }
            this.InvokeAsync("GetPatientFacilityOptions", new object[] {
                        CkPatientId,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientFacilityOptionsOperationCompleted, userState);
        }
        
        private void OnGetPatientFacilityOptionsOperationCompleted(object arg) {
            if ((this.GetPatientFacilityOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFacilityOptionsCompleted(this, new GetPatientFacilityOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOutsideProviderEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientResp SendOutsideProviderEmail(CareProviderEmail CPData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SendOutsideProviderEmail", new object[] {
                        CPData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientResp)(results[0]));
        }
        
        /// <remarks/>
        public void SendOutsideProviderEmailAsync(CareProviderEmail CPData, string Token, long UserId, long FacilityId) {
            this.SendOutsideProviderEmailAsync(CPData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SendOutsideProviderEmailAsync(CareProviderEmail CPData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SendOutsideProviderEmailOperationCompleted == null)) {
                this.SendOutsideProviderEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOutsideProviderEmailOperationCompleted);
            }
            this.InvokeAsync("SendOutsideProviderEmail", new object[] {
                        CPData,
                        Token,
                        UserId,
                        FacilityId}, this.SendOutsideProviderEmailOperationCompleted, userState);
        }
        
        private void OnSendOutsideProviderEmailOperationCompleted(object arg) {
            if ((this.SendOutsideProviderEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOutsideProviderEmailCompleted(this, new SendOutsideProviderEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillRateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillRateData GetBillRateData(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBillRateData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillRateData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillRateDataAsync(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            this.GetBillRateDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBillRateDataAsync(BillRateParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBillRateDataOperationCompleted == null)) {
                this.GetBillRateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillRateDataOperationCompleted);
            }
            this.InvokeAsync("GetBillRateData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetBillRateDataOperationCompleted, userState);
        }
        
        private void OnGetBillRateDataOperationCompleted(object arg) {
            if ((this.GetBillRateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillRateDataCompleted(this, new GetBillRateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillRateDataByPromo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillRateData GetBillRateDataByPromo(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBillRateDataByPromo", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillRateData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillRateDataByPromoAsync(BillRateParms Parms, string Token, long UserId, long FacilityId) {
            this.GetBillRateDataByPromoAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBillRateDataByPromoAsync(BillRateParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBillRateDataByPromoOperationCompleted == null)) {
                this.GetBillRateDataByPromoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillRateDataByPromoOperationCompleted);
            }
            this.InvokeAsync("GetBillRateDataByPromo", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetBillRateDataByPromoOperationCompleted, userState);
        }
        
        private void OnGetBillRateDataByPromoOperationCompleted(object arg) {
            if ((this.GetBillRateDataByPromoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillRateDataByPromoCompleted(this, new GetBillRateDataByPromoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveBillRateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillRateData SaveBillRateData(BillRateData BillRate, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SaveBillRateData", new object[] {
                        BillRate,
                        Token,
                        UserId,
                        FacilityId});
            return ((BillRateData)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBillRateDataAsync(BillRateData BillRate, string Token, long UserId, long FacilityId) {
            this.SaveBillRateDataAsync(BillRate, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SaveBillRateDataAsync(BillRateData BillRate, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SaveBillRateDataOperationCompleted == null)) {
                this.SaveBillRateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBillRateDataOperationCompleted);
            }
            this.InvokeAsync("SaveBillRateData", new object[] {
                        BillRate,
                        Token,
                        UserId,
                        FacilityId}, this.SaveBillRateDataOperationCompleted, userState);
        }
        
        private void OnSaveBillRateDataOperationCompleted(object arg) {
            if ((this.SaveBillRateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBillRateDataCompleted(this, new SaveBillRateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillRateParms {
        
        private int optionField;
        
        private int billRateIdField;
        
        private string promoCodeField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public int BillRateId {
            get {
                return this.billRateIdField;
            }
            set {
                this.billRateIdField = value;
            }
        }
        
        /// <remarks/>
        public string PromoCode {
            get {
                return this.promoCodeField;
            }
            set {
                this.promoCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillRateData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private int billRateIdField;
        
        private string promoCodeField;
        
        private bool activeField;
        
        private bool isFreeField;
        
        private decimal rateField;
        
        private decimal renewalField;
        
        private decimal residualField;
        
        private int freeMonthsField;
        
        private long userId_CreatedField;
        
        private string dateCreatedField;
        
        private long userId_ModifiedField;
        
        private string dateModifiedField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int BillRateId {
            get {
                return this.billRateIdField;
            }
            set {
                this.billRateIdField = value;
            }
        }
        
        /// <remarks/>
        public string PromoCode {
            get {
                return this.promoCodeField;
            }
            set {
                this.promoCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFree {
            get {
                return this.isFreeField;
            }
            set {
                this.isFreeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Renewal {
            get {
                return this.renewalField;
            }
            set {
                this.renewalField = value;
            }
        }
        
        /// <remarks/>
        public decimal Residual {
            get {
                return this.residualField;
            }
            set {
                this.residualField = value;
            }
        }
        
        /// <remarks/>
        public int FreeMonths {
            get {
                return this.freeMonthsField;
            }
            set {
                this.freeMonthsField = value;
            }
        }
        
        /// <remarks/>
        public long UserId_Created {
            get {
                return this.userId_CreatedField;
            }
            set {
                this.userId_CreatedField = value;
            }
        }
        
        /// <remarks/>
        public string DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public long UserId_Modified {
            get {
                return this.userId_ModifiedField;
            }
            set {
                this.userId_ModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CareProviderEmail {
        
        private long userIdField;
        
        private long patientIdField;
        
        private string patientNameField;
        
        private string passwordField;
        
        private string emailAddressField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientFacilityOptionsData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private bool generalMessageAvailableField;
        
        private bool appointmentMessageAvailableField;
        
        private bool medicationMessageAvailableField;
        
        private bool referralMessageAvailableField;
        
        private bool premiumAvailableField;
        
        private bool onlineBillPaymentField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public bool GeneralMessageAvailable {
            get {
                return this.generalMessageAvailableField;
            }
            set {
                this.generalMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool AppointmentMessageAvailable {
            get {
                return this.appointmentMessageAvailableField;
            }
            set {
                this.appointmentMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool MedicationMessageAvailable {
            get {
                return this.medicationMessageAvailableField;
            }
            set {
                this.medicationMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool ReferralMessageAvailable {
            get {
                return this.referralMessageAvailableField;
            }
            set {
                this.referralMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool PremiumAvailable {
            get {
                return this.premiumAvailableField;
            }
            set {
                this.premiumAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool OnlineBillPayment {
            get {
                return this.onlineBillPaymentField;
            }
            set {
                this.onlineBillPaymentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CareProviderData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long userIdField;
        
        private long patientIdField;
        
        private string passwordField;
        
        private string patientFullNameField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFullName {
            get {
                return this.patientFullNameField;
            }
            set {
                this.patientFullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientRepData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long userIdField;
        
        private long patientIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string eMailField;
        
        private bool enabledField;
        
        private bool demographicsField;
        
        private bool allergyField;
        
        private bool familyHistoryField;
        
        private bool labResultsField;
        
        private bool medicalHistoryField;
        
        private bool medicationField;
        
        private bool problemField;
        
        private bool procedureField;
        
        private bool socialHistoryField;
        
        private bool surgicalHistoryField;
        
        private bool vitalSignsField;
        
        private bool immunizationField;
        
        private bool organField;
        
        private bool clinicalDocField;
        
        private bool insuranceField;
        
        private bool emergencyContactField;
        
        private bool appointmentField;
        
        private bool visitField;
        
        private bool uploadDocsField;
        
        private bool planOfCareField;
        
        private bool messagingField;
        
        private bool downloadTransmitField;
        
        private bool clinicalSummaryField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public bool Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
            }
        }
        
        /// <remarks/>
        public bool FamilyHistory {
            get {
                return this.familyHistoryField;
            }
            set {
                this.familyHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool LabResults {
            get {
                return this.labResultsField;
            }
            set {
                this.labResultsField = value;
            }
        }
        
        /// <remarks/>
        public bool MedicalHistory {
            get {
                return this.medicalHistoryField;
            }
            set {
                this.medicalHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
        
        /// <remarks/>
        public bool Procedure {
            get {
                return this.procedureField;
            }
            set {
                this.procedureField = value;
            }
        }
        
        /// <remarks/>
        public bool SocialHistory {
            get {
                return this.socialHistoryField;
            }
            set {
                this.socialHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool SurgicalHistory {
            get {
                return this.surgicalHistoryField;
            }
            set {
                this.surgicalHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool VitalSigns {
            get {
                return this.vitalSignsField;
            }
            set {
                this.vitalSignsField = value;
            }
        }
        
        /// <remarks/>
        public bool Immunization {
            get {
                return this.immunizationField;
            }
            set {
                this.immunizationField = value;
            }
        }
        
        /// <remarks/>
        public bool Organ {
            get {
                return this.organField;
            }
            set {
                this.organField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalDoc {
            get {
                return this.clinicalDocField;
            }
            set {
                this.clinicalDocField = value;
            }
        }
        
        /// <remarks/>
        public bool Insurance {
            get {
                return this.insuranceField;
            }
            set {
                this.insuranceField = value;
            }
        }
        
        /// <remarks/>
        public bool EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
            }
        }
        
        /// <remarks/>
        public bool Appointment {
            get {
                return this.appointmentField;
            }
            set {
                this.appointmentField = value;
            }
        }
        
        /// <remarks/>
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
            }
        }
        
        /// <remarks/>
        public bool UploadDocs {
            get {
                return this.uploadDocsField;
            }
            set {
                this.uploadDocsField = value;
            }
        }
        
        /// <remarks/>
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
            }
        }
        
        /// <remarks/>
        public bool Messaging {
            get {
                return this.messagingField;
            }
            set {
                this.messagingField = value;
            }
        }
        
        /// <remarks/>
        public bool DownloadTransmit {
            get {
                return this.downloadTransmitField;
            }
            set {
                this.downloadTransmitField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalSummary {
            get {
                return this.clinicalSummaryField;
            }
            set {
                this.clinicalSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientImageData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private byte[] imageField;
        
        private string imageFormatField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string ImageFormat {
            get {
                return this.imageFormatField;
            }
            set {
                this.imageFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientWebSettingData {
        
        private bool validField;
        
        private long optionField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private short visitWidgetLeftField;
        
        private short visitWidgetRightField;
        
        private short allergyWidgetLeftField;
        
        private short allergyWidgetRightField;
        
        private short appointmentsWidgetLeftField;
        
        private short appointmentsWidgetRightField;
        
        private short clinicalDocWidgetLeftField;
        
        private short clinicalDocWidgetRightField;
        
        private short familyWidgetLeftField;
        
        private short familyWidgetRightField;
        
        private short immunizationWidgetLeftField;
        
        private short immunizationWidgetRightField;
        
        private short insuranceWidgetLeftField;
        
        private short insuranceWidgetRightField;
        
        private short labTestWidgetLeftField;
        
        private short labTestWidgetRightField;
        
        private short medicationWidgetLeftField;
        
        private short medicationWidgetRightField;
        
        private short pastMedicalWidgetLeftField;
        
        private short pastMedicalWidgetRightField;
        
        private short problemWidgetLeftField;
        
        private short problemWidgetRightField;
        
        private short procedureWidgetLeftField;
        
        private short procedureWidgetRightField;
        
        private short socialWidgetLeftField;
        
        private short socialWidgetRightField;
        
        private short surgicalWidgetLeftField;
        
        private short surgicalWidgetRightField;
        
        private short vitalSignsWidgetLeftField;
        
        private short vitalSignsWidgetRightField;
        
        private short premiumWidgetLeftField;
        
        private short premiumWidgetRightField;
        
        private short statementWidgetLeftField;
        
        private short statementWidgetRightField;
        
        private short documentWidgetLeftField;
        
        private short documentWidgetRightField;
        
        private short planOfCareWidgetLeftField;
        
        private short planOfCareWidgetRightField;
        
        private short clinicalInstructionsWidgetLeftField;
        
        private short clinicalInstructionsWidgetRightField;
        
        private short providerWidgetLeftField;
        
        private short providerWidgetRightField;
        
        private bool emailNotifyNewMessageField;
        
        private bool textNotifyNewMesssageField;
        
        private int cellCarrierField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public long Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public short VisitWidgetLeft {
            get {
                return this.visitWidgetLeftField;
            }
            set {
                this.visitWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short VisitWidgetRight {
            get {
                return this.visitWidgetRightField;
            }
            set {
                this.visitWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short AllergyWidgetLeft {
            get {
                return this.allergyWidgetLeftField;
            }
            set {
                this.allergyWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short AllergyWidgetRight {
            get {
                return this.allergyWidgetRightField;
            }
            set {
                this.allergyWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short AppointmentsWidgetLeft {
            get {
                return this.appointmentsWidgetLeftField;
            }
            set {
                this.appointmentsWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short AppointmentsWidgetRight {
            get {
                return this.appointmentsWidgetRightField;
            }
            set {
                this.appointmentsWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ClinicalDocWidgetLeft {
            get {
                return this.clinicalDocWidgetLeftField;
            }
            set {
                this.clinicalDocWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ClinicalDocWidgetRight {
            get {
                return this.clinicalDocWidgetRightField;
            }
            set {
                this.clinicalDocWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short FamilyWidgetLeft {
            get {
                return this.familyWidgetLeftField;
            }
            set {
                this.familyWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short FamilyWidgetRight {
            get {
                return this.familyWidgetRightField;
            }
            set {
                this.familyWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ImmunizationWidgetLeft {
            get {
                return this.immunizationWidgetLeftField;
            }
            set {
                this.immunizationWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ImmunizationWidgetRight {
            get {
                return this.immunizationWidgetRightField;
            }
            set {
                this.immunizationWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short InsuranceWidgetLeft {
            get {
                return this.insuranceWidgetLeftField;
            }
            set {
                this.insuranceWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short InsuranceWidgetRight {
            get {
                return this.insuranceWidgetRightField;
            }
            set {
                this.insuranceWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short LabTestWidgetLeft {
            get {
                return this.labTestWidgetLeftField;
            }
            set {
                this.labTestWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short LabTestWidgetRight {
            get {
                return this.labTestWidgetRightField;
            }
            set {
                this.labTestWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short MedicationWidgetLeft {
            get {
                return this.medicationWidgetLeftField;
            }
            set {
                this.medicationWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short MedicationWidgetRight {
            get {
                return this.medicationWidgetRightField;
            }
            set {
                this.medicationWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short PastMedicalWidgetLeft {
            get {
                return this.pastMedicalWidgetLeftField;
            }
            set {
                this.pastMedicalWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short PastMedicalWidgetRight {
            get {
                return this.pastMedicalWidgetRightField;
            }
            set {
                this.pastMedicalWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ProblemWidgetLeft {
            get {
                return this.problemWidgetLeftField;
            }
            set {
                this.problemWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ProblemWidgetRight {
            get {
                return this.problemWidgetRightField;
            }
            set {
                this.problemWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ProcedureWidgetLeft {
            get {
                return this.procedureWidgetLeftField;
            }
            set {
                this.procedureWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ProcedureWidgetRight {
            get {
                return this.procedureWidgetRightField;
            }
            set {
                this.procedureWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short SocialWidgetLeft {
            get {
                return this.socialWidgetLeftField;
            }
            set {
                this.socialWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short SocialWidgetRight {
            get {
                return this.socialWidgetRightField;
            }
            set {
                this.socialWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short SurgicalWidgetLeft {
            get {
                return this.surgicalWidgetLeftField;
            }
            set {
                this.surgicalWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short SurgicalWidgetRight {
            get {
                return this.surgicalWidgetRightField;
            }
            set {
                this.surgicalWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short VitalSignsWidgetLeft {
            get {
                return this.vitalSignsWidgetLeftField;
            }
            set {
                this.vitalSignsWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short VitalSignsWidgetRight {
            get {
                return this.vitalSignsWidgetRightField;
            }
            set {
                this.vitalSignsWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short PremiumWidgetLeft {
            get {
                return this.premiumWidgetLeftField;
            }
            set {
                this.premiumWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short PremiumWidgetRight {
            get {
                return this.premiumWidgetRightField;
            }
            set {
                this.premiumWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short StatementWidgetLeft {
            get {
                return this.statementWidgetLeftField;
            }
            set {
                this.statementWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short StatementWidgetRight {
            get {
                return this.statementWidgetRightField;
            }
            set {
                this.statementWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short DocumentWidgetLeft {
            get {
                return this.documentWidgetLeftField;
            }
            set {
                this.documentWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short DocumentWidgetRight {
            get {
                return this.documentWidgetRightField;
            }
            set {
                this.documentWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short PlanOfCareWidgetLeft {
            get {
                return this.planOfCareWidgetLeftField;
            }
            set {
                this.planOfCareWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short PlanOfCareWidgetRight {
            get {
                return this.planOfCareWidgetRightField;
            }
            set {
                this.planOfCareWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ClinicalInstructionsWidgetLeft {
            get {
                return this.clinicalInstructionsWidgetLeftField;
            }
            set {
                this.clinicalInstructionsWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ClinicalInstructionsWidgetRight {
            get {
                return this.clinicalInstructionsWidgetRightField;
            }
            set {
                this.clinicalInstructionsWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public short ProviderWidgetLeft {
            get {
                return this.providerWidgetLeftField;
            }
            set {
                this.providerWidgetLeftField = value;
            }
        }
        
        /// <remarks/>
        public short ProviderWidgetRight {
            get {
                return this.providerWidgetRightField;
            }
            set {
                this.providerWidgetRightField = value;
            }
        }
        
        /// <remarks/>
        public bool EmailNotifyNewMessage {
            get {
                return this.emailNotifyNewMessageField;
            }
            set {
                this.emailNotifyNewMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool TextNotifyNewMesssage {
            get {
                return this.textNotifyNewMesssageField;
            }
            set {
                this.textNotifyNewMesssageField = value;
            }
        }
        
        /// <remarks/>
        public int CellCarrier {
            get {
                return this.cellCarrierField;
            }
            set {
                this.cellCarrierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAccountLinkData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientId_LinkedField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId_Linked {
            get {
                return this.patientId_LinkedField;
            }
            set {
                this.patientId_LinkedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientShareResp {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientShareData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private bool demographicsField;
        
        private bool allergyField;
        
        private bool familyHistoryField;
        
        private bool labResultsField;
        
        private bool medicalHistoryField;
        
        private bool medicationField;
        
        private bool problemField;
        
        private bool procedureField;
        
        private bool socialHistoryField;
        
        private bool surgicalHistoryField;
        
        private bool vitalSignsField;
        
        private bool immunizationField;
        
        private bool organField;
        
        private bool clinicalDocField;
        
        private bool insuranceField;
        
        private bool emergencyContactField;
        
        private bool appointmentField;
        
        private bool visitField;
        
        private bool uploadDocsField;
        
        private bool planOfCareField;
        
        private bool clinicalInstructionsField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
            }
        }
        
        /// <remarks/>
        public bool FamilyHistory {
            get {
                return this.familyHistoryField;
            }
            set {
                this.familyHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool LabResults {
            get {
                return this.labResultsField;
            }
            set {
                this.labResultsField = value;
            }
        }
        
        /// <remarks/>
        public bool MedicalHistory {
            get {
                return this.medicalHistoryField;
            }
            set {
                this.medicalHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
        
        /// <remarks/>
        public bool Procedure {
            get {
                return this.procedureField;
            }
            set {
                this.procedureField = value;
            }
        }
        
        /// <remarks/>
        public bool SocialHistory {
            get {
                return this.socialHistoryField;
            }
            set {
                this.socialHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool SurgicalHistory {
            get {
                return this.surgicalHistoryField;
            }
            set {
                this.surgicalHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool VitalSigns {
            get {
                return this.vitalSignsField;
            }
            set {
                this.vitalSignsField = value;
            }
        }
        
        /// <remarks/>
        public bool Immunization {
            get {
                return this.immunizationField;
            }
            set {
                this.immunizationField = value;
            }
        }
        
        /// <remarks/>
        public bool Organ {
            get {
                return this.organField;
            }
            set {
                this.organField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalDoc {
            get {
                return this.clinicalDocField;
            }
            set {
                this.clinicalDocField = value;
            }
        }
        
        /// <remarks/>
        public bool Insurance {
            get {
                return this.insuranceField;
            }
            set {
                this.insuranceField = value;
            }
        }
        
        /// <remarks/>
        public bool EmergencyContact {
            get {
                return this.emergencyContactField;
            }
            set {
                this.emergencyContactField = value;
            }
        }
        
        /// <remarks/>
        public bool Appointment {
            get {
                return this.appointmentField;
            }
            set {
                this.appointmentField = value;
            }
        }
        
        /// <remarks/>
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
            }
        }
        
        /// <remarks/>
        public bool UploadDocs {
            get {
                return this.uploadDocsField;
            }
            set {
                this.uploadDocsField = value;
            }
        }
        
        /// <remarks/>
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalInstructions {
            get {
                return this.clinicalInstructionsField;
            }
            set {
                this.clinicalInstructionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientFacilityTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVisitTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVisitData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private System.DateTime visitDateField;
        
        private long providerIdField;
        
        private string vistReasonField;
        
        private bool viewableField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime VisitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public string VistReason {
            get {
                return this.vistReasonField;
            }
            set {
                this.vistReasonField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVisitParms {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private bool shareField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientOrganData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private bool heartField;
        
        private bool liverField;
        
        private bool pancreasField;
        
        private bool lungsField;
        
        private bool kidneysField;
        
        private bool intestinesField;
        
        private bool corneaField;
        
        private bool skinField;
        
        private bool boneMarrowField;
        
        private bool heartValvesField;
        
        private bool connectiveTissueField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Heart {
            get {
                return this.heartField;
            }
            set {
                this.heartField = value;
            }
        }
        
        /// <remarks/>
        public bool Liver {
            get {
                return this.liverField;
            }
            set {
                this.liverField = value;
            }
        }
        
        /// <remarks/>
        public bool Pancreas {
            get {
                return this.pancreasField;
            }
            set {
                this.pancreasField = value;
            }
        }
        
        /// <remarks/>
        public bool Lungs {
            get {
                return this.lungsField;
            }
            set {
                this.lungsField = value;
            }
        }
        
        /// <remarks/>
        public bool Kidneys {
            get {
                return this.kidneysField;
            }
            set {
                this.kidneysField = value;
            }
        }
        
        /// <remarks/>
        public bool Intestines {
            get {
                return this.intestinesField;
            }
            set {
                this.intestinesField = value;
            }
        }
        
        /// <remarks/>
        public bool Cornea {
            get {
                return this.corneaField;
            }
            set {
                this.corneaField = value;
            }
        }
        
        /// <remarks/>
        public bool Skin {
            get {
                return this.skinField;
            }
            set {
                this.skinField = value;
            }
        }
        
        /// <remarks/>
        public bool BoneMarrow {
            get {
                return this.boneMarrowField;
            }
            set {
                this.boneMarrowField = value;
            }
        }
        
        /// <remarks/>
        public bool HeartValves {
            get {
                return this.heartValvesField;
            }
            set {
                this.heartValvesField = value;
            }
        }
        
        /// <remarks/>
        public bool ConnectiveTissue {
            get {
                return this.connectiveTissueField;
            }
            set {
                this.connectiveTissueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSearchParms {
        
        private long patientIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string address1Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countyField;
        
        private string zipField;
        
        private string countryCodeField;
        
        private string homePhoneField;
        
        private string eMailField;
        
        private System.Nullable<System.DateTime> dOBField;
        
        private System.Nullable<int> eMRSystemIdField;
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAdmin {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string nameField;
        
        private string passwordField;
        
        private string addressField;
        
        private string cityStateZipField;
        
        private string eMailField;
        
        private bool premiumFlagField;
        
        private string premiumExpireDateField;
        
        private bool activeField;
        
        private int thirdPartyIdField;
        
        private string thirdPartyNameField;
        
        private int eMRSystemIdField;
        
        private string eMRSystemNameField;
        
        private string representativePwdField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string CityStateZip {
            get {
                return this.cityStateZipField;
            }
            set {
                this.cityStateZipField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public bool PremiumFlag {
            get {
                return this.premiumFlagField;
            }
            set {
                this.premiumFlagField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumExpireDate {
            get {
                return this.premiumExpireDateField;
            }
            set {
                this.premiumExpireDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int ThirdPartyId {
            get {
                return this.thirdPartyIdField;
            }
            set {
                this.thirdPartyIdField = value;
            }
        }
        
        /// <remarks/>
        public string ThirdPartyName {
            get {
                return this.thirdPartyNameField;
            }
            set {
                this.thirdPartyNameField = value;
            }
        }
        
        /// <remarks/>
        public int EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string EMRSystemName {
            get {
                return this.eMRSystemNameField;
            }
            set {
                this.eMRSystemNameField = value;
            }
        }
        
        /// <remarks/>
        public string RepresentativePwd {
            get {
                return this.representativePwdField;
            }
            set {
                this.representativePwdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSummaryData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string pAddressField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string countryCodeField;
        
        private string countryNameField;
        
        private int heightFtField;
        
        private int heightInField;
        
        private int weightField;
        
        private string commentsField;
        
        private System.DateTime dOBField;
        
        private string homePhoneField;
        
        private string mobilePhoneField;
        
        private string workPhoneField;
        
        private string eMailField;
        
        private int preferredLanguageIdField;
        
        private string preferredLanguageField;
        
        private int genderIdField;
        
        private string genderField;
        
        private bool raceId_NotAnsweredField;
        
        private bool raceId_NativeField;
        
        private bool raceId_AsianField;
        
        private bool raceId_BlackField;
        
        private bool raceId_HawaiianField;
        
        private bool raceId_WhiteField;
        
        private string raceField;
        
        private int ethnicityIdField;
        
        private string ethnicityField;
        
        private int maritalStatusIdField;
        
        private string maritalStatusField;
        
        private int religionIdField;
        
        private string religionField;
        
        private int bloodTypeIdField;
        
        private string bloodTypeField;
        
        private string eyeColorField;
        
        private string hairColorField;
        
        private string organDonerField;
        
        private int smokingStatusIdField;
        
        private string smokingStatusField;
        
        private int relationshipIdField;
        
        private long emergencyIdField;
        
        private string emergencyNameField;
        
        private string emergencyAddressField;
        
        private string emergencyCityField;
        
        private string emergencyStateField;
        
        private string emergencyZipField;
        
        private string emergencyCountryCodeField;
        
        private string emergencyCountryNameField;
        
        private string emergencyHomePhoneField;
        
        private string emergencyMobilePhoneField;
        
        private string emergencyWorkPhoneField;
        
        private int emergencyRelationshipIdField;
        
        private string emergencyRelationshipField;
        
        private bool isPrimaryField;
        
        private string pCPField;
        
        private string mailAddressField;
        
        private string mailCityField;
        
        private string mailStateField;
        
        private string mailZipField;
        
        private string mailCountryCodeField;
        
        private string mailCountryNameField;
        
        private bool heartField;
        
        private bool liverField;
        
        private bool pancreasField;
        
        private bool lungsField;
        
        private bool kidneysField;
        
        private bool intestinesField;
        
        private bool corneaField;
        
        private bool skinField;
        
        private bool boneMarrowField;
        
        private bool heartValvesField;
        
        private bool connectiveTissueField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string PAddress {
            get {
                return this.pAddressField;
            }
            set {
                this.pAddressField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public int HeightFt {
            get {
                return this.heightFtField;
            }
            set {
                this.heightFtField = value;
            }
        }
        
        /// <remarks/>
        public int HeightIn {
            get {
                return this.heightInField;
            }
            set {
                this.heightInField = value;
            }
        }
        
        /// <remarks/>
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public int PreferredLanguageId {
            get {
                return this.preferredLanguageIdField;
            }
            set {
                this.preferredLanguageIdField = value;
            }
        }
        
        /// <remarks/>
        public string PreferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
            }
        }
        
        /// <remarks/>
        public int GenderId {
            get {
                return this.genderIdField;
            }
            set {
                this.genderIdField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_NotAnswered {
            get {
                return this.raceId_NotAnsweredField;
            }
            set {
                this.raceId_NotAnsweredField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Native {
            get {
                return this.raceId_NativeField;
            }
            set {
                this.raceId_NativeField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Asian {
            get {
                return this.raceId_AsianField;
            }
            set {
                this.raceId_AsianField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Black {
            get {
                return this.raceId_BlackField;
            }
            set {
                this.raceId_BlackField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Hawaiian {
            get {
                return this.raceId_HawaiianField;
            }
            set {
                this.raceId_HawaiianField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_White {
            get {
                return this.raceId_WhiteField;
            }
            set {
                this.raceId_WhiteField = value;
            }
        }
        
        /// <remarks/>
        public string Race {
            get {
                return this.raceField;
            }
            set {
                this.raceField = value;
            }
        }
        
        /// <remarks/>
        public int EthnicityId {
            get {
                return this.ethnicityIdField;
            }
            set {
                this.ethnicityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Ethnicity {
            get {
                return this.ethnicityField;
            }
            set {
                this.ethnicityField = value;
            }
        }
        
        /// <remarks/>
        public int MaritalStatusId {
            get {
                return this.maritalStatusIdField;
            }
            set {
                this.maritalStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public int ReligionId {
            get {
                return this.religionIdField;
            }
            set {
                this.religionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Religion {
            get {
                return this.religionField;
            }
            set {
                this.religionField = value;
            }
        }
        
        /// <remarks/>
        public int BloodTypeId {
            get {
                return this.bloodTypeIdField;
            }
            set {
                this.bloodTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string BloodType {
            get {
                return this.bloodTypeField;
            }
            set {
                this.bloodTypeField = value;
            }
        }
        
        /// <remarks/>
        public string EyeColor {
            get {
                return this.eyeColorField;
            }
            set {
                this.eyeColorField = value;
            }
        }
        
        /// <remarks/>
        public string HairColor {
            get {
                return this.hairColorField;
            }
            set {
                this.hairColorField = value;
            }
        }
        
        /// <remarks/>
        public string OrganDoner {
            get {
                return this.organDonerField;
            }
            set {
                this.organDonerField = value;
            }
        }
        
        /// <remarks/>
        public int SmokingStatusId {
            get {
                return this.smokingStatusIdField;
            }
            set {
                this.smokingStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string SmokingStatus {
            get {
                return this.smokingStatusField;
            }
            set {
                this.smokingStatusField = value;
            }
        }
        
        /// <remarks/>
        public int RelationshipId {
            get {
                return this.relationshipIdField;
            }
            set {
                this.relationshipIdField = value;
            }
        }
        
        /// <remarks/>
        public long EmergencyId {
            get {
                return this.emergencyIdField;
            }
            set {
                this.emergencyIdField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyName {
            get {
                return this.emergencyNameField;
            }
            set {
                this.emergencyNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyAddress {
            get {
                return this.emergencyAddressField;
            }
            set {
                this.emergencyAddressField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyCity {
            get {
                return this.emergencyCityField;
            }
            set {
                this.emergencyCityField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyState {
            get {
                return this.emergencyStateField;
            }
            set {
                this.emergencyStateField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyZip {
            get {
                return this.emergencyZipField;
            }
            set {
                this.emergencyZipField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyCountryCode {
            get {
                return this.emergencyCountryCodeField;
            }
            set {
                this.emergencyCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyCountryName {
            get {
                return this.emergencyCountryNameField;
            }
            set {
                this.emergencyCountryNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyHomePhone {
            get {
                return this.emergencyHomePhoneField;
            }
            set {
                this.emergencyHomePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyMobilePhone {
            get {
                return this.emergencyMobilePhoneField;
            }
            set {
                this.emergencyMobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyWorkPhone {
            get {
                return this.emergencyWorkPhoneField;
            }
            set {
                this.emergencyWorkPhoneField = value;
            }
        }
        
        /// <remarks/>
        public int EmergencyRelationshipId {
            get {
                return this.emergencyRelationshipIdField;
            }
            set {
                this.emergencyRelationshipIdField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyRelationship {
            get {
                return this.emergencyRelationshipField;
            }
            set {
                this.emergencyRelationshipField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public string PCP {
            get {
                return this.pCPField;
            }
            set {
                this.pCPField = value;
            }
        }
        
        /// <remarks/>
        public string MailAddress {
            get {
                return this.mailAddressField;
            }
            set {
                this.mailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string MailCity {
            get {
                return this.mailCityField;
            }
            set {
                this.mailCityField = value;
            }
        }
        
        /// <remarks/>
        public string MailState {
            get {
                return this.mailStateField;
            }
            set {
                this.mailStateField = value;
            }
        }
        
        /// <remarks/>
        public string MailZip {
            get {
                return this.mailZipField;
            }
            set {
                this.mailZipField = value;
            }
        }
        
        /// <remarks/>
        public string MailCountryCode {
            get {
                return this.mailCountryCodeField;
            }
            set {
                this.mailCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MailCountryName {
            get {
                return this.mailCountryNameField;
            }
            set {
                this.mailCountryNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Heart {
            get {
                return this.heartField;
            }
            set {
                this.heartField = value;
            }
        }
        
        /// <remarks/>
        public bool Liver {
            get {
                return this.liverField;
            }
            set {
                this.liverField = value;
            }
        }
        
        /// <remarks/>
        public bool Pancreas {
            get {
                return this.pancreasField;
            }
            set {
                this.pancreasField = value;
            }
        }
        
        /// <remarks/>
        public bool Lungs {
            get {
                return this.lungsField;
            }
            set {
                this.lungsField = value;
            }
        }
        
        /// <remarks/>
        public bool Kidneys {
            get {
                return this.kidneysField;
            }
            set {
                this.kidneysField = value;
            }
        }
        
        /// <remarks/>
        public bool Intestines {
            get {
                return this.intestinesField;
            }
            set {
                this.intestinesField = value;
            }
        }
        
        /// <remarks/>
        public bool Cornea {
            get {
                return this.corneaField;
            }
            set {
                this.corneaField = value;
            }
        }
        
        /// <remarks/>
        public bool Skin {
            get {
                return this.skinField;
            }
            set {
                this.skinField = value;
            }
        }
        
        /// <remarks/>
        public bool BoneMarrow {
            get {
                return this.boneMarrowField;
            }
            set {
                this.boneMarrowField = value;
            }
        }
        
        /// <remarks/>
        public bool HeartValves {
            get {
                return this.heartValvesField;
            }
            set {
                this.heartValvesField = value;
            }
        }
        
        /// <remarks/>
        public bool ConnectiveTissue {
            get {
                return this.connectiveTissueField;
            }
            set {
                this.connectiveTissueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string titleField;
        
        private string suffixField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string communityNameField;
        
        private string buildingNameField;
        
        private string countyField;
        
        private string zipField;
        
        private string countryCodeField;
        
        private string mailAddress1Field;
        
        private string mailAddress2Field;
        
        private string mailAddress3Field;
        
        private string mailCityField;
        
        private string mailStateField;
        
        private string mailPostalCodeField;
        
        private string mailCountryCodeField;
        
        private System.DateTime dOBField;
        
        private string sSNField;
        
        private string homePhoneField;
        
        private string mobilePhoneField;
        
        private string workPhoneField;
        
        private string faxField;
        
        private string eMailField;
        
        private int preferredLanguageIdField;
        
        private int genderIdField;
        
        private bool raceId_NotAnsweredField;
        
        private bool raceId_NativeField;
        
        private bool raceId_AsianField;
        
        private bool raceId_BlackField;
        
        private bool raceId_HawaiianField;
        
        private bool raceId_WhiteField;
        
        private int ethnicityIdField;
        
        private int maritalStatusIdField;
        
        private int religionIdField;
        
        private int bloodTypeIdField;
        
        private int heightFtField;
        
        private int heightInField;
        
        private string eyesField;
        
        private string hairField;
        
        private int weightField;
        
        private bool organDonerField;
        
        private int smokingStatusIdField;
        
        private string commentsField;
        
        private bool premiumFlagField;
        
        private string premiumStartDateField;
        
        private string premiumExpireDateField;
        
        private int optionField;
        
        private bool activeField;
        
        private string smokingDateField;
        
        private int thirdPartyIdField;
        
        private int eMRSystemIdField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string CommunityName {
            get {
                return this.communityNameField;
            }
            set {
                this.communityNameField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingName {
            get {
                return this.buildingNameField;
            }
            set {
                this.buildingNameField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MailAddress1 {
            get {
                return this.mailAddress1Field;
            }
            set {
                this.mailAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string MailAddress2 {
            get {
                return this.mailAddress2Field;
            }
            set {
                this.mailAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string MailAddress3 {
            get {
                return this.mailAddress3Field;
            }
            set {
                this.mailAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string MailCity {
            get {
                return this.mailCityField;
            }
            set {
                this.mailCityField = value;
            }
        }
        
        /// <remarks/>
        public string MailState {
            get {
                return this.mailStateField;
            }
            set {
                this.mailStateField = value;
            }
        }
        
        /// <remarks/>
        public string MailPostalCode {
            get {
                return this.mailPostalCodeField;
            }
            set {
                this.mailPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MailCountryCode {
            get {
                return this.mailCountryCodeField;
            }
            set {
                this.mailCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string SSN {
            get {
                return this.sSNField;
            }
            set {
                this.sSNField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public int PreferredLanguageId {
            get {
                return this.preferredLanguageIdField;
            }
            set {
                this.preferredLanguageIdField = value;
            }
        }
        
        /// <remarks/>
        public int GenderId {
            get {
                return this.genderIdField;
            }
            set {
                this.genderIdField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_NotAnswered {
            get {
                return this.raceId_NotAnsweredField;
            }
            set {
                this.raceId_NotAnsweredField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Native {
            get {
                return this.raceId_NativeField;
            }
            set {
                this.raceId_NativeField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Asian {
            get {
                return this.raceId_AsianField;
            }
            set {
                this.raceId_AsianField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Black {
            get {
                return this.raceId_BlackField;
            }
            set {
                this.raceId_BlackField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_Hawaiian {
            get {
                return this.raceId_HawaiianField;
            }
            set {
                this.raceId_HawaiianField = value;
            }
        }
        
        /// <remarks/>
        public bool RaceId_White {
            get {
                return this.raceId_WhiteField;
            }
            set {
                this.raceId_WhiteField = value;
            }
        }
        
        /// <remarks/>
        public int EthnicityId {
            get {
                return this.ethnicityIdField;
            }
            set {
                this.ethnicityIdField = value;
            }
        }
        
        /// <remarks/>
        public int MaritalStatusId {
            get {
                return this.maritalStatusIdField;
            }
            set {
                this.maritalStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReligionId {
            get {
                return this.religionIdField;
            }
            set {
                this.religionIdField = value;
            }
        }
        
        /// <remarks/>
        public int BloodTypeId {
            get {
                return this.bloodTypeIdField;
            }
            set {
                this.bloodTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int HeightFt {
            get {
                return this.heightFtField;
            }
            set {
                this.heightFtField = value;
            }
        }
        
        /// <remarks/>
        public int HeightIn {
            get {
                return this.heightInField;
            }
            set {
                this.heightInField = value;
            }
        }
        
        /// <remarks/>
        public string Eyes {
            get {
                return this.eyesField;
            }
            set {
                this.eyesField = value;
            }
        }
        
        /// <remarks/>
        public string Hair {
            get {
                return this.hairField;
            }
            set {
                this.hairField = value;
            }
        }
        
        /// <remarks/>
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public bool OrganDoner {
            get {
                return this.organDonerField;
            }
            set {
                this.organDonerField = value;
            }
        }
        
        /// <remarks/>
        public int SmokingStatusId {
            get {
                return this.smokingStatusIdField;
            }
            set {
                this.smokingStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public bool PremiumFlag {
            get {
                return this.premiumFlagField;
            }
            set {
                this.premiumFlagField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumStartDate {
            get {
                return this.premiumStartDateField;
            }
            set {
                this.premiumStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumExpireDate {
            get {
                return this.premiumExpireDateField;
            }
            set {
                this.premiumExpireDateField = value;
            }
        }
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string SmokingDate {
            get {
                return this.smokingDateField;
            }
            set {
                this.smokingDateField = value;
            }
        }
        
        /// <remarks/>
        public int ThirdPartyId {
            get {
                return this.thirdPartyIdField;
            }
            set {
                this.thirdPartyIdField = value;
            }
        }
        
        /// <remarks/>
        public int EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientParms {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientResp {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillPaymentTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillPaymentData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long billPaymentIdField;
        
        private long patientIdField;
        
        private int billRateIdField;
        
        private string transactionDateField;
        
        private string responseField;
        
        private string custIdField;
        
        private string recurrIdField;
        
        private string paymentTypeField;
        
        private string paymentFrequencyField;
        
        private string paymentIdField;
        
        private int noOfPaymentsField;
        
        private string startDateField;
        
        private string accountHolderNameField;
        
        private decimal amountField;
        
        private long userId_CreatedField;
        
        private string dateCreatedField;
        
        private long userId_ModifiedField;
        
        private string dateModifiedField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long BillPaymentId {
            get {
                return this.billPaymentIdField;
            }
            set {
                this.billPaymentIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public int BillRateId {
            get {
                return this.billRateIdField;
            }
            set {
                this.billRateIdField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        public string Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        public string CustId {
            get {
                return this.custIdField;
            }
            set {
                this.custIdField = value;
            }
        }
        
        /// <remarks/>
        public string RecurrId {
            get {
                return this.recurrIdField;
            }
            set {
                this.recurrIdField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentFrequency {
            get {
                return this.paymentFrequencyField;
            }
            set {
                this.paymentFrequencyField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
            }
        }
        
        /// <remarks/>
        public int NoOfPayments {
            get {
                return this.noOfPaymentsField;
            }
            set {
                this.noOfPaymentsField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string AccountHolderName {
            get {
                return this.accountHolderNameField;
            }
            set {
                this.accountHolderNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public long UserId_Created {
            get {
                return this.userId_CreatedField;
            }
            set {
                this.userId_CreatedField = value;
            }
        }
        
        /// <remarks/>
        public string DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public long UserId_Modified {
            get {
                return this.userId_ModifiedField;
            }
            set {
                this.userId_ModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillPaymentParms {
        
        private int optionField;
        
        private long billPaymentIdField;
        
        private long patientIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long BillPaymentId {
            get {
                return this.billPaymentIdField;
            }
            set {
                this.billPaymentIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BillRateTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBillRateDataTableCompletedEventHandler(object sender, GetBillRateDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillRateDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillRateDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillRateTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillRateTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBillPaymentDataCompletedEventHandler(object sender, GetBillPaymentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillPaymentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillPaymentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveBillPaymentDataCompletedEventHandler(object sender, SaveBillPaymentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBillPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBillPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillPaymentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillPaymentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBillPaymentDataTableCompletedEventHandler(object sender, GetBillPaymentDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillPaymentDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillPaymentDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillPaymentTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillPaymentTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientEmailSearchCompletedEventHandler(object sender, PatientEmailSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientEmailSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientEmailSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientDataCompletedEventHandler(object sender, DeletePatientDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientDataCompletedEventHandler(object sender, GetPatientDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientExistsCompletedEventHandler(object sender, GetPatientExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSummaryDataCompletedEventHandler(object sender, GetPatientSummaryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSummaryData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSummaryData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientAdminDataCompletedEventHandler(object sender, GetPatientAdminDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAdminDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAdminDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAdmin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAdmin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientDataCompletedEventHandler(object sender, SavePatientDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientSearchCompletedEventHandler(object sender, PatientSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpgradePatientCompletedEventHandler(object sender, UpgradePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpgradePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpgradePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DowngradePatientCompletedEventHandler(object sender, DowngradePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DowngradePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DowngradePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RenewPatientCompletedEventHandler(object sender, RenewPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenewPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenewPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePatientRenewDateCompletedEventHandler(object sender, ChangePatientRenewDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePatientRenewDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePatientRenewDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ActivatePatientCompletedEventHandler(object sender, ActivatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeactivatePatientCompletedEventHandler(object sender, DeactivatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeactivatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeactivatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdatePatientThirdPartyCompletedEventHandler(object sender, UpdatePatientThirdPartyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientThirdPartyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientThirdPartyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdatePatientEMRSystemCompletedEventHandler(object sender, UpdatePatientEMRSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientEMRSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientEMRSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePatientEmailCompletedEventHandler(object sender, ChangePatientEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePatientEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePatientEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientOrganDataCompletedEventHandler(object sender, GetPatientOrganDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientOrganDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientOrganDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientOrganData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientOrganData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientOrganDataCompletedEventHandler(object sender, SavePatientOrganDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientOrganDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientOrganDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientOrganData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientOrganData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientVisitDataCompletedEventHandler(object sender, GetPatientVisitDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientVisitDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientVisitDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVisitData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVisitData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientVisitListCompletedEventHandler(object sender, GetPatientVisitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientVisitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientVisitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVisitTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVisitTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLatestPatientVisitCompletedEventHandler(object sender, GetLatestPatientVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestPatientVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestPatientVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVisitData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVisitData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void VisitShareCompletedEventHandler(object sender, VisitShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VisitShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VisitShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientFacilityListCompletedEventHandler(object sender, GetPatientFacilityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFacilityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFacilityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFacilityTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFacilityTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientShareDataCompletedEventHandler(object sender, GetPatientShareDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientShareDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientShareDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareDemographicsCompletedEventHandler(object sender, PatientShareDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareAllergyCompletedEventHandler(object sender, PatientShareAllergyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareAllergyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareAllergyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareFamilyHistoryCompletedEventHandler(object sender, PatientShareFamilyHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareFamilyHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareFamilyHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareLabResultsCompletedEventHandler(object sender, PatientShareLabResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareLabResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareLabResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareMedicalHistoryCompletedEventHandler(object sender, PatientShareMedicalHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareMedicalHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareMedicalHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareMedicationCompletedEventHandler(object sender, PatientShareMedicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareMedicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareMedicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareProblemCompletedEventHandler(object sender, PatientShareProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareProcedureCompletedEventHandler(object sender, PatientShareProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareSocialHistoryCompletedEventHandler(object sender, PatientShareSocialHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareSocialHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareSocialHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareSurgicalHistoryCompletedEventHandler(object sender, PatientShareSurgicalHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareSurgicalHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareSurgicalHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareVitalSignsCompletedEventHandler(object sender, PatientShareVitalSignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareVitalSignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareVitalSignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareImmunizationCompletedEventHandler(object sender, PatientShareImmunizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareImmunizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareImmunizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareOrganCompletedEventHandler(object sender, PatientShareOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareClinicalDocCompletedEventHandler(object sender, PatientShareClinicalDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareClinicalDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareClinicalDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareInsuranceCompletedEventHandler(object sender, PatientShareInsuranceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareInsuranceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareInsuranceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareEmergencyContactCompletedEventHandler(object sender, PatientShareEmergencyContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareEmergencyContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareEmergencyContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareAppointmentCompletedEventHandler(object sender, PatientShareAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareVisitCompletedEventHandler(object sender, PatientShareVisitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareUploadDocsCompletedEventHandler(object sender, PatientShareUploadDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareUploadDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareUploadDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientSharePlanOfCareCompletedEventHandler(object sender, PatientSharePlanOfCareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientSharePlanOfCareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientSharePlanOfCareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientShareClinicalInstructionsCompletedEventHandler(object sender, PatientShareClinicalInstructionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientShareClinicalInstructionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientShareClinicalInstructionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientShareResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientShareResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientAccountLinkDataCompletedEventHandler(object sender, SavePatientAccountLinkDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientAccountLinkDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientAccountLinkDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAccountLinkData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAccountLinkData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientAccountLinkDataCompletedEventHandler(object sender, DeletePatientAccountLinkDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientAccountLinkDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientAccountLinkDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAccountLinkData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAccountLinkData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientAccountLinkListCompletedEventHandler(object sender, GetPatientAccountLinkListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAccountLinkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAccountLinkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientAccountLinkParentListCompletedEventHandler(object sender, GetPatientAccountLinkParentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAccountLinkParentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAccountLinkParentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientWebSettingDataCompletedEventHandler(object sender, GetPatientWebSettingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientWebSettingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientWebSettingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientWebSettingData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientWebSettingData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientWebSettingDataCompletedEventHandler(object sender, SavePatientWebSettingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientWebSettingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientWebSettingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientWebSettingData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientWebSettingData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientImageDataCompletedEventHandler(object sender, GetPatientImageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientImageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientImageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientImageData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientImageData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientmageDataCompletedEventHandler(object sender, SavePatientmageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientmageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientmageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientImageData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientImageData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientRepDataCompletedEventHandler(object sender, GetPatientRepDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientRepDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientRepDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientRepData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientRepData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientRepDataCompletedEventHandler(object sender, SavePatientRepDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientRepDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientRepDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientRepData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientRepData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCareProviderDataCompletedEventHandler(object sender, GetCareProviderDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCareProviderDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCareProviderDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CareProviderData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CareProviderData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveCareProviderDataCompletedEventHandler(object sender, SaveCareProviderDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCareProviderDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCareProviderDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CareProviderData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CareProviderData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientForFacilityListCompletedEventHandler(object sender, GetPatientForFacilityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientForFacilityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientForFacilityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientFacilityOptionsCompletedEventHandler(object sender, GetPatientFacilityOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFacilityOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFacilityOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFacilityOptionsData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFacilityOptionsData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SendOutsideProviderEmailCompletedEventHandler(object sender, SendOutsideProviderEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOutsideProviderEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOutsideProviderEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBillRateDataCompletedEventHandler(object sender, GetBillRateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillRateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillRateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillRateData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillRateData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBillRateDataByPromoCompletedEventHandler(object sender, GetBillRateDataByPromoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillRateDataByPromoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillRateDataByPromoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillRateData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillRateData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveBillRateDataCompletedEventHandler(object sender, SaveBillRateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBillRateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBillRateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillRateData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillRateData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591