//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Testing.AuthenticationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthenticationWSSoap", Namespace="http://tempuri.org/")]
    public partial class AuthenticationWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticatePatientInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePatientPasswordAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeProviderPasswordAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSecurityInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeSecurityQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientLastLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetLockedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateCareProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateMedicalSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthenticationWS() {
            this.Url = global::Testing.Properties.Settings.Default.Testing_AuthenticationService_AuthenticationWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateInterfaceCompletedEventHandler AuthenticateInterfaceCompleted;
        
        /// <remarks/>
        public event AuthenticatePatientInterfaceCompletedEventHandler AuthenticatePatientInterfaceCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ChangePatientPasswordAdminCompletedEventHandler ChangePatientPasswordAdminCompleted;
        
        /// <remarks/>
        public event ChangeProviderPasswordAdminCompletedEventHandler ChangeProviderPasswordAdminCompleted;
        
        /// <remarks/>
        public event GetPatientSecurityInfoCompletedEventHandler GetPatientSecurityInfoCompleted;
        
        /// <remarks/>
        public event ChangeSecurityQuestionCompletedEventHandler ChangeSecurityQuestionCompleted;
        
        /// <remarks/>
        public event GetSecurityQuestionCompletedEventHandler GetSecurityQuestionCompleted;
        
        /// <remarks/>
        public event GetPatientLastLoginCompletedEventHandler GetPatientLastLoginCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetLockedAccountCompletedEventHandler ResetLockedAccountCompleted;
        
        /// <remarks/>
        public event LogoutUserCompletedEventHandler LogoutUserCompleted;
        
        /// <remarks/>
        public event AuthenticateCareProviderCompletedEventHandler AuthenticateCareProviderCompleted;
        
        /// <remarks/>
        public event AuthenticateMedicalSummaryCompletedEventHandler AuthenticateMedicalSummaryCompleted;
        
        /// <remarks/>
        public event GetUserTypeLinkCompletedEventHandler GetUserTypeLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateInterface", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse AuthenticateInterface(long FacilityId, string UserLogin, string Password) {
            object[] results = this.Invoke("AuthenticateInterface", new object[] {
                        FacilityId,
                        UserLogin,
                        Password});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateInterfaceAsync(long FacilityId, string UserLogin, string Password) {
            this.AuthenticateInterfaceAsync(FacilityId, UserLogin, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateInterfaceAsync(long FacilityId, string UserLogin, string Password, object userState) {
            if ((this.AuthenticateInterfaceOperationCompleted == null)) {
                this.AuthenticateInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateInterfaceOperationCompleted);
            }
            this.InvokeAsync("AuthenticateInterface", new object[] {
                        FacilityId,
                        UserLogin,
                        Password}, this.AuthenticateInterfaceOperationCompleted, userState);
        }
        
        private void OnAuthenticateInterfaceOperationCompleted(object arg) {
            if ((this.AuthenticateInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateInterfaceCompleted(this, new AuthenticateInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticatePatientInterface", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse AuthenticatePatientInterface(long FacilityId, string UserLogin, string Password) {
            object[] results = this.Invoke("AuthenticatePatientInterface", new object[] {
                        FacilityId,
                        UserLogin,
                        Password});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticatePatientInterfaceAsync(long FacilityId, string UserLogin, string Password) {
            this.AuthenticatePatientInterfaceAsync(FacilityId, UserLogin, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticatePatientInterfaceAsync(long FacilityId, string UserLogin, string Password, object userState) {
            if ((this.AuthenticatePatientInterfaceOperationCompleted == null)) {
                this.AuthenticatePatientInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticatePatientInterfaceOperationCompleted);
            }
            this.InvokeAsync("AuthenticatePatientInterface", new object[] {
                        FacilityId,
                        UserLogin,
                        Password}, this.AuthenticatePatientInterfaceOperationCompleted, userState);
        }
        
        private void OnAuthenticatePatientInterfaceOperationCompleted(object arg) {
            if ((this.AuthenticatePatientInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticatePatientInterfaceCompleted(this, new AuthenticatePatientInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ChangePassword(string Token, long UserId, long FacilityId, int LoginType, string Password, string NewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        Password,
                        NewPassword});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string Token, long UserId, long FacilityId, int LoginType, string Password, string NewPassword) {
            this.ChangePasswordAsync(Token, UserId, FacilityId, LoginType, Password, NewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string Token, long UserId, long FacilityId, int LoginType, string Password, string NewPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        Password,
                        NewPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePatientPasswordAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ChangePatientPasswordAdmin(string Token, long UserId, long FacilityId, long PatientId) {
            object[] results = this.Invoke("ChangePatientPasswordAdmin", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        PatientId});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePatientPasswordAdminAsync(string Token, long UserId, long FacilityId, long PatientId) {
            this.ChangePatientPasswordAdminAsync(Token, UserId, FacilityId, PatientId, null);
        }
        
        /// <remarks/>
        public void ChangePatientPasswordAdminAsync(string Token, long UserId, long FacilityId, long PatientId, object userState) {
            if ((this.ChangePatientPasswordAdminOperationCompleted == null)) {
                this.ChangePatientPasswordAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePatientPasswordAdminOperationCompleted);
            }
            this.InvokeAsync("ChangePatientPasswordAdmin", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        PatientId}, this.ChangePatientPasswordAdminOperationCompleted, userState);
        }
        
        private void OnChangePatientPasswordAdminOperationCompleted(object arg) {
            if ((this.ChangePatientPasswordAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePatientPasswordAdminCompleted(this, new ChangePatientPasswordAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeProviderPasswordAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ChangeProviderPasswordAdmin(string Token, long UserId, long FacilityId, long ProviderId) {
            object[] results = this.Invoke("ChangeProviderPasswordAdmin", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        ProviderId});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeProviderPasswordAdminAsync(string Token, long UserId, long FacilityId, long ProviderId) {
            this.ChangeProviderPasswordAdminAsync(Token, UserId, FacilityId, ProviderId, null);
        }
        
        /// <remarks/>
        public void ChangeProviderPasswordAdminAsync(string Token, long UserId, long FacilityId, long ProviderId, object userState) {
            if ((this.ChangeProviderPasswordAdminOperationCompleted == null)) {
                this.ChangeProviderPasswordAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeProviderPasswordAdminOperationCompleted);
            }
            this.InvokeAsync("ChangeProviderPasswordAdmin", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        ProviderId}, this.ChangeProviderPasswordAdminOperationCompleted, userState);
        }
        
        private void OnChangeProviderPasswordAdminOperationCompleted(object arg) {
            if ((this.ChangeProviderPasswordAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeProviderPasswordAdminCompleted(this, new ChangeProviderPasswordAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSecurityInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSecurityData GetPatientSecurityInfo(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSecurityInfo", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSecurityData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSecurityInfoAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.GetPatientSecurityInfoAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSecurityInfoAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSecurityInfoOperationCompleted == null)) {
                this.GetPatientSecurityInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSecurityInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientSecurityInfo", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSecurityInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientSecurityInfoOperationCompleted(object arg) {
            if ((this.GetPatientSecurityInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSecurityInfoCompleted(this, new GetPatientSecurityInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeSecurityQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ChangeSecurityQuestion(string Token, long UserId, long FacilityId, int LoginType, int QuestionId, string Answer, int QuestionId2, string Answer2, string UserLogin) {
            object[] results = this.Invoke("ChangeSecurityQuestion", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        QuestionId,
                        Answer,
                        QuestionId2,
                        Answer2,
                        UserLogin});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeSecurityQuestionAsync(string Token, long UserId, long FacilityId, int LoginType, int QuestionId, string Answer, int QuestionId2, string Answer2, string UserLogin) {
            this.ChangeSecurityQuestionAsync(Token, UserId, FacilityId, LoginType, QuestionId, Answer, QuestionId2, Answer2, UserLogin, null);
        }
        
        /// <remarks/>
        public void ChangeSecurityQuestionAsync(string Token, long UserId, long FacilityId, int LoginType, int QuestionId, string Answer, int QuestionId2, string Answer2, string UserLogin, object userState) {
            if ((this.ChangeSecurityQuestionOperationCompleted == null)) {
                this.ChangeSecurityQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeSecurityQuestionOperationCompleted);
            }
            this.InvokeAsync("ChangeSecurityQuestion", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        QuestionId,
                        Answer,
                        QuestionId2,
                        Answer2,
                        UserLogin}, this.ChangeSecurityQuestionOperationCompleted, userState);
        }
        
        private void OnChangeSecurityQuestionOperationCompleted(object arg) {
            if ((this.ChangeSecurityQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeSecurityQuestionCompleted(this, new ChangeSecurityQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse GetSecurityQuestion(long FacilityId, string UserLogin, int LoginType, string UserEmail) {
            object[] results = this.Invoke("GetSecurityQuestion", new object[] {
                        FacilityId,
                        UserLogin,
                        LoginType,
                        UserEmail});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityQuestionAsync(long FacilityId, string UserLogin, int LoginType, string UserEmail) {
            this.GetSecurityQuestionAsync(FacilityId, UserLogin, LoginType, UserEmail, null);
        }
        
        /// <remarks/>
        public void GetSecurityQuestionAsync(long FacilityId, string UserLogin, int LoginType, string UserEmail, object userState) {
            if ((this.GetSecurityQuestionOperationCompleted == null)) {
                this.GetSecurityQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityQuestionOperationCompleted);
            }
            this.InvokeAsync("GetSecurityQuestion", new object[] {
                        FacilityId,
                        UserLogin,
                        LoginType,
                        UserEmail}, this.GetSecurityQuestionOperationCompleted, userState);
        }
        
        private void OnGetSecurityQuestionOperationCompleted(object arg) {
            if ((this.GetSecurityQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityQuestionCompleted(this, new GetSecurityQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientLastLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientLoginData GetPatientLastLogin(long PatientId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientLastLogin", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientLoginData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientLastLoginAsync(long PatientId, string Token, long UserId, long FacilityId) {
            this.GetPatientLastLoginAsync(PatientId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientLastLoginAsync(long PatientId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientLastLoginOperationCompleted == null)) {
                this.GetPatientLastLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientLastLoginOperationCompleted);
            }
            this.InvokeAsync("GetPatientLastLogin", new object[] {
                        PatientId,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientLastLoginOperationCompleted, userState);
        }
        
        private void OnGetPatientLastLoginOperationCompleted(object arg) {
            if ((this.GetPatientLastLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientLastLoginCompleted(this, new GetPatientLastLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ResetPassword(long FacilityId, string UserLogin, int LoginType, string Answer, string Answer2) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        FacilityId,
                        UserLogin,
                        LoginType,
                        Answer,
                        Answer2});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(long FacilityId, string UserLogin, int LoginType, string Answer, string Answer2) {
            this.ResetPasswordAsync(FacilityId, UserLogin, LoginType, Answer, Answer2, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(long FacilityId, string UserLogin, int LoginType, string Answer, string Answer2, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        FacilityId,
                        UserLogin,
                        LoginType,
                        Answer,
                        Answer2}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetLockedAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse ResetLockedAccount(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("ResetLockedAccount", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ResetLockedAccountAsync(string Token, long UserId, long FacilityId) {
            this.ResetLockedAccountAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void ResetLockedAccountAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.ResetLockedAccountOperationCompleted == null)) {
                this.ResetLockedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetLockedAccountOperationCompleted);
            }
            this.InvokeAsync("ResetLockedAccount", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.ResetLockedAccountOperationCompleted, userState);
        }
        
        private void OnResetLockedAccountOperationCompleted(object arg) {
            if ((this.ResetLockedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetLockedAccountCompleted(this, new ResetLockedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogoutUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse LogoutUser(long FacilityId, long UserId) {
            object[] results = this.Invoke("LogoutUser", new object[] {
                        FacilityId,
                        UserId});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutUserAsync(long FacilityId, long UserId) {
            this.LogoutUserAsync(FacilityId, UserId, null);
        }
        
        /// <remarks/>
        public void LogoutUserAsync(long FacilityId, long UserId, object userState) {
            if ((this.LogoutUserOperationCompleted == null)) {
                this.LogoutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutUserOperationCompleted);
            }
            this.InvokeAsync("LogoutUser", new object[] {
                        FacilityId,
                        UserId}, this.LogoutUserOperationCompleted, userState);
        }
        
        private void OnLogoutUserOperationCompleted(object arg) {
            if ((this.LogoutUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutUserCompleted(this, new LogoutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateCareProvider", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse AuthenticateCareProvider(string UserLogin, string FullName, string Password) {
            object[] results = this.Invoke("AuthenticateCareProvider", new object[] {
                        UserLogin,
                        FullName,
                        Password});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateCareProviderAsync(string UserLogin, string FullName, string Password) {
            this.AuthenticateCareProviderAsync(UserLogin, FullName, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateCareProviderAsync(string UserLogin, string FullName, string Password, object userState) {
            if ((this.AuthenticateCareProviderOperationCompleted == null)) {
                this.AuthenticateCareProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateCareProviderOperationCompleted);
            }
            this.InvokeAsync("AuthenticateCareProvider", new object[] {
                        UserLogin,
                        FullName,
                        Password}, this.AuthenticateCareProviderOperationCompleted, userState);
        }
        
        private void OnAuthenticateCareProviderOperationCompleted(object arg) {
            if ((this.AuthenticateCareProviderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCareProviderCompleted(this, new AuthenticateCareProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateMedicalSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticationResponse AuthenticateMedicalSummary(string UserLogin, string FullName) {
            object[] results = this.Invoke("AuthenticateMedicalSummary", new object[] {
                        UserLogin,
                        FullName});
            return ((AuthenticationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateMedicalSummaryAsync(string UserLogin, string FullName) {
            this.AuthenticateMedicalSummaryAsync(UserLogin, FullName, null);
        }
        
        /// <remarks/>
        public void AuthenticateMedicalSummaryAsync(string UserLogin, string FullName, object userState) {
            if ((this.AuthenticateMedicalSummaryOperationCompleted == null)) {
                this.AuthenticateMedicalSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateMedicalSummaryOperationCompleted);
            }
            this.InvokeAsync("AuthenticateMedicalSummary", new object[] {
                        UserLogin,
                        FullName}, this.AuthenticateMedicalSummaryOperationCompleted, userState);
        }
        
        private void OnAuthenticateMedicalSummaryOperationCompleted(object arg) {
            if ((this.AuthenticateMedicalSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateMedicalSummaryCompleted(this, new AuthenticateMedicalSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTypeLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData GetUserTypeLink(string Token, long UserId, long FacilityId, int LoginType, long RoleLink) {
            object[] results = this.Invoke("GetUserTypeLink", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        RoleLink});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeLinkAsync(string Token, long UserId, long FacilityId, int LoginType, long RoleLink) {
            this.GetUserTypeLinkAsync(Token, UserId, FacilityId, LoginType, RoleLink, null);
        }
        
        /// <remarks/>
        public void GetUserTypeLinkAsync(string Token, long UserId, long FacilityId, int LoginType, long RoleLink, object userState) {
            if ((this.GetUserTypeLinkOperationCompleted == null)) {
                this.GetUserTypeLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeLinkOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeLink", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        LoginType,
                        RoleLink}, this.GetUserTypeLinkOperationCompleted, userState);
        }
        
        private void OnGetUserTypeLinkOperationCompleted(object arg) {
            if ((this.GetUserTypeLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeLinkCompleted(this, new GetUserTypeLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuthenticationResponse {
        
        private bool validField;
        
        private long userIdField;
        
        private short loginTypeField;
        
        private string tokenField;
        
        private string errorMessageField;
        
        private bool firstLoginField;
        
        private string securityQuestionField;
        
        private string securityQuestion2Field;
        
        private long userRoleLinkField;
        
        private bool resetPasswordField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public short LoginType {
            get {
                return this.loginTypeField;
            }
            set {
                this.loginTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool FirstLogin {
            get {
                return this.firstLoginField;
            }
            set {
                this.firstLoginField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityQuestion {
            get {
                return this.securityQuestionField;
            }
            set {
                this.securityQuestionField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityQuestion2 {
            get {
                return this.securityQuestion2Field;
            }
            set {
                this.securityQuestion2Field = value;
            }
        }
        
        /// <remarks/>
        public long UserRoleLink {
            get {
                return this.userRoleLinkField;
            }
            set {
                this.userRoleLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool ResetPassword {
            get {
                return this.resetPasswordField;
            }
            set {
                this.resetPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long userIdField;
        
        private string emailField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientLoginData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime lastLoginDateField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSecurityData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private int securityQuestionIdField;
        
        private string securityAnswerField;
        
        private int securityQuestionId2Field;
        
        private string securityAnswer2Field;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int SecurityQuestionId {
            get {
                return this.securityQuestionIdField;
            }
            set {
                this.securityQuestionIdField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityAnswer {
            get {
                return this.securityAnswerField;
            }
            set {
                this.securityAnswerField = value;
            }
        }
        
        /// <remarks/>
        public int SecurityQuestionId2 {
            get {
                return this.securityQuestionId2Field;
            }
            set {
                this.securityQuestionId2Field = value;
            }
        }
        
        /// <remarks/>
        public string SecurityAnswer2 {
            get {
                return this.securityAnswer2Field;
            }
            set {
                this.securityAnswer2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AuthenticateInterfaceCompletedEventHandler(object sender, AuthenticateInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AuthenticatePatientInterfaceCompletedEventHandler(object sender, AuthenticatePatientInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticatePatientInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticatePatientInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePatientPasswordAdminCompletedEventHandler(object sender, ChangePatientPasswordAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePatientPasswordAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePatientPasswordAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangeProviderPasswordAdminCompletedEventHandler(object sender, ChangeProviderPasswordAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeProviderPasswordAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeProviderPasswordAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSecurityInfoCompletedEventHandler(object sender, GetPatientSecurityInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSecurityInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSecurityInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSecurityData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSecurityData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangeSecurityQuestionCompletedEventHandler(object sender, ChangeSecurityQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeSecurityQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeSecurityQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSecurityQuestionCompletedEventHandler(object sender, GetSecurityQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientLastLoginCompletedEventHandler(object sender, GetPatientLastLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientLastLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientLastLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientLoginData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientLoginData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ResetLockedAccountCompletedEventHandler(object sender, ResetLockedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetLockedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetLockedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LogoutUserCompletedEventHandler(object sender, LogoutUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AuthenticateCareProviderCompletedEventHandler(object sender, AuthenticateCareProviderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCareProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCareProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AuthenticateMedicalSummaryCompletedEventHandler(object sender, AuthenticateMedicalSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateMedicalSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateMedicalSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserTypeLinkCompletedEventHandler(object sender, GetUserTypeLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591