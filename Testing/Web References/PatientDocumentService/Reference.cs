//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Testing.PatientDocumentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PatientDocumentWSSoap", Namespace="http://tempuri.org/")]
    public partial class PatientDocumentWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SavePatientPlanOfCareDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientPlanOfCareDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientClinicalInstructionsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDoctorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientDoctorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientDoctorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAdvisorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientAdvisorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientAdvisorDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabResultTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSummaryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientCCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientCCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCDAuditLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalPortfolioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientPolicyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientPolicyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientPolicyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalSummaryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientVisitCCDDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientCCDCustomizeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientNoteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientNoteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSocialSelfDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientSocialSelfDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCombinedPatientDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientAllergyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientAllergyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFamilyHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientFamilyHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientFamilyHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMedicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientMedicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientMedicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMedicationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientMedicationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientMedicationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientProblemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientProblemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientProblemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientProcedureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientProcedureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientProcedureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSocialHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientSocialHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientSocialHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientSurgicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientSurgicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientSurgicalHistDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientVitalSignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientVitalSignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientVitalSignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientImmunizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientImmunizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientImmunizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientLabResultDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientLabResultDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientLabResultListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientEmergencyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientEmergencyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientEmergencyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInsuranceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientInsuranceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientInsuranceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientPharmacyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientPharmacyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientPharmacyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientClinicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientClinicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientClinicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientClinicalDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientClinicalDocumentShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientDocumentShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMedicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientMedicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientMedicalDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMedicalDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientMedicalDocumentShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientCareDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientCareDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientCareDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientCareDocumentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientCareDocumentShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientPlanOfCareDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PatientDocumentWS() {
            this.Url = global::Testing.Properties.Settings.Default.Testing_PatientDocumentService_PatientDocumentWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SavePatientPlanOfCareDataCompletedEventHandler SavePatientPlanOfCareDataCompleted;
        
        /// <remarks/>
        public event DeletePatientPlanOfCareDataCompletedEventHandler DeletePatientPlanOfCareDataCompleted;
        
        /// <remarks/>
        public event GetPatientClinicalInstructionsDataCompletedEventHandler GetPatientClinicalInstructionsDataCompleted;
        
        /// <remarks/>
        public event GetPatientDoctorDataCompletedEventHandler GetPatientDoctorDataCompleted;
        
        /// <remarks/>
        public event SavePatientDoctorDataCompletedEventHandler SavePatientDoctorDataCompleted;
        
        /// <remarks/>
        public event DeletePatientDoctorDataCompletedEventHandler DeletePatientDoctorDataCompleted;
        
        /// <remarks/>
        public event GetPatientAdvisorDataCompletedEventHandler GetPatientAdvisorDataCompleted;
        
        /// <remarks/>
        public event SavePatientAdvisorDataCompletedEventHandler SavePatientAdvisorDataCompleted;
        
        /// <remarks/>
        public event DeletePatientAdvisorDataCompletedEventHandler DeletePatientAdvisorDataCompleted;
        
        /// <remarks/>
        public event GetLabResultTestDataCompletedEventHandler GetLabResultTestDataCompleted;
        
        /// <remarks/>
        public event GetPatientSummaryDataCompletedEventHandler GetPatientSummaryDataCompleted;
        
        /// <remarks/>
        public event GetPatientCCDCompletedEventHandler GetPatientCCDCompleted;
        
        /// <remarks/>
        public event SavePatientCCDCompletedEventHandler SavePatientCCDCompleted;
        
        /// <remarks/>
        public event GetCCDAuditLogCompletedEventHandler GetCCDAuditLogCompleted;
        
        /// <remarks/>
        public event GetMedicalPortfolioCompletedEventHandler GetMedicalPortfolioCompleted;
        
        /// <remarks/>
        public event GetPatientPolicyDataCompletedEventHandler GetPatientPolicyDataCompleted;
        
        /// <remarks/>
        public event SavePatientPolicyDataCompletedEventHandler SavePatientPolicyDataCompleted;
        
        /// <remarks/>
        public event DeletePatientPolicyDataCompletedEventHandler DeletePatientPolicyDataCompleted;
        
        /// <remarks/>
        public event GetMedicalSummaryDataCompletedEventHandler GetMedicalSummaryDataCompleted;
        
        /// <remarks/>
        public event GetPatientVisitCCDDataCompletedEventHandler GetPatientVisitCCDDataCompleted;
        
        /// <remarks/>
        public event GetPatientCCDCustomizeDataCompletedEventHandler GetPatientCCDCustomizeDataCompleted;
        
        /// <remarks/>
        public event GetPatientNoteDataCompletedEventHandler GetPatientNoteDataCompleted;
        
        /// <remarks/>
        public event SavePatientNoteDataCompletedEventHandler SavePatientNoteDataCompleted;
        
        /// <remarks/>
        public event GetPatientSocialSelfDataCompletedEventHandler GetPatientSocialSelfDataCompleted;
        
        /// <remarks/>
        public event SavePatientSocialSelfDataCompletedEventHandler SavePatientSocialSelfDataCompleted;
        
        /// <remarks/>
        public event GetCombinedPatientDocumentDataCompletedEventHandler GetCombinedPatientDocumentDataCompleted;
        
        /// <remarks/>
        public event GetPatientAllergyDataCompletedEventHandler GetPatientAllergyDataCompleted;
        
        /// <remarks/>
        public event SavePatientAllergyDataCompletedEventHandler SavePatientAllergyDataCompleted;
        
        /// <remarks/>
        public event DeletePatientAllergyDataCompletedEventHandler DeletePatientAllergyDataCompleted;
        
        /// <remarks/>
        public event GetPatientFamilyHistDataCompletedEventHandler GetPatientFamilyHistDataCompleted;
        
        /// <remarks/>
        public event SavePatientFamilyHistDataCompletedEventHandler SavePatientFamilyHistDataCompleted;
        
        /// <remarks/>
        public event DeletePatientFamilyHistDataCompletedEventHandler DeletePatientFamilyHistDataCompleted;
        
        /// <remarks/>
        public event GetPatientMedicalHistDataCompletedEventHandler GetPatientMedicalHistDataCompleted;
        
        /// <remarks/>
        public event SavePatientMedicalHistDataCompletedEventHandler SavePatientMedicalHistDataCompleted;
        
        /// <remarks/>
        public event DeletePatientMedicalHistDataCompletedEventHandler DeletePatientMedicalHistDataCompleted;
        
        /// <remarks/>
        public event GetPatientMedicationDataCompletedEventHandler GetPatientMedicationDataCompleted;
        
        /// <remarks/>
        public event SavePatientMedicationDataCompletedEventHandler SavePatientMedicationDataCompleted;
        
        /// <remarks/>
        public event DeletePatientMedicationDataCompletedEventHandler DeletePatientMedicationDataCompleted;
        
        /// <remarks/>
        public event GetPatientProblemDataCompletedEventHandler GetPatientProblemDataCompleted;
        
        /// <remarks/>
        public event SavePatientProblemDataCompletedEventHandler SavePatientProblemDataCompleted;
        
        /// <remarks/>
        public event DeletePatientProblemDataCompletedEventHandler DeletePatientProblemDataCompleted;
        
        /// <remarks/>
        public event GetPatientProcedureDataCompletedEventHandler GetPatientProcedureDataCompleted;
        
        /// <remarks/>
        public event SavePatientProcedureDataCompletedEventHandler SavePatientProcedureDataCompleted;
        
        /// <remarks/>
        public event DeletePatientProcedureDataCompletedEventHandler DeletePatientProcedureDataCompleted;
        
        /// <remarks/>
        public event GetPatientSocialHistDataCompletedEventHandler GetPatientSocialHistDataCompleted;
        
        /// <remarks/>
        public event SavePatientSocialHistDataCompletedEventHandler SavePatientSocialHistDataCompleted;
        
        /// <remarks/>
        public event DeletePatientSocialHistDataCompletedEventHandler DeletePatientSocialHistDataCompleted;
        
        /// <remarks/>
        public event GetPatientSurgicalHistDataCompletedEventHandler GetPatientSurgicalHistDataCompleted;
        
        /// <remarks/>
        public event SavePatientSurgicalHistDataCompletedEventHandler SavePatientSurgicalHistDataCompleted;
        
        /// <remarks/>
        public event DeletePatientSurgicalHistDataCompletedEventHandler DeletePatientSurgicalHistDataCompleted;
        
        /// <remarks/>
        public event GetPatientVitalSignDataCompletedEventHandler GetPatientVitalSignDataCompleted;
        
        /// <remarks/>
        public event SavePatientVitalSignDataCompletedEventHandler SavePatientVitalSignDataCompleted;
        
        /// <remarks/>
        public event DeletePatientVitalSignDataCompletedEventHandler DeletePatientVitalSignDataCompleted;
        
        /// <remarks/>
        public event GetPatientImmunizationDataCompletedEventHandler GetPatientImmunizationDataCompleted;
        
        /// <remarks/>
        public event SavePatientImmunizationDataCompletedEventHandler SavePatientImmunizationDataCompleted;
        
        /// <remarks/>
        public event DeletePatientImmunizationDataCompletedEventHandler DeletePatientImmunizationDataCompleted;
        
        /// <remarks/>
        public event GetPatientLabResultDataCompletedEventHandler GetPatientLabResultDataCompleted;
        
        /// <remarks/>
        public event SavePatientLabResultDataCompletedEventHandler SavePatientLabResultDataCompleted;
        
        /// <remarks/>
        public event GetPatientLabResultListCompletedEventHandler GetPatientLabResultListCompleted;
        
        /// <remarks/>
        public event GetPatientEmergencyDataCompletedEventHandler GetPatientEmergencyDataCompleted;
        
        /// <remarks/>
        public event SavePatientEmergencyDataCompletedEventHandler SavePatientEmergencyDataCompleted;
        
        /// <remarks/>
        public event DeletePatientEmergencyDataCompletedEventHandler DeletePatientEmergencyDataCompleted;
        
        /// <remarks/>
        public event GetPatientInsuranceDataCompletedEventHandler GetPatientInsuranceDataCompleted;
        
        /// <remarks/>
        public event SavePatientInsuranceDataCompletedEventHandler SavePatientInsuranceDataCompleted;
        
        /// <remarks/>
        public event DeletePatientInsuranceDataCompletedEventHandler DeletePatientInsuranceDataCompleted;
        
        /// <remarks/>
        public event GetPatientPharmacyDataCompletedEventHandler GetPatientPharmacyDataCompleted;
        
        /// <remarks/>
        public event SavePatientPharmacyDataCompletedEventHandler SavePatientPharmacyDataCompleted;
        
        /// <remarks/>
        public event DeletePatientPharmacyDataCompletedEventHandler DeletePatientPharmacyDataCompleted;
        
        /// <remarks/>
        public event GetPatientClinicalDocumentDataCompletedEventHandler GetPatientClinicalDocumentDataCompleted;
        
        /// <remarks/>
        public event SavePatientClinicalDocumentDataCompletedEventHandler SavePatientClinicalDocumentDataCompleted;
        
        /// <remarks/>
        public event DeletePatientClinicalDocumentDataCompletedEventHandler DeletePatientClinicalDocumentDataCompleted;
        
        /// <remarks/>
        public event GetPatientClinicalDocumentListCompletedEventHandler GetPatientClinicalDocumentListCompleted;
        
        /// <remarks/>
        public event PatientClinicalDocumentShareCompletedEventHandler PatientClinicalDocumentShareCompleted;
        
        /// <remarks/>
        public event GetPatientDocumentDataCompletedEventHandler GetPatientDocumentDataCompleted;
        
        /// <remarks/>
        public event SavePatientDocumentDataCompletedEventHandler SavePatientDocumentDataCompleted;
        
        /// <remarks/>
        public event DeletePatientDocumentDataCompletedEventHandler DeletePatientDocumentDataCompleted;
        
        /// <remarks/>
        public event GetPatientDocumentListCompletedEventHandler GetPatientDocumentListCompleted;
        
        /// <remarks/>
        public event PatientDocumentShareCompletedEventHandler PatientDocumentShareCompleted;
        
        /// <remarks/>
        public event GetPatientMedicalDocumentDataCompletedEventHandler GetPatientMedicalDocumentDataCompleted;
        
        /// <remarks/>
        public event SavePatientMedicalDocumentDataCompletedEventHandler SavePatientMedicalDocumentDataCompleted;
        
        /// <remarks/>
        public event DeletePatientMedicalDocumentDataCompletedEventHandler DeletePatientMedicalDocumentDataCompleted;
        
        /// <remarks/>
        public event GetPatientMedicalDocumentListCompletedEventHandler GetPatientMedicalDocumentListCompleted;
        
        /// <remarks/>
        public event PatientMedicalDocumentShareCompletedEventHandler PatientMedicalDocumentShareCompleted;
        
        /// <remarks/>
        public event GetPatientCareDocumentDataCompletedEventHandler GetPatientCareDocumentDataCompleted;
        
        /// <remarks/>
        public event SavePatientCareDocumentDataCompletedEventHandler SavePatientCareDocumentDataCompleted;
        
        /// <remarks/>
        public event DeletePatientCareDocumentDataCompletedEventHandler DeletePatientCareDocumentDataCompleted;
        
        /// <remarks/>
        public event GetPatientCareDocumentListCompletedEventHandler GetPatientCareDocumentListCompleted;
        
        /// <remarks/>
        public event PatientCareDocumentShareCompletedEventHandler PatientCareDocumentShareCompleted;
        
        /// <remarks/>
        public event GetPatientPlanOfCareDataCompletedEventHandler GetPatientPlanOfCareDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientPlanOfCareData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPlanOfCareData SavePatientPlanOfCareData(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientPlanOfCareData", new object[] {
                        PatientPlanOfCare,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPlanOfCareData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientPlanOfCareDataAsync(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            this.SavePatientPlanOfCareDataAsync(PatientPlanOfCare, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientPlanOfCareDataAsync(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientPlanOfCareDataOperationCompleted == null)) {
                this.SavePatientPlanOfCareDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientPlanOfCareDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientPlanOfCareData", new object[] {
                        PatientPlanOfCare,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientPlanOfCareDataOperationCompleted, userState);
        }
        
        private void OnSavePatientPlanOfCareDataOperationCompleted(object arg) {
            if ((this.SavePatientPlanOfCareDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientPlanOfCareDataCompleted(this, new SavePatientPlanOfCareDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientPlanOfCareData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPlanOfCareData DeletePatientPlanOfCareData(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientPlanOfCareData", new object[] {
                        PatientPlanOfCare,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPlanOfCareData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientPlanOfCareDataAsync(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            this.DeletePatientPlanOfCareDataAsync(PatientPlanOfCare, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientPlanOfCareDataAsync(PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientPlanOfCareDataOperationCompleted == null)) {
                this.DeletePatientPlanOfCareDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientPlanOfCareDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientPlanOfCareData", new object[] {
                        PatientPlanOfCare,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientPlanOfCareDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientPlanOfCareDataOperationCompleted(object arg) {
            if ((this.DeletePatientPlanOfCareDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientPlanOfCareDataCompleted(this, new DeletePatientPlanOfCareDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientClinicalInstructionsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientClinicalInstructionsData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientClinicalInstructionsData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientClinicalInstructionsDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientClinicalInstructionsDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientClinicalInstructionsDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientClinicalInstructionsDataOperationCompleted == null)) {
                this.GetPatientClinicalInstructionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientClinicalInstructionsDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientClinicalInstructionsData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientClinicalInstructionsDataOperationCompleted, userState);
        }
        
        private void OnGetPatientClinicalInstructionsDataOperationCompleted(object arg) {
            if ((this.GetPatientClinicalInstructionsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientClinicalInstructionsDataCompleted(this, new GetPatientClinicalInstructionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientDoctorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientDoctorData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientDoctorData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDoctorDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientDoctorDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientDoctorDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientDoctorDataOperationCompleted == null)) {
                this.GetPatientDoctorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDoctorDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientDoctorData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientDoctorDataOperationCompleted, userState);
        }
        
        private void OnGetPatientDoctorDataOperationCompleted(object arg) {
            if ((this.GetPatientDoctorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDoctorDataCompleted(this, new GetPatientDoctorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientDoctorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDoctorData SavePatientDoctorData(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientDoctorData", new object[] {
                        PatientDoctor,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDoctorData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientDoctorDataAsync(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            this.SavePatientDoctorDataAsync(PatientDoctor, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientDoctorDataAsync(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientDoctorDataOperationCompleted == null)) {
                this.SavePatientDoctorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientDoctorDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientDoctorData", new object[] {
                        PatientDoctor,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientDoctorDataOperationCompleted, userState);
        }
        
        private void OnSavePatientDoctorDataOperationCompleted(object arg) {
            if ((this.SavePatientDoctorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientDoctorDataCompleted(this, new SavePatientDoctorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientDoctorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDoctorData DeletePatientDoctorData(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientDoctorData", new object[] {
                        PatientDoctor,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDoctorData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientDoctorDataAsync(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            this.DeletePatientDoctorDataAsync(PatientDoctor, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientDoctorDataAsync(PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientDoctorDataOperationCompleted == null)) {
                this.DeletePatientDoctorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientDoctorDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientDoctorData", new object[] {
                        PatientDoctor,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientDoctorDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientDoctorDataOperationCompleted(object arg) {
            if ((this.DeletePatientDoctorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientDoctorDataCompleted(this, new DeletePatientDoctorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAdvisorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientAdvisorData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientAdvisorData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAdvisorDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientAdvisorDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientAdvisorDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientAdvisorDataOperationCompleted == null)) {
                this.GetPatientAdvisorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAdvisorDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientAdvisorData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientAdvisorDataOperationCompleted, userState);
        }
        
        private void OnGetPatientAdvisorDataOperationCompleted(object arg) {
            if ((this.GetPatientAdvisorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAdvisorDataCompleted(this, new GetPatientAdvisorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientAdvisorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAdvisorData SavePatientAdvisorData(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientAdvisorData", new object[] {
                        PatientAdvisor,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAdvisorData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientAdvisorDataAsync(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            this.SavePatientAdvisorDataAsync(PatientAdvisor, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientAdvisorDataAsync(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientAdvisorDataOperationCompleted == null)) {
                this.SavePatientAdvisorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientAdvisorDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientAdvisorData", new object[] {
                        PatientAdvisor,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientAdvisorDataOperationCompleted, userState);
        }
        
        private void OnSavePatientAdvisorDataOperationCompleted(object arg) {
            if ((this.SavePatientAdvisorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientAdvisorDataCompleted(this, new SavePatientAdvisorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientAdvisorData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAdvisorData DeletePatientAdvisorData(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientAdvisorData", new object[] {
                        PatientAdvisor,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAdvisorData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAdvisorDataAsync(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            this.DeletePatientAdvisorDataAsync(PatientAdvisor, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientAdvisorDataAsync(PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientAdvisorDataOperationCompleted == null)) {
                this.DeletePatientAdvisorDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientAdvisorDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientAdvisorData", new object[] {
                        PatientAdvisor,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientAdvisorDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientAdvisorDataOperationCompleted(object arg) {
            if ((this.DeletePatientAdvisorDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientAdvisorDataCompleted(this, new DeletePatientAdvisorDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabResultTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSummaryTableData GetLabResultTestData(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetLabResultTestData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSummaryTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabResultTestDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            this.GetLabResultTestDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetLabResultTestDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetLabResultTestDataOperationCompleted == null)) {
                this.GetLabResultTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabResultTestDataOperationCompleted);
            }
            this.InvokeAsync("GetLabResultTestData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetLabResultTestDataOperationCompleted, userState);
        }
        
        private void OnGetLabResultTestDataOperationCompleted(object arg) {
            if ((this.GetLabResultTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabResultTestDataCompleted(this, new GetLabResultTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSummaryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSummaryTableData GetPatientSummaryData(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSummaryTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSummaryDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientSummaryDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSummaryDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSummaryDataOperationCompleted == null)) {
                this.GetPatientSummaryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSummaryDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSummaryDataOperationCompleted, userState);
        }
        
        private void OnGetPatientSummaryDataOperationCompleted(object arg) {
            if ((this.GetPatientSummaryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSummaryDataCompleted(this, new GetPatientSummaryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientCCD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientCCDResult GetPatientCCD(CCDParms Parms, string Token, long UserId, long FacilityId, short Action) {
            object[] results = this.Invoke("GetPatientCCD", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId,
                        Action});
            return ((PatientCCDResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientCCDAsync(CCDParms Parms, string Token, long UserId, long FacilityId, short Action) {
            this.GetPatientCCDAsync(Parms, Token, UserId, FacilityId, Action, null);
        }
        
        /// <remarks/>
        public void GetPatientCCDAsync(CCDParms Parms, string Token, long UserId, long FacilityId, short Action, object userState) {
            if ((this.GetPatientCCDOperationCompleted == null)) {
                this.GetPatientCCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientCCDOperationCompleted);
            }
            this.InvokeAsync("GetPatientCCD", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId,
                        Action}, this.GetPatientCCDOperationCompleted, userState);
        }
        
        private void OnGetPatientCCDOperationCompleted(object arg) {
            if ((this.GetPatientCCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCCDCompleted(this, new GetPatientCCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientCCD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CCDPostResponse SavePatientCCD(CCDPostData CCDData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientCCD", new object[] {
                        CCDData,
                        Token,
                        UserId,
                        FacilityId});
            return ((CCDPostResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientCCDAsync(CCDPostData CCDData, string Token, long UserId, long FacilityId) {
            this.SavePatientCCDAsync(CCDData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientCCDAsync(CCDPostData CCDData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientCCDOperationCompleted == null)) {
                this.SavePatientCCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientCCDOperationCompleted);
            }
            this.InvokeAsync("SavePatientCCD", new object[] {
                        CCDData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientCCDOperationCompleted, userState);
        }
        
        private void OnSavePatientCCDOperationCompleted(object arg) {
            if ((this.SavePatientCCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientCCDCompleted(this, new SavePatientCCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCDAuditLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetCCDAuditLog(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetCCDAuditLog", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCCDAuditLogAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetCCDAuditLogAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetCCDAuditLogAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetCCDAuditLogOperationCompleted == null)) {
                this.GetCCDAuditLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCDAuditLogOperationCompleted);
            }
            this.InvokeAsync("GetCCDAuditLog", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetCCDAuditLogOperationCompleted, userState);
        }
        
        private void OnGetCCDAuditLogOperationCompleted(object arg) {
            if ((this.GetCCDAuditLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCDAuditLogCompleted(this, new GetCCDAuditLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedicalPortfolio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MedicalPortfolioData GetMedicalPortfolio(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetMedicalPortfolio", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((MedicalPortfolioData)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicalPortfolioAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetMedicalPortfolioAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetMedicalPortfolioAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetMedicalPortfolioOperationCompleted == null)) {
                this.GetMedicalPortfolioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalPortfolioOperationCompleted);
            }
            this.InvokeAsync("GetMedicalPortfolio", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetMedicalPortfolioOperationCompleted, userState);
        }
        
        private void OnGetMedicalPortfolioOperationCompleted(object arg) {
            if ((this.GetMedicalPortfolioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalPortfolioCompleted(this, new GetMedicalPortfolioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientPolicyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientPolicyData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientPolicyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientPolicyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientPolicyDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientPolicyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientPolicyDataOperationCompleted == null)) {
                this.GetPatientPolicyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientPolicyDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientPolicyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientPolicyDataOperationCompleted, userState);
        }
        
        private void OnGetPatientPolicyDataOperationCompleted(object arg) {
            if ((this.GetPatientPolicyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientPolicyDataCompleted(this, new GetPatientPolicyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientPolicyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPolicyData SavePatientPolicyData(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientPolicyData", new object[] {
                        PatientPolicy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPolicyData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientPolicyDataAsync(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            this.SavePatientPolicyDataAsync(PatientPolicy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientPolicyDataAsync(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientPolicyDataOperationCompleted == null)) {
                this.SavePatientPolicyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientPolicyDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientPolicyData", new object[] {
                        PatientPolicy,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientPolicyDataOperationCompleted, userState);
        }
        
        private void OnSavePatientPolicyDataOperationCompleted(object arg) {
            if ((this.SavePatientPolicyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientPolicyDataCompleted(this, new SavePatientPolicyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientPolicyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPolicyData DeletePatientPolicyData(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientPolicyData", new object[] {
                        PatientPolicy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPolicyData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientPolicyDataAsync(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            this.DeletePatientPolicyDataAsync(PatientPolicy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientPolicyDataAsync(PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientPolicyDataOperationCompleted == null)) {
                this.DeletePatientPolicyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientPolicyDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientPolicyData", new object[] {
                        PatientPolicy,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientPolicyDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientPolicyDataOperationCompleted(object arg) {
            if ((this.DeletePatientPolicyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientPolicyDataCompleted(this, new DeletePatientPolicyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedicalSummaryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalTableData GetMedicalSummaryData(PatientMedicalParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetMedicalSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicalSummaryDataAsync(PatientMedicalParms Parms, string Token, long UserId, long FacilityId) {
            this.GetMedicalSummaryDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetMedicalSummaryDataAsync(PatientMedicalParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetMedicalSummaryDataOperationCompleted == null)) {
                this.GetMedicalSummaryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalSummaryDataOperationCompleted);
            }
            this.InvokeAsync("GetMedicalSummaryData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetMedicalSummaryDataOperationCompleted, userState);
        }
        
        private void OnGetMedicalSummaryDataOperationCompleted(object arg) {
            if ((this.GetMedicalSummaryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalSummaryDataCompleted(this, new GetMedicalSummaryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientVisitCCDData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVisitCCD GetPatientVisitCCDData(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientVisitCCDData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVisitCCD)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientVisitCCDDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientVisitCCDDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientVisitCCDDataAsync(PatientSummaryParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientVisitCCDDataOperationCompleted == null)) {
                this.GetPatientVisitCCDDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientVisitCCDDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientVisitCCDData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientVisitCCDDataOperationCompleted, userState);
        }
        
        private void OnGetPatientVisitCCDDataOperationCompleted(object arg) {
            if ((this.GetPatientVisitCCDDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientVisitCCDDataCompleted(this, new GetPatientVisitCCDDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientCCDCustomizeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientCCDTableData GetPatientCCDCustomizeData(PatientCCDParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientCCDCustomizeData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientCCDTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientCCDCustomizeDataAsync(PatientCCDParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientCCDCustomizeDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientCCDCustomizeDataAsync(PatientCCDParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientCCDCustomizeDataOperationCompleted == null)) {
                this.GetPatientCCDCustomizeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientCCDCustomizeDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientCCDCustomizeData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientCCDCustomizeDataOperationCompleted, userState);
        }
        
        private void OnGetPatientCCDCustomizeDataOperationCompleted(object arg) {
            if ((this.GetPatientCCDCustomizeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCCDCustomizeDataCompleted(this, new GetPatientCCDCustomizeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientNoteData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientNoteData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientNoteData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientNoteDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientNoteDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientNoteDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientNoteDataOperationCompleted == null)) {
                this.GetPatientNoteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientNoteDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientNoteData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientNoteDataOperationCompleted, userState);
        }
        
        private void OnGetPatientNoteDataOperationCompleted(object arg) {
            if ((this.GetPatientNoteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientNoteDataCompleted(this, new GetPatientNoteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientNoteData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientNoteData SavePatientNoteData(PatientNoteData PatientNote, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientNoteData", new object[] {
                        PatientNote,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientNoteData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientNoteDataAsync(PatientNoteData PatientNote, string Token, long UserId, long FacilityId) {
            this.SavePatientNoteDataAsync(PatientNote, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientNoteDataAsync(PatientNoteData PatientNote, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientNoteDataOperationCompleted == null)) {
                this.SavePatientNoteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientNoteDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientNoteData", new object[] {
                        PatientNote,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientNoteDataOperationCompleted, userState);
        }
        
        private void OnSavePatientNoteDataOperationCompleted(object arg) {
            if ((this.SavePatientNoteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientNoteDataCompleted(this, new SavePatientNoteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSocialSelfData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSocialSelfData GetPatientSocialSelfData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSocialSelfData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSocialSelfData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSocialSelfDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientSocialSelfDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSocialSelfDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSocialSelfDataOperationCompleted == null)) {
                this.GetPatientSocialSelfDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSocialSelfDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientSocialSelfData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSocialSelfDataOperationCompleted, userState);
        }
        
        private void OnGetPatientSocialSelfDataOperationCompleted(object arg) {
            if ((this.GetPatientSocialSelfDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSocialSelfDataCompleted(this, new GetPatientSocialSelfDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientSocialSelfData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSocialSelfData SavePatientSocialSelfData(PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientSocialSelfData", new object[] {
                        PatientSocialData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSocialSelfData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientSocialSelfDataAsync(PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId) {
            this.SavePatientSocialSelfDataAsync(PatientSocialData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientSocialSelfDataAsync(PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientSocialSelfDataOperationCompleted == null)) {
                this.SavePatientSocialSelfDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientSocialSelfDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientSocialSelfData", new object[] {
                        PatientSocialData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientSocialSelfDataOperationCompleted, userState);
        }
        
        private void OnSavePatientSocialSelfDataOperationCompleted(object arg) {
            if ((this.SavePatientSocialSelfDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientSocialSelfDataCompleted(this, new SavePatientSocialSelfDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCombinedPatientDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetCombinedPatientDocumentData(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetCombinedPatientDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCombinedPatientDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetCombinedPatientDocumentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetCombinedPatientDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetCombinedPatientDocumentDataOperationCompleted == null)) {
                this.GetCombinedPatientDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCombinedPatientDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetCombinedPatientDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetCombinedPatientDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetCombinedPatientDocumentDataOperationCompleted(object arg) {
            if ((this.GetCombinedPatientDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCombinedPatientDocumentDataCompleted(this, new GetCombinedPatientDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAllergyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientAllergyData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientAllergyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientAllergyDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientAllergyDataOperationCompleted == null)) {
                this.GetPatientAllergyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientAllergyDataOperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyDataOperationCompleted(object arg) {
            if ((this.GetPatientAllergyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyDataCompleted(this, new GetPatientAllergyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientAllergyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyData SavePatientAllergyData(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientAllergyData", new object[] {
                        PatientAllergy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAllergyData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientAllergyDataAsync(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            this.SavePatientAllergyDataAsync(PatientAllergy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientAllergyDataAsync(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientAllergyDataOperationCompleted == null)) {
                this.SavePatientAllergyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientAllergyDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientAllergyData", new object[] {
                        PatientAllergy,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientAllergyDataOperationCompleted, userState);
        }
        
        private void OnSavePatientAllergyDataOperationCompleted(object arg) {
            if ((this.SavePatientAllergyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientAllergyDataCompleted(this, new SavePatientAllergyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientAllergyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyData DeletePatientAllergyData(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientAllergyData", new object[] {
                        PatientAllergy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientAllergyData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAllergyDataAsync(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            this.DeletePatientAllergyDataAsync(PatientAllergy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientAllergyDataAsync(PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientAllergyDataOperationCompleted == null)) {
                this.DeletePatientAllergyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientAllergyDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientAllergyData", new object[] {
                        PatientAllergy,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientAllergyDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientAllergyDataOperationCompleted(object arg) {
            if ((this.DeletePatientAllergyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientAllergyDataCompleted(this, new DeletePatientAllergyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientFamilyHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientFamilyHistData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientFamilyHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFamilyHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientFamilyHistDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientFamilyHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientFamilyHistDataOperationCompleted == null)) {
                this.GetPatientFamilyHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFamilyHistDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientFamilyHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientFamilyHistDataOperationCompleted, userState);
        }
        
        private void OnGetPatientFamilyHistDataOperationCompleted(object arg) {
            if ((this.GetPatientFamilyHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFamilyHistDataCompleted(this, new GetPatientFamilyHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientFamilyHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFamilyHistData SavePatientFamilyHistData(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientFamilyHistData", new object[] {
                        PatientFamilyHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientFamilyHistData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientFamilyHistDataAsync(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            this.SavePatientFamilyHistDataAsync(PatientFamilyHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientFamilyHistDataAsync(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientFamilyHistDataOperationCompleted == null)) {
                this.SavePatientFamilyHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientFamilyHistDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientFamilyHistData", new object[] {
                        PatientFamilyHist,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientFamilyHistDataOperationCompleted, userState);
        }
        
        private void OnSavePatientFamilyHistDataOperationCompleted(object arg) {
            if ((this.SavePatientFamilyHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientFamilyHistDataCompleted(this, new SavePatientFamilyHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientFamilyHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFamilyHistData DeletePatientFamilyHistData(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientFamilyHistData", new object[] {
                        PatientFamilyHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientFamilyHistData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientFamilyHistDataAsync(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            this.DeletePatientFamilyHistDataAsync(PatientFamilyHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientFamilyHistDataAsync(PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientFamilyHistDataOperationCompleted == null)) {
                this.DeletePatientFamilyHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientFamilyHistDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientFamilyHistData", new object[] {
                        PatientFamilyHist,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientFamilyHistDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientFamilyHistDataOperationCompleted(object arg) {
            if ((this.DeletePatientFamilyHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientFamilyHistDataCompleted(this, new DeletePatientFamilyHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientMedicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientMedicalHistData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientMedicalHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMedicalHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientMedicalHistDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientMedicalHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientMedicalHistDataOperationCompleted == null)) {
                this.GetPatientMedicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMedicalHistDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientMedicalHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientMedicalHistDataOperationCompleted, userState);
        }
        
        private void OnGetPatientMedicalHistDataOperationCompleted(object arg) {
            if ((this.GetPatientMedicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMedicalHistDataCompleted(this, new GetPatientMedicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientMedicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalHistData SavePatientMedicalHistData(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientMedicalHistData", new object[] {
                        PatientMedicalHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalHistData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientMedicalHistDataAsync(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            this.SavePatientMedicalHistDataAsync(PatientMedicalHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientMedicalHistDataAsync(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientMedicalHistDataOperationCompleted == null)) {
                this.SavePatientMedicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientMedicalHistDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientMedicalHistData", new object[] {
                        PatientMedicalHist,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientMedicalHistDataOperationCompleted, userState);
        }
        
        private void OnSavePatientMedicalHistDataOperationCompleted(object arg) {
            if ((this.SavePatientMedicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientMedicalHistDataCompleted(this, new SavePatientMedicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientMedicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalHistData DeletePatientMedicalHistData(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientMedicalHistData", new object[] {
                        PatientMedicalHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalHistData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientMedicalHistDataAsync(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            this.DeletePatientMedicalHistDataAsync(PatientMedicalHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientMedicalHistDataAsync(PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientMedicalHistDataOperationCompleted == null)) {
                this.DeletePatientMedicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientMedicalHistDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientMedicalHistData", new object[] {
                        PatientMedicalHist,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientMedicalHistDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientMedicalHistDataOperationCompleted(object arg) {
            if ((this.DeletePatientMedicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientMedicalHistDataCompleted(this, new DeletePatientMedicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientMedicationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientMedicationData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientMedicationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMedicationDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientMedicationDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientMedicationDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientMedicationDataOperationCompleted == null)) {
                this.GetPatientMedicationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMedicationDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientMedicationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientMedicationDataOperationCompleted, userState);
        }
        
        private void OnGetPatientMedicationDataOperationCompleted(object arg) {
            if ((this.GetPatientMedicationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMedicationDataCompleted(this, new GetPatientMedicationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientMedicationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicationData SavePatientMedicationData(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientMedicationData", new object[] {
                        PatientMedication,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicationData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientMedicationDataAsync(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            this.SavePatientMedicationDataAsync(PatientMedication, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientMedicationDataAsync(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientMedicationDataOperationCompleted == null)) {
                this.SavePatientMedicationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientMedicationDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientMedicationData", new object[] {
                        PatientMedication,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientMedicationDataOperationCompleted, userState);
        }
        
        private void OnSavePatientMedicationDataOperationCompleted(object arg) {
            if ((this.SavePatientMedicationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientMedicationDataCompleted(this, new SavePatientMedicationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientMedicationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicationData DeletePatientMedicationData(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientMedicationData", new object[] {
                        PatientMedication,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicationData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientMedicationDataAsync(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            this.DeletePatientMedicationDataAsync(PatientMedication, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientMedicationDataAsync(PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientMedicationDataOperationCompleted == null)) {
                this.DeletePatientMedicationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientMedicationDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientMedicationData", new object[] {
                        PatientMedication,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientMedicationDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientMedicationDataOperationCompleted(object arg) {
            if ((this.DeletePatientMedicationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientMedicationDataCompleted(this, new DeletePatientMedicationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientProblemData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientProblemData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientProblemData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientProblemDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientProblemDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientProblemDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientProblemDataOperationCompleted == null)) {
                this.GetPatientProblemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientProblemDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientProblemData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientProblemDataOperationCompleted, userState);
        }
        
        private void OnGetPatientProblemDataOperationCompleted(object arg) {
            if ((this.GetPatientProblemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientProblemDataCompleted(this, new GetPatientProblemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientProblemData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientProblemData SavePatientProblemData(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientProblemData", new object[] {
                        PatientProblem,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientProblemData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientProblemDataAsync(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            this.SavePatientProblemDataAsync(PatientProblem, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientProblemDataAsync(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientProblemDataOperationCompleted == null)) {
                this.SavePatientProblemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientProblemDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientProblemData", new object[] {
                        PatientProblem,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientProblemDataOperationCompleted, userState);
        }
        
        private void OnSavePatientProblemDataOperationCompleted(object arg) {
            if ((this.SavePatientProblemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientProblemDataCompleted(this, new SavePatientProblemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientProblemData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientProblemData DeletePatientProblemData(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientProblemData", new object[] {
                        PatientProblem,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientProblemData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientProblemDataAsync(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            this.DeletePatientProblemDataAsync(PatientProblem, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientProblemDataAsync(PatientProblemData PatientProblem, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientProblemDataOperationCompleted == null)) {
                this.DeletePatientProblemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientProblemDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientProblemData", new object[] {
                        PatientProblem,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientProblemDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientProblemDataOperationCompleted(object arg) {
            if ((this.DeletePatientProblemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientProblemDataCompleted(this, new DeletePatientProblemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientProcedureData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientProcedureData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientProcedureData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientProcedureDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientProcedureDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientProcedureDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientProcedureDataOperationCompleted == null)) {
                this.GetPatientProcedureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientProcedureDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientProcedureData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientProcedureDataOperationCompleted, userState);
        }
        
        private void OnGetPatientProcedureDataOperationCompleted(object arg) {
            if ((this.GetPatientProcedureDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientProcedureDataCompleted(this, new GetPatientProcedureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientProcedureData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientProcedureData SavePatientProcedureData(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientProcedureData", new object[] {
                        PatientProcedure,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientProcedureData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientProcedureDataAsync(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            this.SavePatientProcedureDataAsync(PatientProcedure, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientProcedureDataAsync(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientProcedureDataOperationCompleted == null)) {
                this.SavePatientProcedureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientProcedureDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientProcedureData", new object[] {
                        PatientProcedure,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientProcedureDataOperationCompleted, userState);
        }
        
        private void OnSavePatientProcedureDataOperationCompleted(object arg) {
            if ((this.SavePatientProcedureDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientProcedureDataCompleted(this, new SavePatientProcedureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientProcedureData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientProcedureData DeletePatientProcedureData(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientProcedureData", new object[] {
                        PatientProcedure,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientProcedureData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientProcedureDataAsync(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            this.DeletePatientProcedureDataAsync(PatientProcedure, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientProcedureDataAsync(PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientProcedureDataOperationCompleted == null)) {
                this.DeletePatientProcedureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientProcedureDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientProcedureData", new object[] {
                        PatientProcedure,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientProcedureDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientProcedureDataOperationCompleted(object arg) {
            if ((this.DeletePatientProcedureDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientProcedureDataCompleted(this, new DeletePatientProcedureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSocialHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientSocialHistData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSocialHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSocialHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientSocialHistDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSocialHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSocialHistDataOperationCompleted == null)) {
                this.GetPatientSocialHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSocialHistDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientSocialHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSocialHistDataOperationCompleted, userState);
        }
        
        private void OnGetPatientSocialHistDataOperationCompleted(object arg) {
            if ((this.GetPatientSocialHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSocialHistDataCompleted(this, new GetPatientSocialHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientSocialHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSocialHistData SavePatientSocialHistData(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientSocialHistData", new object[] {
                        PatientSocialHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSocialHistData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientSocialHistDataAsync(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            this.SavePatientSocialHistDataAsync(PatientSocialHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientSocialHistDataAsync(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientSocialHistDataOperationCompleted == null)) {
                this.SavePatientSocialHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientSocialHistDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientSocialHistData", new object[] {
                        PatientSocialHist,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientSocialHistDataOperationCompleted, userState);
        }
        
        private void OnSavePatientSocialHistDataOperationCompleted(object arg) {
            if ((this.SavePatientSocialHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientSocialHistDataCompleted(this, new SavePatientSocialHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientSocialHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSocialHistData DeletePatientSocialHistData(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientSocialHistData", new object[] {
                        PatientSocialHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSocialHistData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientSocialHistDataAsync(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            this.DeletePatientSocialHistDataAsync(PatientSocialHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientSocialHistDataAsync(PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientSocialHistDataOperationCompleted == null)) {
                this.DeletePatientSocialHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientSocialHistDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientSocialHistData", new object[] {
                        PatientSocialHist,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientSocialHistDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientSocialHistDataOperationCompleted(object arg) {
            if ((this.DeletePatientSocialHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientSocialHistDataCompleted(this, new DeletePatientSocialHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientSurgicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientSurgicalHistData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientSurgicalHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientSurgicalHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientSurgicalHistDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientSurgicalHistDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientSurgicalHistDataOperationCompleted == null)) {
                this.GetPatientSurgicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientSurgicalHistDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientSurgicalHistData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientSurgicalHistDataOperationCompleted, userState);
        }
        
        private void OnGetPatientSurgicalHistDataOperationCompleted(object arg) {
            if ((this.GetPatientSurgicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientSurgicalHistDataCompleted(this, new GetPatientSurgicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientSurgicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSurgicalHistData SavePatientSurgicalHistData(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientSurgicalHistData", new object[] {
                        PatientSurgicalHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSurgicalHistData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientSurgicalHistDataAsync(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            this.SavePatientSurgicalHistDataAsync(PatientSurgicalHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientSurgicalHistDataAsync(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientSurgicalHistDataOperationCompleted == null)) {
                this.SavePatientSurgicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientSurgicalHistDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientSurgicalHistData", new object[] {
                        PatientSurgicalHist,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientSurgicalHistDataOperationCompleted, userState);
        }
        
        private void OnSavePatientSurgicalHistDataOperationCompleted(object arg) {
            if ((this.SavePatientSurgicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientSurgicalHistDataCompleted(this, new SavePatientSurgicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientSurgicalHistData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientSurgicalHistData DeletePatientSurgicalHistData(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientSurgicalHistData", new object[] {
                        PatientSurgicalHist,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientSurgicalHistData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientSurgicalHistDataAsync(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            this.DeletePatientSurgicalHistDataAsync(PatientSurgicalHist, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientSurgicalHistDataAsync(PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientSurgicalHistDataOperationCompleted == null)) {
                this.DeletePatientSurgicalHistDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientSurgicalHistDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientSurgicalHistData", new object[] {
                        PatientSurgicalHist,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientSurgicalHistDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientSurgicalHistDataOperationCompleted(object arg) {
            if ((this.DeletePatientSurgicalHistDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientSurgicalHistDataCompleted(this, new DeletePatientSurgicalHistDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientVitalSignData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientVitalSignData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientVitalSignData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientVitalSignDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientVitalSignDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientVitalSignDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientVitalSignDataOperationCompleted == null)) {
                this.GetPatientVitalSignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientVitalSignDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientVitalSignData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientVitalSignDataOperationCompleted, userState);
        }
        
        private void OnGetPatientVitalSignDataOperationCompleted(object arg) {
            if ((this.GetPatientVitalSignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientVitalSignDataCompleted(this, new GetPatientVitalSignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientVitalSignData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVitalSignData SavePatientVitalSignData(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientVitalSignData", new object[] {
                        PatientVitalSign,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVitalSignData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientVitalSignDataAsync(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            this.SavePatientVitalSignDataAsync(PatientVitalSign, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientVitalSignDataAsync(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientVitalSignDataOperationCompleted == null)) {
                this.SavePatientVitalSignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientVitalSignDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientVitalSignData", new object[] {
                        PatientVitalSign,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientVitalSignDataOperationCompleted, userState);
        }
        
        private void OnSavePatientVitalSignDataOperationCompleted(object arg) {
            if ((this.SavePatientVitalSignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientVitalSignDataCompleted(this, new SavePatientVitalSignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientVitalSignData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientVitalSignData DeletePatientVitalSignData(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientVitalSignData", new object[] {
                        PatientVitalSign,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientVitalSignData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientVitalSignDataAsync(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            this.DeletePatientVitalSignDataAsync(PatientVitalSign, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientVitalSignDataAsync(PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientVitalSignDataOperationCompleted == null)) {
                this.DeletePatientVitalSignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientVitalSignDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientVitalSignData", new object[] {
                        PatientVitalSign,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientVitalSignDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientVitalSignDataOperationCompleted(object arg) {
            if ((this.DeletePatientVitalSignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientVitalSignDataCompleted(this, new DeletePatientVitalSignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientImmunizationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientImmunizationData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientImmunizationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientImmunizationDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientImmunizationDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientImmunizationDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientImmunizationDataOperationCompleted == null)) {
                this.GetPatientImmunizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientImmunizationDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientImmunizationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientImmunizationDataOperationCompleted, userState);
        }
        
        private void OnGetPatientImmunizationDataOperationCompleted(object arg) {
            if ((this.GetPatientImmunizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientImmunizationDataCompleted(this, new GetPatientImmunizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientImmunizationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientImmunizationData SavePatientImmunizationData(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientImmunizationData", new object[] {
                        PatientImmunization,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientImmunizationData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientImmunizationDataAsync(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            this.SavePatientImmunizationDataAsync(PatientImmunization, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientImmunizationDataAsync(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientImmunizationDataOperationCompleted == null)) {
                this.SavePatientImmunizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientImmunizationDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientImmunizationData", new object[] {
                        PatientImmunization,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientImmunizationDataOperationCompleted, userState);
        }
        
        private void OnSavePatientImmunizationDataOperationCompleted(object arg) {
            if ((this.SavePatientImmunizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientImmunizationDataCompleted(this, new SavePatientImmunizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientImmunizationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientImmunizationData DeletePatientImmunizationData(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientImmunizationData", new object[] {
                        PatientImmunization,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientImmunizationData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientImmunizationDataAsync(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            this.DeletePatientImmunizationDataAsync(PatientImmunization, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientImmunizationDataAsync(PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientImmunizationDataOperationCompleted == null)) {
                this.DeletePatientImmunizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientImmunizationDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientImmunizationData", new object[] {
                        PatientImmunization,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientImmunizationDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientImmunizationDataOperationCompleted(object arg) {
            if ((this.DeletePatientImmunizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientImmunizationDataCompleted(this, new DeletePatientImmunizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientLabResultData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientLabResultData GetPatientLabResultData(PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientLabResultData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientLabResultData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientLabResultDataAsync(PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientLabResultDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientLabResultDataAsync(PatientLabResultParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientLabResultDataOperationCompleted == null)) {
                this.GetPatientLabResultDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientLabResultDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientLabResultData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientLabResultDataOperationCompleted, userState);
        }
        
        private void OnGetPatientLabResultDataOperationCompleted(object arg) {
            if ((this.GetPatientLabResultDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientLabResultDataCompleted(this, new GetPatientLabResultDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientLabResultData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientLabResultData SavePatientLabResultData(PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientLabResultData", new object[] {
                        PatientLabResult,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientLabResultData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientLabResultDataAsync(PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId) {
            this.SavePatientLabResultDataAsync(PatientLabResult, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientLabResultDataAsync(PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientLabResultDataOperationCompleted == null)) {
                this.SavePatientLabResultDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientLabResultDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientLabResultData", new object[] {
                        PatientLabResult,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientLabResultDataOperationCompleted, userState);
        }
        
        private void OnSavePatientLabResultDataOperationCompleted(object arg) {
            if ((this.SavePatientLabResultDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientLabResultDataCompleted(this, new SavePatientLabResultDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientLabResultList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientLabResultList(PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientLabResultList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientLabResultListAsync(PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientLabResultListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientLabResultListAsync(PatientLabResultParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientLabResultListOperationCompleted == null)) {
                this.GetPatientLabResultListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientLabResultListOperationCompleted);
            }
            this.InvokeAsync("GetPatientLabResultList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientLabResultListOperationCompleted, userState);
        }
        
        private void OnGetPatientLabResultListOperationCompleted(object arg) {
            if ((this.GetPatientLabResultListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientLabResultListCompleted(this, new GetPatientLabResultListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientEmergencyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientEmergencyData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientEmergencyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientEmergencyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientEmergencyDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientEmergencyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientEmergencyDataOperationCompleted == null)) {
                this.GetPatientEmergencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientEmergencyDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientEmergencyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientEmergencyDataOperationCompleted, userState);
        }
        
        private void OnGetPatientEmergencyDataOperationCompleted(object arg) {
            if ((this.GetPatientEmergencyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientEmergencyDataCompleted(this, new GetPatientEmergencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientEmergencyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientEmergencyData SavePatientEmergencyData(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientEmergencyData", new object[] {
                        PatientEmergency,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientEmergencyData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientEmergencyDataAsync(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            this.SavePatientEmergencyDataAsync(PatientEmergency, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientEmergencyDataAsync(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientEmergencyDataOperationCompleted == null)) {
                this.SavePatientEmergencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientEmergencyDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientEmergencyData", new object[] {
                        PatientEmergency,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientEmergencyDataOperationCompleted, userState);
        }
        
        private void OnSavePatientEmergencyDataOperationCompleted(object arg) {
            if ((this.SavePatientEmergencyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientEmergencyDataCompleted(this, new SavePatientEmergencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientEmergencyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientEmergencyData DeletePatientEmergencyData(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientEmergencyData", new object[] {
                        PatientEmergency,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientEmergencyData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientEmergencyDataAsync(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            this.DeletePatientEmergencyDataAsync(PatientEmergency, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientEmergencyDataAsync(PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientEmergencyDataOperationCompleted == null)) {
                this.DeletePatientEmergencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientEmergencyDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientEmergencyData", new object[] {
                        PatientEmergency,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientEmergencyDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientEmergencyDataOperationCompleted(object arg) {
            if ((this.DeletePatientEmergencyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientEmergencyDataCompleted(this, new DeletePatientEmergencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInsuranceData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientInsuranceData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientInsuranceData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInsuranceDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientInsuranceDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientInsuranceDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientInsuranceDataOperationCompleted == null)) {
                this.GetPatientInsuranceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInsuranceDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientInsuranceData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientInsuranceDataOperationCompleted, userState);
        }
        
        private void OnGetPatientInsuranceDataOperationCompleted(object arg) {
            if ((this.GetPatientInsuranceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInsuranceDataCompleted(this, new GetPatientInsuranceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientInsuranceData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientInsuranceData SavePatientInsuranceData(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientInsuranceData", new object[] {
                        PatientInsurance,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientInsuranceData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientInsuranceDataAsync(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            this.SavePatientInsuranceDataAsync(PatientInsurance, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientInsuranceDataAsync(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientInsuranceDataOperationCompleted == null)) {
                this.SavePatientInsuranceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientInsuranceDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientInsuranceData", new object[] {
                        PatientInsurance,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientInsuranceDataOperationCompleted, userState);
        }
        
        private void OnSavePatientInsuranceDataOperationCompleted(object arg) {
            if ((this.SavePatientInsuranceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientInsuranceDataCompleted(this, new SavePatientInsuranceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientInsuranceData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientInsuranceData DeletePatientInsuranceData(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientInsuranceData", new object[] {
                        PatientInsurance,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientInsuranceData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientInsuranceDataAsync(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            this.DeletePatientInsuranceDataAsync(PatientInsurance, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientInsuranceDataAsync(PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientInsuranceDataOperationCompleted == null)) {
                this.DeletePatientInsuranceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientInsuranceDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientInsuranceData", new object[] {
                        PatientInsurance,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientInsuranceDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientInsuranceDataOperationCompleted(object arg) {
            if ((this.DeletePatientInsuranceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientInsuranceDataCompleted(this, new DeletePatientInsuranceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientPharmacyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientPharmacyData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientPharmacyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientPharmacyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientPharmacyDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientPharmacyDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientPharmacyDataOperationCompleted == null)) {
                this.GetPatientPharmacyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientPharmacyDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientPharmacyData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientPharmacyDataOperationCompleted, userState);
        }
        
        private void OnGetPatientPharmacyDataOperationCompleted(object arg) {
            if ((this.GetPatientPharmacyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientPharmacyDataCompleted(this, new GetPatientPharmacyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientPharmacyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPharmacyData SavePatientPharmacyData(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientPharmacyData", new object[] {
                        PatientPharmacy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPharmacyData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientPharmacyDataAsync(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            this.SavePatientPharmacyDataAsync(PatientPharmacy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientPharmacyDataAsync(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientPharmacyDataOperationCompleted == null)) {
                this.SavePatientPharmacyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientPharmacyDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientPharmacyData", new object[] {
                        PatientPharmacy,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientPharmacyDataOperationCompleted, userState);
        }
        
        private void OnSavePatientPharmacyDataOperationCompleted(object arg) {
            if ((this.SavePatientPharmacyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientPharmacyDataCompleted(this, new SavePatientPharmacyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientPharmacyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientPharmacyData DeletePatientPharmacyData(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientPharmacyData", new object[] {
                        PatientPharmacy,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientPharmacyData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientPharmacyDataAsync(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            this.DeletePatientPharmacyDataAsync(PatientPharmacy, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientPharmacyDataAsync(PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientPharmacyDataOperationCompleted == null)) {
                this.DeletePatientPharmacyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientPharmacyDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientPharmacyData", new object[] {
                        PatientPharmacy,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientPharmacyDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientPharmacyDataOperationCompleted(object arg) {
            if ((this.DeletePatientPharmacyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientPharmacyDataCompleted(this, new DeletePatientPharmacyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientClinicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientClinicalDocumentData GetPatientClinicalDocumentData(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientClinicalDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientClinicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientClinicalDocumentDataAsync(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientClinicalDocumentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientClinicalDocumentDataAsync(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientClinicalDocumentDataOperationCompleted == null)) {
                this.GetPatientClinicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientClinicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientClinicalDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientClinicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetPatientClinicalDocumentDataOperationCompleted(object arg) {
            if ((this.GetPatientClinicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientClinicalDocumentDataCompleted(this, new GetPatientClinicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientClinicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientClinicalDocumentData SavePatientClinicalDocumentData(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientClinicalDocumentData", new object[] {
                        PatientClinicalDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientClinicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientClinicalDocumentDataAsync(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            this.SavePatientClinicalDocumentDataAsync(PatientClinicalDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientClinicalDocumentDataAsync(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientClinicalDocumentDataOperationCompleted == null)) {
                this.SavePatientClinicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientClinicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientClinicalDocumentData", new object[] {
                        PatientClinicalDocument,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientClinicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnSavePatientClinicalDocumentDataOperationCompleted(object arg) {
            if ((this.SavePatientClinicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientClinicalDocumentDataCompleted(this, new SavePatientClinicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientClinicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientClinicalDocumentData DeletePatientClinicalDocumentData(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientClinicalDocumentData", new object[] {
                        PatientClinicalDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientClinicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientClinicalDocumentDataAsync(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            this.DeletePatientClinicalDocumentDataAsync(PatientClinicalDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientClinicalDocumentDataAsync(PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientClinicalDocumentDataOperationCompleted == null)) {
                this.DeletePatientClinicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientClinicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientClinicalDocumentData", new object[] {
                        PatientClinicalDocument,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientClinicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientClinicalDocumentDataOperationCompleted(object arg) {
            if ((this.DeletePatientClinicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientClinicalDocumentDataCompleted(this, new DeletePatientClinicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientClinicalDocumentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientClinicalDocumentList(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientClinicalDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientClinicalDocumentListAsync(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientClinicalDocumentListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientClinicalDocumentListAsync(PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientClinicalDocumentListOperationCompleted == null)) {
                this.GetPatientClinicalDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientClinicalDocumentListOperationCompleted);
            }
            this.InvokeAsync("GetPatientClinicalDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientClinicalDocumentListOperationCompleted, userState);
        }
        
        private void OnGetPatientClinicalDocumentListOperationCompleted(object arg) {
            if ((this.GetPatientClinicalDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientClinicalDocumentListCompleted(this, new GetPatientClinicalDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientClinicalDocumentShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentResp PatientClinicalDocumentShare(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientClinicalDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientClinicalDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.PatientClinicalDocumentShareAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientClinicalDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientClinicalDocumentShareOperationCompleted == null)) {
                this.PatientClinicalDocumentShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientClinicalDocumentShareOperationCompleted);
            }
            this.InvokeAsync("PatientClinicalDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.PatientClinicalDocumentShareOperationCompleted, userState);
        }
        
        private void OnPatientClinicalDocumentShareOperationCompleted(object arg) {
            if ((this.PatientClinicalDocumentShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientClinicalDocumentShareCompleted(this, new PatientClinicalDocumentShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentData GetPatientDocumentData(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientDocumentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientDocumentDataOperationCompleted == null)) {
                this.GetPatientDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetPatientDocumentDataOperationCompleted(object arg) {
            if ((this.GetPatientDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDocumentDataCompleted(this, new GetPatientDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentData SavePatientDocumentData(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientDocumentDataAsync(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.SavePatientDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientDocumentDataAsync(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientDocumentDataOperationCompleted == null)) {
                this.SavePatientDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientDocumentDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientDocumentDataOperationCompleted, userState);
        }
        
        private void OnSavePatientDocumentDataOperationCompleted(object arg) {
            if ((this.SavePatientDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientDocumentDataCompleted(this, new SavePatientDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentData DeletePatientDocumentData(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientDocumentDataAsync(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.DeletePatientDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientDocumentDataAsync(PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientDocumentDataOperationCompleted == null)) {
                this.DeletePatientDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientDocumentDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientDocumentDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientDocumentDataOperationCompleted(object arg) {
            if ((this.DeletePatientDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientDocumentDataCompleted(this, new DeletePatientDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientDocumentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientDocumentList(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientDocumentListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientDocumentListOperationCompleted == null)) {
                this.GetPatientDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDocumentListOperationCompleted);
            }
            this.InvokeAsync("GetPatientDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientDocumentListOperationCompleted, userState);
        }
        
        private void OnGetPatientDocumentListOperationCompleted(object arg) {
            if ((this.GetPatientDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDocumentListCompleted(this, new GetPatientDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientDocumentShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentResp PatientDocumentShare(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.PatientDocumentShareAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientDocumentShareOperationCompleted == null)) {
                this.PatientDocumentShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientDocumentShareOperationCompleted);
            }
            this.InvokeAsync("PatientDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.PatientDocumentShareOperationCompleted, userState);
        }
        
        private void OnPatientDocumentShareOperationCompleted(object arg) {
            if ((this.PatientDocumentShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientDocumentShareCompleted(this, new PatientDocumentShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientMedicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalDocumentData GetPatientMedicalDocumentData(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientMedicalDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMedicalDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientMedicalDocumentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientMedicalDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientMedicalDocumentDataOperationCompleted == null)) {
                this.GetPatientMedicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMedicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientMedicalDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientMedicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetPatientMedicalDocumentDataOperationCompleted(object arg) {
            if ((this.GetPatientMedicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMedicalDocumentDataCompleted(this, new GetPatientMedicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientMedicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalDocumentData SavePatientMedicalDocumentData(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientMedicalDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientMedicalDocumentDataAsync(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.SavePatientMedicalDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientMedicalDocumentDataAsync(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientMedicalDocumentDataOperationCompleted == null)) {
                this.SavePatientMedicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientMedicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientMedicalDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientMedicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnSavePatientMedicalDocumentDataOperationCompleted(object arg) {
            if ((this.SavePatientMedicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientMedicalDocumentDataCompleted(this, new SavePatientMedicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientMedicalDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientMedicalDocumentData DeletePatientMedicalDocumentData(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientMedicalDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientMedicalDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientMedicalDocumentDataAsync(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.DeletePatientMedicalDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientMedicalDocumentDataAsync(PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientMedicalDocumentDataOperationCompleted == null)) {
                this.DeletePatientMedicalDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientMedicalDocumentDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientMedicalDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientMedicalDocumentDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientMedicalDocumentDataOperationCompleted(object arg) {
            if ((this.DeletePatientMedicalDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientMedicalDocumentDataCompleted(this, new DeletePatientMedicalDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientMedicalDocumentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientMedicalDocumentList(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientMedicalDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMedicalDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientMedicalDocumentListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientMedicalDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientMedicalDocumentListOperationCompleted == null)) {
                this.GetPatientMedicalDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMedicalDocumentListOperationCompleted);
            }
            this.InvokeAsync("GetPatientMedicalDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientMedicalDocumentListOperationCompleted, userState);
        }
        
        private void OnGetPatientMedicalDocumentListOperationCompleted(object arg) {
            if ((this.GetPatientMedicalDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMedicalDocumentListCompleted(this, new GetPatientMedicalDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientMedicalDocumentShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentResp PatientMedicalDocumentShare(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientMedicalDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientMedicalDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.PatientMedicalDocumentShareAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientMedicalDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientMedicalDocumentShareOperationCompleted == null)) {
                this.PatientMedicalDocumentShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientMedicalDocumentShareOperationCompleted);
            }
            this.InvokeAsync("PatientMedicalDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.PatientMedicalDocumentShareOperationCompleted, userState);
        }
        
        private void OnPatientMedicalDocumentShareOperationCompleted(object arg) {
            if ((this.PatientMedicalDocumentShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientMedicalDocumentShareCompleted(this, new PatientMedicalDocumentShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientCareDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientCareDocumentData GetPatientCareDocumentData(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientCareDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientCareDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientCareDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientCareDocumentDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientCareDocumentDataAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientCareDocumentDataOperationCompleted == null)) {
                this.GetPatientCareDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientCareDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientCareDocumentData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientCareDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetPatientCareDocumentDataOperationCompleted(object arg) {
            if ((this.GetPatientCareDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCareDocumentDataCompleted(this, new GetPatientCareDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatientCareDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientCareDocumentData SavePatientCareDocumentData(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePatientCareDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientCareDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientCareDocumentDataAsync(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.SavePatientCareDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePatientCareDocumentDataAsync(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePatientCareDocumentDataOperationCompleted == null)) {
                this.SavePatientCareDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientCareDocumentDataOperationCompleted);
            }
            this.InvokeAsync("SavePatientCareDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.SavePatientCareDocumentDataOperationCompleted, userState);
        }
        
        private void OnSavePatientCareDocumentDataOperationCompleted(object arg) {
            if ((this.SavePatientCareDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientCareDocumentDataCompleted(this, new SavePatientCareDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatientCareDocumentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientCareDocumentData DeletePatientCareDocumentData(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("DeletePatientCareDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientCareDocumentData)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientCareDocumentDataAsync(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            this.DeletePatientCareDocumentDataAsync(PatientDocument, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void DeletePatientCareDocumentDataAsync(PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId, object userState) {
            if ((this.DeletePatientCareDocumentDataOperationCompleted == null)) {
                this.DeletePatientCareDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientCareDocumentDataOperationCompleted);
            }
            this.InvokeAsync("DeletePatientCareDocumentData", new object[] {
                        PatientDocument,
                        Token,
                        UserId,
                        FacilityId}, this.DeletePatientCareDocumentDataOperationCompleted, userState);
        }
        
        private void OnDeletePatientCareDocumentDataOperationCompleted(object arg) {
            if ((this.DeletePatientCareDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientCareDocumentDataCompleted(this, new DeletePatientCareDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientCareDocumentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientCareDocumentList(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientCareDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientCareDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientCareDocumentListAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientCareDocumentListAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientCareDocumentListOperationCompleted == null)) {
                this.GetPatientCareDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientCareDocumentListOperationCompleted);
            }
            this.InvokeAsync("GetPatientCareDocumentList", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientCareDocumentListOperationCompleted, userState);
        }
        
        private void OnGetPatientCareDocumentListOperationCompleted(object arg) {
            if ((this.GetPatientCareDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCareDocumentListCompleted(this, new GetPatientCareDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientCareDocumentShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocumentResp PatientCareDocumentShare(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("PatientCareDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocumentResp)(results[0]));
        }
        
        /// <remarks/>
        public void PatientCareDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            this.PatientCareDocumentShareAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void PatientCareDocumentShareAsync(PatientDocumentParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.PatientCareDocumentShareOperationCompleted == null)) {
                this.PatientCareDocumentShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientCareDocumentShareOperationCompleted);
            }
            this.InvokeAsync("PatientCareDocumentShare", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.PatientCareDocumentShareOperationCompleted, userState);
        }
        
        private void OnPatientCareDocumentShareOperationCompleted(object arg) {
            if ((this.PatientCareDocumentShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientCareDocumentShareCompleted(this, new PatientCareDocumentShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientPlanOfCareData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDocTableData GetPatientPlanOfCareData(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPatientPlanOfCareData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PatientDocTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientPlanOfCareDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPatientPlanOfCareDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPatientPlanOfCareDataAsync(PatientDocParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPatientPlanOfCareDataOperationCompleted == null)) {
                this.GetPatientPlanOfCareDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientPlanOfCareDataOperationCompleted);
            }
            this.InvokeAsync("GetPatientPlanOfCareData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPatientPlanOfCareDataOperationCompleted, userState);
        }
        
        private void OnGetPatientPlanOfCareDataOperationCompleted(object arg) {
            if ((this.GetPatientPlanOfCareDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientPlanOfCareDataCompleted(this, new GetPatientPlanOfCareDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPlanOfCareData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long planCntrField;
        
        private short instructionTypeIdField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string instructionField;
        
        private string goalField;
        
        private string noteField;
        
        private System.DateTime appointmentDateTimeField;
        
        private long providerIdField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PlanCntr {
            get {
                return this.planCntrField;
            }
            set {
                this.planCntrField = value;
            }
        }
        
        /// <remarks/>
        public short InstructionTypeId {
            get {
                return this.instructionTypeIdField;
            }
            set {
                this.instructionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
            }
        }
        
        /// <remarks/>
        public string Goal {
            get {
                return this.goalField;
            }
            set {
                this.goalField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AppointmentDateTime {
            get {
                return this.appointmentDateTimeField;
            }
            set {
                this.appointmentDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCareDocumentData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string doctorNameField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
            }
        }
        
        /// <remarks/>
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalDocumentData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string facilityNameField;
        
        private string doctorNameField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
            }
        }
        
        /// <remarks/>
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
            }
        }
        
        /// <remarks/>
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentResp {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientClinicalDocumentData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
            }
        }
        
        /// <remarks/>
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientClinicalDocumentParms {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long documentCntrField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPharmacyData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long pharmacyCntrField;
        
        private string pharmacyNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string phoneField;
        
        private bool preferredField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PharmacyCntr {
            get {
                return this.pharmacyCntrField;
            }
            set {
                this.pharmacyCntrField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public bool Preferred {
            get {
                return this.preferredField;
            }
            set {
                this.preferredField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientInsuranceData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientInsuranceIdField;
        
        private string planNameField;
        
        private string memberNumberField;
        
        private string groupNumberField;
        
        private string subscriberField;
        
        private string relationshipField;
        
        private System.DateTime effectiveDateField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientInsuranceId {
            get {
                return this.patientInsuranceIdField;
            }
            set {
                this.patientInsuranceIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlanName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNumber {
            get {
                return this.memberNumberField;
            }
            set {
                this.memberNumberField = value;
            }
        }
        
        /// <remarks/>
        public string GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Subscriber {
            get {
                return this.subscriberField;
            }
            set {
                this.subscriberField = value;
            }
        }
        
        /// <remarks/>
        public string Relationship {
            get {
                return this.relationshipField;
            }
            set {
                this.relationshipField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientEmergencyData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientEmergencyIdField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string homePhoneField;
        
        private string mobilePhoneField;
        
        private string workPhoneField;
        
        private string emailField;
        
        private bool isPrimaryField;
        
        private System.Nullable<int> relationshipIdField;
        
        private bool onCardField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientEmergencyId {
            get {
                return this.patientEmergencyIdField;
            }
            set {
                this.patientEmergencyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RelationshipId {
            get {
                return this.relationshipIdField;
            }
            set {
                this.relationshipIdField = value;
            }
        }
        
        /// <remarks/>
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientLabResultData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        private long providerId_RequestedField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string labNameField;
        
        private System.DateTime orderDateField;
        
        private System.DateTime collectionDateField;
        
        private string requisitonField;
        
        private string specimenField;
        
        private string specimenSourceField;
        
        private System.DateTime reportDateField;
        
        private System.DateTime reviewDateField;
        
        private string reviewerField;
        
        private System.Data.DataTable dtTestsField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderId_Requested {
            get {
                return this.providerId_RequestedField;
            }
            set {
                this.providerId_RequestedField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string LabName {
            get {
                return this.labNameField;
            }
            set {
                this.labNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CollectionDate {
            get {
                return this.collectionDateField;
            }
            set {
                this.collectionDateField = value;
            }
        }
        
        /// <remarks/>
        public string Requisiton {
            get {
                return this.requisitonField;
            }
            set {
                this.requisitonField = value;
            }
        }
        
        /// <remarks/>
        public string Specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string SpecimenSource {
            get {
                return this.specimenSourceField;
            }
            set {
                this.specimenSourceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReviewDate {
            get {
                return this.reviewDateField;
            }
            set {
                this.reviewDateField = value;
            }
        }
        
        /// <remarks/>
        public string Reviewer {
            get {
                return this.reviewerField;
            }
            set {
                this.reviewerField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtTests {
            get {
                return this.dtTestsField;
            }
            set {
                this.dtTestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientLabResultParms {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientImmunizationData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientImmunizationCntrField;
        
        private string immunizationDateField;
        
        private string immunizationTimeField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string vaccineField;
        
        private string amountField;
        
        private string routeField;
        
        private string siteField;
        
        private string sequenceField;
        
        private System.DateTime expirationDateField;
        
        private string lotNumberField;
        
        private string manufacturerField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientImmunizationCntr {
            get {
                return this.patientImmunizationCntrField;
            }
            set {
                this.patientImmunizationCntrField = value;
            }
        }
        
        /// <remarks/>
        public string ImmunizationDate {
            get {
                return this.immunizationDateField;
            }
            set {
                this.immunizationDateField = value;
            }
        }
        
        /// <remarks/>
        public string ImmunizationTime {
            get {
                return this.immunizationTimeField;
            }
            set {
                this.immunizationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Vaccine {
            get {
                return this.vaccineField;
            }
            set {
                this.vaccineField = value;
            }
        }
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string LotNumber {
            get {
                return this.lotNumberField;
            }
            set {
                this.lotNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVitalSignData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientVitalCntrField;
        
        private System.DateTime vitalDateField;
        
        private int heightInField;
        
        private int weightLbField;
        
        private string bloodPressurePosnField;
        
        private int systolicField;
        
        private int diastolicField;
        
        private int pulseField;
        
        private int respirationField;
        
        private decimal temperatureField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientVitalCntr {
            get {
                return this.patientVitalCntrField;
            }
            set {
                this.patientVitalCntrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime VitalDate {
            get {
                return this.vitalDateField;
            }
            set {
                this.vitalDateField = value;
            }
        }
        
        /// <remarks/>
        public int HeightIn {
            get {
                return this.heightInField;
            }
            set {
                this.heightInField = value;
            }
        }
        
        /// <remarks/>
        public int WeightLb {
            get {
                return this.weightLbField;
            }
            set {
                this.weightLbField = value;
            }
        }
        
        /// <remarks/>
        public string BloodPressurePosn {
            get {
                return this.bloodPressurePosnField;
            }
            set {
                this.bloodPressurePosnField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        public int Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
            }
        }
        
        /// <remarks/>
        public int Respiration {
            get {
                return this.respirationField;
            }
            set {
                this.respirationField = value;
            }
        }
        
        /// <remarks/>
        public decimal Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSurgicalHistData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patSurgicalHistCntrField;
        
        private string descriptionField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string diagnosisField;
        
        private string performedByField;
        
        private string serviceLocationField;
        
        private string serviceDateField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatSurgicalHistCntr {
            get {
                return this.patSurgicalHistCntrField;
            }
            set {
                this.patSurgicalHistCntrField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string PerformedBy {
            get {
                return this.performedByField;
            }
            set {
                this.performedByField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceDate {
            get {
                return this.serviceDateField;
            }
            set {
                this.serviceDateField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSocialHistData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patSocialHistCntrField;
        
        private string descriptionField;
        
        private string qualifierField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string beginDateField;
        
        private string endDateField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatSocialHistCntr {
            get {
                return this.patSocialHistCntrField;
            }
            set {
                this.patSocialHistCntrField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string BeginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientProcedureData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patProcedureCntrField;
        
        private string descriptionField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string diagnosisField;
        
        private string performedByField;
        
        private string serviceLocationField;
        
        private string serviceDateField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatProcedureCntr {
            get {
                return this.patProcedureCntrField;
            }
            set {
                this.patProcedureCntrField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string PerformedBy {
            get {
                return this.performedByField;
            }
            set {
                this.performedByField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceDate {
            get {
                return this.serviceDateField;
            }
            set {
                this.serviceDateField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientProblemData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientProblemCntrField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string conditionField;
        
        private string effectiveDateField;
        
        private string lastChangeDateField;
        
        private short conditionStatusIdField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientProblemCntr {
            get {
                return this.patientProblemCntrField;
            }
            set {
                this.patientProblemCntrField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastChangeDate {
            get {
                return this.lastChangeDateField;
            }
            set {
                this.lastChangeDateField = value;
            }
        }
        
        /// <remarks/>
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicationData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientMedicationCntrField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string medicationNameField;
        
        private bool activeField;
        
        private int quantityField;
        
        private string routeIdField;
        
        private int doseField;
        
        private string doseUnitField;
        
        private int refillsField;
        
        private string frequencyField;
        
        private string sigField;
        
        private string diagnosisField;
        
        private System.DateTime startDateField;
        
        private System.DateTime expireDateField;
        
        private string pharmacyField;
        
        private string noteField;
        
        private bool duringVisitField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientMedicationCntr {
            get {
                return this.patientMedicationCntrField;
            }
            set {
                this.patientMedicationCntrField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string RouteId {
            get {
                return this.routeIdField;
            }
            set {
                this.routeIdField = value;
            }
        }
        
        /// <remarks/>
        public int Dose {
            get {
                return this.doseField;
            }
            set {
                this.doseField = value;
            }
        }
        
        /// <remarks/>
        public string DoseUnit {
            get {
                return this.doseUnitField;
            }
            set {
                this.doseUnitField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
        /// <remarks/>
        public string Pharmacy {
            get {
                return this.pharmacyField;
            }
            set {
                this.pharmacyField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public bool DuringVisit {
            get {
                return this.duringVisitField;
            }
            set {
                this.duringVisitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalHistData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patMedicalHistCntrField;
        
        private string descriptionField;
        
        private string dateOfOccuranceField;
        
        private string noteField;
        
        private bool onCardField;
        
        private bool onKeysField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatMedicalHistCntr {
            get {
                return this.patMedicalHistCntrField;
            }
            set {
                this.patMedicalHistCntrField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DateOfOccurance {
            get {
                return this.dateOfOccuranceField;
            }
            set {
                this.dateOfOccuranceField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
            }
        }
        
        /// <remarks/>
        public bool OnKeys {
            get {
                return this.onKeysField;
            }
            set {
                this.onKeysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientFamilyHistData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patFamilyHistCntrField;
        
        private short relationshipIdField;
        
        private string familyMemberField;
        
        private string descriptionField;
        
        private string qualifierField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private short conditionStatusIdField;
        
        private string sNOMEDCodeField;
        
        private int ageAtOnsetField;
        
        private bool diseasedField;
        
        private int diseasedAgeField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatFamilyHistCntr {
            get {
                return this.patFamilyHistCntrField;
            }
            set {
                this.patFamilyHistCntrField = value;
            }
        }
        
        /// <remarks/>
        public short RelationshipId {
            get {
                return this.relationshipIdField;
            }
            set {
                this.relationshipIdField = value;
            }
        }
        
        /// <remarks/>
        public string FamilyMember {
            get {
                return this.familyMemberField;
            }
            set {
                this.familyMemberField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string SNOMEDCode {
            get {
                return this.sNOMEDCodeField;
            }
            set {
                this.sNOMEDCodeField = value;
            }
        }
        
        /// <remarks/>
        public int AgeAtOnset {
            get {
                return this.ageAtOnsetField;
            }
            set {
                this.ageAtOnsetField = value;
            }
        }
        
        /// <remarks/>
        public bool Diseased {
            get {
                return this.diseasedField;
            }
            set {
                this.diseasedField = value;
            }
        }
        
        /// <remarks/>
        public int DiseasedAge {
            get {
                return this.diseasedAgeField;
            }
            set {
                this.diseasedAgeField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAllergyData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientAllergyCntrField;
        
        private string codeValue_AllergenField;
        
        private short codeSystem_AllergenField;
        
        private string allergenField;
        
        private string allergenTypeField;
        
        private string codeValue_ReactionField;
        
        private short codeSystem_ReactionField;
        
        private string reactionField;
        
        private string effectiveDateField;
        
        private short conditionStatusIdField;
        
        private string noteField;
        
        private bool onCardField;
        
        private bool onKeysField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientAllergyCntr {
            get {
                return this.patientAllergyCntrField;
            }
            set {
                this.patientAllergyCntrField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue_Allergen {
            get {
                return this.codeValue_AllergenField;
            }
            set {
                this.codeValue_AllergenField = value;
            }
        }
        
        /// <remarks/>
        public short CodeSystem_Allergen {
            get {
                return this.codeSystem_AllergenField;
            }
            set {
                this.codeSystem_AllergenField = value;
            }
        }
        
        /// <remarks/>
        public string Allergen {
            get {
                return this.allergenField;
            }
            set {
                this.allergenField = value;
            }
        }
        
        /// <remarks/>
        public string AllergenType {
            get {
                return this.allergenTypeField;
            }
            set {
                this.allergenTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeValue_Reaction {
            get {
                return this.codeValue_ReactionField;
            }
            set {
                this.codeValue_ReactionField = value;
            }
        }
        
        /// <remarks/>
        public short CodeSystem_Reaction {
            get {
                return this.codeSystem_ReactionField;
            }
            set {
                this.codeSystem_ReactionField = value;
            }
        }
        
        /// <remarks/>
        public string Reaction {
            get {
                return this.reactionField;
            }
            set {
                this.reactionField = value;
            }
        }
        
        /// <remarks/>
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
            }
        }
        
        /// <remarks/>
        public bool OnKeys {
            get {
                return this.onKeysField;
            }
            set {
                this.onKeysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentParms {
        
        private int optionField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private bool shareField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
            }
        }
        
        /// <remarks/>
        public bool Share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSocialSelfData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string birthplaceField;
        
        private short educationLevelIdField;
        
        private string occupationField;
        
        private bool retiredField;
        
        private short childrenSonField;
        
        private short childrenDaughterField;
        
        private bool caffeineUserField;
        
        private string caffieneTypeField;
        
        private string caffeineAmountField;
        
        private bool exerciseMemberField;
        
        private short exerciseFrequencyIdField;
        
        private string exerciseAmountField;
        
        private short activityLevelIdField;
        
        private string activity1Field;
        
        private string activity2Field;
        
        private string activity3Field;
        
        private bool alcoholUserField;
        
        private short alcoholFrequencyIdField;
        
        private System.DateTime alcoholLastUseField;
        
        private string alcoholTypeField;
        
        private short alcoholStartAgeField;
        
        private bool alcoholFamilyHistField;
        
        private int smokingStatusIdField;
        
        private string smokingStatusField;
        
        private short smokingDailyAmountField;
        
        private string smokingTypeField;
        
        private short smokingYearsField;
        
        private short smokingQuitAttemptsField;
        
        private System.DateTime smokingQuitDateField;
        
        private bool smokingSecondHandField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string Birthplace {
            get {
                return this.birthplaceField;
            }
            set {
                this.birthplaceField = value;
            }
        }
        
        /// <remarks/>
        public short EducationLevelId {
            get {
                return this.educationLevelIdField;
            }
            set {
                this.educationLevelIdField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public bool Retired {
            get {
                return this.retiredField;
            }
            set {
                this.retiredField = value;
            }
        }
        
        /// <remarks/>
        public short ChildrenSon {
            get {
                return this.childrenSonField;
            }
            set {
                this.childrenSonField = value;
            }
        }
        
        /// <remarks/>
        public short ChildrenDaughter {
            get {
                return this.childrenDaughterField;
            }
            set {
                this.childrenDaughterField = value;
            }
        }
        
        /// <remarks/>
        public bool CaffeineUser {
            get {
                return this.caffeineUserField;
            }
            set {
                this.caffeineUserField = value;
            }
        }
        
        /// <remarks/>
        public string CaffieneType {
            get {
                return this.caffieneTypeField;
            }
            set {
                this.caffieneTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CaffeineAmount {
            get {
                return this.caffeineAmountField;
            }
            set {
                this.caffeineAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool ExerciseMember {
            get {
                return this.exerciseMemberField;
            }
            set {
                this.exerciseMemberField = value;
            }
        }
        
        /// <remarks/>
        public short ExerciseFrequencyId {
            get {
                return this.exerciseFrequencyIdField;
            }
            set {
                this.exerciseFrequencyIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExerciseAmount {
            get {
                return this.exerciseAmountField;
            }
            set {
                this.exerciseAmountField = value;
            }
        }
        
        /// <remarks/>
        public short ActivityLevelId {
            get {
                return this.activityLevelIdField;
            }
            set {
                this.activityLevelIdField = value;
            }
        }
        
        /// <remarks/>
        public string Activity1 {
            get {
                return this.activity1Field;
            }
            set {
                this.activity1Field = value;
            }
        }
        
        /// <remarks/>
        public string Activity2 {
            get {
                return this.activity2Field;
            }
            set {
                this.activity2Field = value;
            }
        }
        
        /// <remarks/>
        public string Activity3 {
            get {
                return this.activity3Field;
            }
            set {
                this.activity3Field = value;
            }
        }
        
        /// <remarks/>
        public bool AlcoholUser {
            get {
                return this.alcoholUserField;
            }
            set {
                this.alcoholUserField = value;
            }
        }
        
        /// <remarks/>
        public short AlcoholFrequencyId {
            get {
                return this.alcoholFrequencyIdField;
            }
            set {
                this.alcoholFrequencyIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AlcoholLastUse {
            get {
                return this.alcoholLastUseField;
            }
            set {
                this.alcoholLastUseField = value;
            }
        }
        
        /// <remarks/>
        public string AlcoholType {
            get {
                return this.alcoholTypeField;
            }
            set {
                this.alcoholTypeField = value;
            }
        }
        
        /// <remarks/>
        public short AlcoholStartAge {
            get {
                return this.alcoholStartAgeField;
            }
            set {
                this.alcoholStartAgeField = value;
            }
        }
        
        /// <remarks/>
        public bool AlcoholFamilyHist {
            get {
                return this.alcoholFamilyHistField;
            }
            set {
                this.alcoholFamilyHistField = value;
            }
        }
        
        /// <remarks/>
        public int SmokingStatusId {
            get {
                return this.smokingStatusIdField;
            }
            set {
                this.smokingStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string SmokingStatus {
            get {
                return this.smokingStatusField;
            }
            set {
                this.smokingStatusField = value;
            }
        }
        
        /// <remarks/>
        public short SmokingDailyAmount {
            get {
                return this.smokingDailyAmountField;
            }
            set {
                this.smokingDailyAmountField = value;
            }
        }
        
        /// <remarks/>
        public string SmokingType {
            get {
                return this.smokingTypeField;
            }
            set {
                this.smokingTypeField = value;
            }
        }
        
        /// <remarks/>
        public short SmokingYears {
            get {
                return this.smokingYearsField;
            }
            set {
                this.smokingYearsField = value;
            }
        }
        
        /// <remarks/>
        public short SmokingQuitAttempts {
            get {
                return this.smokingQuitAttemptsField;
            }
            set {
                this.smokingQuitAttemptsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SmokingQuitDate {
            get {
                return this.smokingQuitDateField;
            }
            set {
                this.smokingQuitDateField = value;
            }
        }
        
        /// <remarks/>
        public bool SmokingSecondHand {
            get {
                return this.smokingSecondHandField;
            }
            set {
                this.smokingSecondHandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientNoteData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string noteField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDTableData {
        
        private bool validField;
        
        private bool clinicalSummaryField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtMedsAdministeredField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtImmunizationField;
        
        private System.Data.DataTable dtSocialHistField;
        
        private System.Data.DataTable dtProcedureField;
        
        private System.Data.DataTable dtVitalSignField;
        
        private System.Data.DataTable dtLabField;
        
        private System.Data.DataTable dtPlanOfCareField;
        
        private System.Data.DataTable dtClinicalInstructionsField;
        
        private System.Data.DataTable dtFamilyHistField;
        
        private System.Data.DataTable dtMedicalHistField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalSummary {
            get {
                return this.clinicalSummaryField;
            }
            set {
                this.clinicalSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedsAdministered {
            get {
                return this.dtMedsAdministeredField;
            }
            set {
                this.dtMedsAdministeredField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtImmunization {
            get {
                return this.dtImmunizationField;
            }
            set {
                this.dtImmunizationField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtSocialHist {
            get {
                return this.dtSocialHistField;
            }
            set {
                this.dtSocialHistField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProcedure {
            get {
                return this.dtProcedureField;
            }
            set {
                this.dtProcedureField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtVitalSign {
            get {
                return this.dtVitalSignField;
            }
            set {
                this.dtVitalSignField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtLab {
            get {
                return this.dtLabField;
            }
            set {
                this.dtLabField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPlanOfCare {
            get {
                return this.dtPlanOfCareField;
            }
            set {
                this.dtPlanOfCareField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtClinicalInstructions {
            get {
                return this.dtClinicalInstructionsField;
            }
            set {
                this.dtClinicalInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtFamilyHist {
            get {
                return this.dtFamilyHistField;
            }
            set {
                this.dtFamilyHistField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedicalHist {
            get {
                return this.dtMedicalHistField;
            }
            set {
                this.dtMedicalHistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDParms {
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private bool clinicalSummaryField;
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalSummary {
            get {
                return this.clinicalSummaryField;
            }
            set {
                this.clinicalSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVisitCCD {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long providerIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string licenseField;
        
        private string phoneField;
        
        private string emailField;
        
        private int facilityTypeIdField;
        
        private string facilityTypeField;
        
        private string facilityNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countryCodeField;
        
        private string countryNameField;
        
        private string postalCodeField;
        
        private string facilityPhoneField;
        
        private string facilityFaxField;
        
        private string visitReasonField;
        
        private System.DateTime visitDateField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int FacilityTypeId {
            get {
                return this.facilityTypeIdField;
            }
            set {
                this.facilityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityType {
            get {
                return this.facilityTypeField;
            }
            set {
                this.facilityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityPhone {
            get {
                return this.facilityPhoneField;
            }
            set {
                this.facilityPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityFax {
            get {
                return this.facilityFaxField;
            }
            set {
                this.facilityFaxField = value;
            }
        }
        
        /// <remarks/>
        public string VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime VisitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtEmergencyField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtDoctorUploadedField;
        
        private System.Data.DataTable dtPatientUploadedField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtPolicyField;
        
        private System.Data.DataTable dtDocumentField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtEmergency {
            get {
                return this.dtEmergencyField;
            }
            set {
                this.dtEmergencyField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtDoctorUploaded {
            get {
                return this.dtDoctorUploadedField;
            }
            set {
                this.dtDoctorUploadedField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPatientUploaded {
            get {
                return this.dtPatientUploadedField;
            }
            set {
                this.dtPatientUploadedField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPolicy {
            get {
                return this.dtPolicyField;
            }
            set {
                this.dtPolicyField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtDocument {
            get {
                return this.dtDocumentField;
            }
            set {
                this.dtDocumentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalParms {
        
        private long patientIdField;
        
        private bool emergencyField;
        
        private bool visitField;
        
        private bool doctorUploadedField;
        
        private bool patientUploadedField;
        
        private bool allergyField;
        
        private bool medicationField;
        
        private bool problemField;
        
        private bool policyField;
        
        private bool documentField;
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Emergency {
            get {
                return this.emergencyField;
            }
            set {
                this.emergencyField = value;
            }
        }
        
        /// <remarks/>
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
            }
        }
        
        /// <remarks/>
        public bool DoctorUploaded {
            get {
                return this.doctorUploadedField;
            }
            set {
                this.doctorUploadedField = value;
            }
        }
        
        /// <remarks/>
        public bool PatientUploaded {
            get {
                return this.patientUploadedField;
            }
            set {
                this.patientUploadedField = value;
            }
        }
        
        /// <remarks/>
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
            }
        }
        
        /// <remarks/>
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
        
        /// <remarks/>
        public bool Policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
            }
        }
        
        /// <remarks/>
        public bool Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPolicyData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientPolicyIdField;
        
        private int policyTypeIdField;
        
        private string policyTypeNameField;
        
        private string companyField;
        
        private string policyNoField;
        
        private string groupNumberField;
        
        private string planNumberField;
        
        private string agentField;
        
        private string agentPhoneField;
        
        private string agentFaxField;
        
        private string notesField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientPolicyId {
            get {
                return this.patientPolicyIdField;
            }
            set {
                this.patientPolicyIdField = value;
            }
        }
        
        /// <remarks/>
        public int PolicyTypeId {
            get {
                return this.policyTypeIdField;
            }
            set {
                this.policyTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyTypeName {
            get {
                return this.policyTypeNameField;
            }
            set {
                this.policyTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
            }
        }
        
        /// <remarks/>
        public string GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PlanNumber {
            get {
                return this.planNumberField;
            }
            set {
                this.planNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Agent {
            get {
                return this.agentField;
            }
            set {
                this.agentField = value;
            }
        }
        
        /// <remarks/>
        public string AgentPhone {
            get {
                return this.agentPhoneField;
            }
            set {
                this.agentPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string AgentFax {
            get {
                return this.agentFaxField;
            }
            set {
                this.agentFaxField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MedicalPortfolioData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtOutsideDoctorField;
        
        private System.Data.DataTable dtPatiendDocsField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtOutsideDoctor {
            get {
                return this.dtOutsideDoctorField;
            }
            set {
                this.dtOutsideDoctorField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPatiendDocs {
            get {
                return this.dtPatiendDocsField;
            }
            set {
                this.dtPatiendDocsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDPostResponse {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDPostData {
        
        private long visitIdField;
        
        private long aMRPatientIdField;
        
        private System.DateTime visitDateField;
        
        private long providerIdField;
        
        private string visitReasonField;
        
        private byte[] documentField;
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long AMRPatientId {
            get {
                return this.aMRPatientIdField;
            }
            set {
                this.aMRPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime VisitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public string VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDResult {
        
        private bool validField;
        
        private string errorMessageField;
        
        private string cCDField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string CCD {
            get {
                return this.cCDField;
            }
            set {
                this.cCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDParms {
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private bool customField;
        
        private bool demographicsField;
        
        private bool providerField;
        
        private bool problemsField;
        
        private bool allergiesField;
        
        private bool immunizationsField;
        
        private bool medicationsField;
        
        private bool medsAdministeredField;
        
        private bool socialField;
        
        private bool proceduresField;
        
        private bool vitalSignsField;
        
        private bool labsField;
        
        private bool planOfCareField;
        
        private bool visitReasonField;
        
        private System.Data.DataSet selectionField;
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Custom {
            get {
                return this.customField;
            }
            set {
                this.customField = value;
            }
        }
        
        /// <remarks/>
        public bool Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public bool Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public bool Problems {
            get {
                return this.problemsField;
            }
            set {
                this.problemsField = value;
            }
        }
        
        /// <remarks/>
        public bool Allergies {
            get {
                return this.allergiesField;
            }
            set {
                this.allergiesField = value;
            }
        }
        
        /// <remarks/>
        public bool Immunizations {
            get {
                return this.immunizationsField;
            }
            set {
                this.immunizationsField = value;
            }
        }
        
        /// <remarks/>
        public bool Medications {
            get {
                return this.medicationsField;
            }
            set {
                this.medicationsField = value;
            }
        }
        
        /// <remarks/>
        public bool MedsAdministered {
            get {
                return this.medsAdministeredField;
            }
            set {
                this.medsAdministeredField = value;
            }
        }
        
        /// <remarks/>
        public bool Social {
            get {
                return this.socialField;
            }
            set {
                this.socialField = value;
            }
        }
        
        /// <remarks/>
        public bool Procedures {
            get {
                return this.proceduresField;
            }
            set {
                this.proceduresField = value;
            }
        }
        
        /// <remarks/>
        public bool VitalSigns {
            get {
                return this.vitalSignsField;
            }
            set {
                this.vitalSignsField = value;
            }
        }
        
        /// <remarks/>
        public bool Labs {
            get {
                return this.labsField;
            }
            set {
                this.labsField = value;
            }
        }
        
        /// <remarks/>
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
            }
        }
        
        /// <remarks/>
        public bool VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet Selection {
            get {
                return this.selectionField;
            }
            set {
                this.selectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSummaryTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtSocialHistField;
        
        private System.Data.DataTable dtFamilyHistField;
        
        private System.Data.DataTable dtMedicalHistField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtProcedureField;
        
        private System.Data.DataTable dtVitalSignField;
        
        private System.Data.DataTable dtImmunizationField;
        
        private System.Data.DataTable dtPlanOfCareField;
        
        private System.Data.DataTable dtLabField;
        
        private System.Data.DataTable dtLabDetailField;
        
        private System.Data.DataTable dtLabResultField;
        
        private System.Data.DataTable dtInsuranceField;
        
        private System.Data.DataTable dtClinicalDocsField;
        
        private System.Data.DataTable dtProviderField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtSocialHist {
            get {
                return this.dtSocialHistField;
            }
            set {
                this.dtSocialHistField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtFamilyHist {
            get {
                return this.dtFamilyHistField;
            }
            set {
                this.dtFamilyHistField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMedicalHist {
            get {
                return this.dtMedicalHistField;
            }
            set {
                this.dtMedicalHistField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProcedure {
            get {
                return this.dtProcedureField;
            }
            set {
                this.dtProcedureField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtVitalSign {
            get {
                return this.dtVitalSignField;
            }
            set {
                this.dtVitalSignField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtImmunization {
            get {
                return this.dtImmunizationField;
            }
            set {
                this.dtImmunizationField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtPlanOfCare {
            get {
                return this.dtPlanOfCareField;
            }
            set {
                this.dtPlanOfCareField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtLab {
            get {
                return this.dtLabField;
            }
            set {
                this.dtLabField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtLabDetail {
            get {
                return this.dtLabDetailField;
            }
            set {
                this.dtLabDetailField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtLabResult {
            get {
                return this.dtLabResultField;
            }
            set {
                this.dtLabResultField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtInsurance {
            get {
                return this.dtInsuranceField;
            }
            set {
                this.dtInsuranceField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtClinicalDocs {
            get {
                return this.dtClinicalDocsField;
            }
            set {
                this.dtClinicalDocsField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtProvider {
            get {
                return this.dtProviderField;
            }
            set {
                this.dtProviderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSummaryParms {
        
        private int optionField;
        
        private int activeField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        private bool visitField;
        
        private bool allergyField;
        
        private bool medicationField;
        
        private bool socialHistField;
        
        private bool familyHistField;
        
        private bool medicalHistField;
        
        private bool problemField;
        
        private bool procedureField;
        
        private bool vitalSignField;
        
        private bool immunizationField;
        
        private bool planOfCareField;
        
        private bool labField;
        
        private bool insuranceField;
        
        private bool clinicalDocsField;
        
        private bool providerField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
            }
        }
        
        /// <remarks/>
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
            }
        }
        
        /// <remarks/>
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
            }
        }
        
        /// <remarks/>
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public bool SocialHist {
            get {
                return this.socialHistField;
            }
            set {
                this.socialHistField = value;
            }
        }
        
        /// <remarks/>
        public bool FamilyHist {
            get {
                return this.familyHistField;
            }
            set {
                this.familyHistField = value;
            }
        }
        
        /// <remarks/>
        public bool MedicalHist {
            get {
                return this.medicalHistField;
            }
            set {
                this.medicalHistField = value;
            }
        }
        
        /// <remarks/>
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
            }
        }
        
        /// <remarks/>
        public bool Procedure {
            get {
                return this.procedureField;
            }
            set {
                this.procedureField = value;
            }
        }
        
        /// <remarks/>
        public bool VitalSign {
            get {
                return this.vitalSignField;
            }
            set {
                this.vitalSignField = value;
            }
        }
        
        /// <remarks/>
        public bool Immunization {
            get {
                return this.immunizationField;
            }
            set {
                this.immunizationField = value;
            }
        }
        
        /// <remarks/>
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
            }
        }
        
        /// <remarks/>
        public bool Lab {
            get {
                return this.labField;
            }
            set {
                this.labField = value;
            }
        }
        
        /// <remarks/>
        public bool Insurance {
            get {
                return this.insuranceField;
            }
            set {
                this.insuranceField = value;
            }
        }
        
        /// <remarks/>
        public bool ClinicalDocs {
            get {
                return this.clinicalDocsField;
            }
            set {
                this.clinicalDocsField = value;
            }
        }
        
        /// <remarks/>
        public bool Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAdvisorData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientAdvisorIdField;
        
        private int advisorIdField;
        
        private string advisorDescField;
        
        private string nameField;
        
        private string contactAgentField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string workPhoneField;
        
        private string mobilePhoneField;
        
        private string faxField;
        
        private string eMailField;
        
        private string notesField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientAdvisorId {
            get {
                return this.patientAdvisorIdField;
            }
            set {
                this.patientAdvisorIdField = value;
            }
        }
        
        /// <remarks/>
        public int AdvisorId {
            get {
                return this.advisorIdField;
            }
            set {
                this.advisorIdField = value;
            }
        }
        
        /// <remarks/>
        public string AdvisorDesc {
            get {
                return this.advisorDescField;
            }
            set {
                this.advisorDescField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ContactAgent {
            get {
                return this.contactAgentField;
            }
            set {
                this.contactAgentField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDoctorData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientDoctorIdField;
        
        private int doctorTypeIdField;
        
        private string doctorTypeDescField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string workPhoneField;
        
        private string mobilePhoneField;
        
        private string faxField;
        
        private string emailField;
        
        private bool isPrimaryField;
        
        private bool onCardField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long PatientDoctorId {
            get {
                return this.patientDoctorIdField;
            }
            set {
                this.patientDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public int DoctorTypeId {
            get {
                return this.doctorTypeIdField;
            }
            set {
                this.doctorTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorTypeDesc {
            get {
                return this.doctorTypeDescField;
            }
            set {
                this.doctorTypeDescField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocParms {
        
        private int optionField;
        
        private int activeField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientPlanOfCareDataCompletedEventHandler(object sender, SavePatientPlanOfCareDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientPlanOfCareDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientPlanOfCareDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPlanOfCareData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPlanOfCareData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientPlanOfCareDataCompletedEventHandler(object sender, DeletePatientPlanOfCareDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientPlanOfCareDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientPlanOfCareDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPlanOfCareData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPlanOfCareData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientClinicalInstructionsDataCompletedEventHandler(object sender, GetPatientClinicalInstructionsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientClinicalInstructionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientClinicalInstructionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientDoctorDataCompletedEventHandler(object sender, GetPatientDoctorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDoctorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDoctorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientDoctorDataCompletedEventHandler(object sender, SavePatientDoctorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientDoctorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientDoctorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDoctorData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDoctorData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientDoctorDataCompletedEventHandler(object sender, DeletePatientDoctorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientDoctorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientDoctorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDoctorData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDoctorData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientAdvisorDataCompletedEventHandler(object sender, GetPatientAdvisorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAdvisorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAdvisorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientAdvisorDataCompletedEventHandler(object sender, SavePatientAdvisorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientAdvisorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientAdvisorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAdvisorData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAdvisorData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientAdvisorDataCompletedEventHandler(object sender, DeletePatientAdvisorDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientAdvisorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientAdvisorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAdvisorData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAdvisorData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLabResultTestDataCompletedEventHandler(object sender, GetLabResultTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabResultTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabResultTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSummaryTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSummaryTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSummaryDataCompletedEventHandler(object sender, GetPatientSummaryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSummaryTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSummaryTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientCCDCompletedEventHandler(object sender, GetPatientCCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientCCDResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientCCDResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientCCDCompletedEventHandler(object sender, SavePatientCCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientCCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientCCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CCDPostResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CCDPostResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCCDAuditLogCompletedEventHandler(object sender, GetCCDAuditLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCDAuditLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCDAuditLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMedicalPortfolioCompletedEventHandler(object sender, GetMedicalPortfolioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalPortfolioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalPortfolioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MedicalPortfolioData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MedicalPortfolioData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientPolicyDataCompletedEventHandler(object sender, GetPatientPolicyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientPolicyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientPolicyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientPolicyDataCompletedEventHandler(object sender, SavePatientPolicyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientPolicyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientPolicyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPolicyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPolicyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientPolicyDataCompletedEventHandler(object sender, DeletePatientPolicyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientPolicyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientPolicyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPolicyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPolicyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMedicalSummaryDataCompletedEventHandler(object sender, GetMedicalSummaryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientVisitCCDDataCompletedEventHandler(object sender, GetPatientVisitCCDDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientVisitCCDDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientVisitCCDDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVisitCCD Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVisitCCD)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientCCDCustomizeDataCompletedEventHandler(object sender, GetPatientCCDCustomizeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCCDCustomizeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCCDCustomizeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientCCDTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientCCDTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientNoteDataCompletedEventHandler(object sender, GetPatientNoteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientNoteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientNoteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientNoteDataCompletedEventHandler(object sender, SavePatientNoteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientNoteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientNoteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientNoteData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientNoteData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSocialSelfDataCompletedEventHandler(object sender, GetPatientSocialSelfDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSocialSelfDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSocialSelfDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSocialSelfData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSocialSelfData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientSocialSelfDataCompletedEventHandler(object sender, SavePatientSocialSelfDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientSocialSelfDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientSocialSelfDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSocialSelfData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSocialSelfData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCombinedPatientDocumentDataCompletedEventHandler(object sender, GetCombinedPatientDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCombinedPatientDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCombinedPatientDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientAllergyDataCompletedEventHandler(object sender, GetPatientAllergyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientAllergyDataCompletedEventHandler(object sender, SavePatientAllergyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientAllergyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientAllergyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientAllergyDataCompletedEventHandler(object sender, DeletePatientAllergyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientAllergyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientAllergyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientFamilyHistDataCompletedEventHandler(object sender, GetPatientFamilyHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFamilyHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFamilyHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientFamilyHistDataCompletedEventHandler(object sender, SavePatientFamilyHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientFamilyHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientFamilyHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFamilyHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFamilyHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientFamilyHistDataCompletedEventHandler(object sender, DeletePatientFamilyHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientFamilyHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientFamilyHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFamilyHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFamilyHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientMedicalHistDataCompletedEventHandler(object sender, GetPatientMedicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMedicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMedicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientMedicalHistDataCompletedEventHandler(object sender, SavePatientMedicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientMedicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientMedicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientMedicalHistDataCompletedEventHandler(object sender, DeletePatientMedicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientMedicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientMedicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientMedicationDataCompletedEventHandler(object sender, GetPatientMedicationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMedicationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMedicationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientMedicationDataCompletedEventHandler(object sender, SavePatientMedicationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientMedicationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientMedicationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientMedicationDataCompletedEventHandler(object sender, DeletePatientMedicationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientMedicationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientMedicationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientProblemDataCompletedEventHandler(object sender, GetPatientProblemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientProblemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientProblemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientProblemDataCompletedEventHandler(object sender, SavePatientProblemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientProblemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientProblemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientProblemData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientProblemData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientProblemDataCompletedEventHandler(object sender, DeletePatientProblemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientProblemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientProblemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientProblemData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientProblemData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientProcedureDataCompletedEventHandler(object sender, GetPatientProcedureDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientProcedureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientProcedureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientProcedureDataCompletedEventHandler(object sender, SavePatientProcedureDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientProcedureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientProcedureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientProcedureData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientProcedureData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientProcedureDataCompletedEventHandler(object sender, DeletePatientProcedureDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientProcedureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientProcedureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientProcedureData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientProcedureData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSocialHistDataCompletedEventHandler(object sender, GetPatientSocialHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSocialHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSocialHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientSocialHistDataCompletedEventHandler(object sender, SavePatientSocialHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientSocialHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientSocialHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSocialHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSocialHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientSocialHistDataCompletedEventHandler(object sender, DeletePatientSocialHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientSocialHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientSocialHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSocialHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSocialHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientSurgicalHistDataCompletedEventHandler(object sender, GetPatientSurgicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientSurgicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientSurgicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientSurgicalHistDataCompletedEventHandler(object sender, SavePatientSurgicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientSurgicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientSurgicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSurgicalHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSurgicalHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientSurgicalHistDataCompletedEventHandler(object sender, DeletePatientSurgicalHistDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientSurgicalHistDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientSurgicalHistDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientSurgicalHistData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientSurgicalHistData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientVitalSignDataCompletedEventHandler(object sender, GetPatientVitalSignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientVitalSignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientVitalSignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientVitalSignDataCompletedEventHandler(object sender, SavePatientVitalSignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientVitalSignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientVitalSignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVitalSignData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVitalSignData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientVitalSignDataCompletedEventHandler(object sender, DeletePatientVitalSignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientVitalSignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientVitalSignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientVitalSignData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientVitalSignData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientImmunizationDataCompletedEventHandler(object sender, GetPatientImmunizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientImmunizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientImmunizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientImmunizationDataCompletedEventHandler(object sender, SavePatientImmunizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientImmunizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientImmunizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientImmunizationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientImmunizationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientImmunizationDataCompletedEventHandler(object sender, DeletePatientImmunizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientImmunizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientImmunizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientImmunizationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientImmunizationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientLabResultDataCompletedEventHandler(object sender, GetPatientLabResultDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientLabResultDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientLabResultDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientLabResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientLabResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientLabResultDataCompletedEventHandler(object sender, SavePatientLabResultDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientLabResultDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientLabResultDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientLabResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientLabResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientLabResultListCompletedEventHandler(object sender, GetPatientLabResultListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientLabResultListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientLabResultListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientEmergencyDataCompletedEventHandler(object sender, GetPatientEmergencyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientEmergencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientEmergencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientEmergencyDataCompletedEventHandler(object sender, SavePatientEmergencyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientEmergencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientEmergencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientEmergencyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientEmergencyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientEmergencyDataCompletedEventHandler(object sender, DeletePatientEmergencyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientEmergencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientEmergencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientEmergencyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientEmergencyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientInsuranceDataCompletedEventHandler(object sender, GetPatientInsuranceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInsuranceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInsuranceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientInsuranceDataCompletedEventHandler(object sender, SavePatientInsuranceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientInsuranceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientInsuranceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientInsuranceData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientInsuranceData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientInsuranceDataCompletedEventHandler(object sender, DeletePatientInsuranceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientInsuranceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientInsuranceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientInsuranceData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientInsuranceData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientPharmacyDataCompletedEventHandler(object sender, GetPatientPharmacyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientPharmacyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientPharmacyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientPharmacyDataCompletedEventHandler(object sender, SavePatientPharmacyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientPharmacyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientPharmacyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPharmacyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPharmacyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientPharmacyDataCompletedEventHandler(object sender, DeletePatientPharmacyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientPharmacyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientPharmacyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientPharmacyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientPharmacyData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientClinicalDocumentDataCompletedEventHandler(object sender, GetPatientClinicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientClinicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientClinicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientClinicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientClinicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientClinicalDocumentDataCompletedEventHandler(object sender, SavePatientClinicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientClinicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientClinicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientClinicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientClinicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientClinicalDocumentDataCompletedEventHandler(object sender, DeletePatientClinicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientClinicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientClinicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientClinicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientClinicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientClinicalDocumentListCompletedEventHandler(object sender, GetPatientClinicalDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientClinicalDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientClinicalDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientClinicalDocumentShareCompletedEventHandler(object sender, PatientClinicalDocumentShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientClinicalDocumentShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientClinicalDocumentShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientDocumentDataCompletedEventHandler(object sender, GetPatientDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientDocumentDataCompletedEventHandler(object sender, SavePatientDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientDocumentDataCompletedEventHandler(object sender, DeletePatientDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientDocumentListCompletedEventHandler(object sender, GetPatientDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientDocumentShareCompletedEventHandler(object sender, PatientDocumentShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientDocumentShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientDocumentShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientMedicalDocumentDataCompletedEventHandler(object sender, GetPatientMedicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMedicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMedicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientMedicalDocumentDataCompletedEventHandler(object sender, SavePatientMedicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientMedicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientMedicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientMedicalDocumentDataCompletedEventHandler(object sender, DeletePatientMedicalDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientMedicalDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientMedicalDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientMedicalDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientMedicalDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientMedicalDocumentListCompletedEventHandler(object sender, GetPatientMedicalDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMedicalDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMedicalDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientMedicalDocumentShareCompletedEventHandler(object sender, PatientMedicalDocumentShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientMedicalDocumentShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientMedicalDocumentShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientCareDocumentDataCompletedEventHandler(object sender, GetPatientCareDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCareDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCareDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientCareDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientCareDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePatientCareDocumentDataCompletedEventHandler(object sender, SavePatientCareDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientCareDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientCareDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientCareDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientCareDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePatientCareDocumentDataCompletedEventHandler(object sender, DeletePatientCareDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientCareDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientCareDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientCareDocumentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientCareDocumentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientCareDocumentListCompletedEventHandler(object sender, GetPatientCareDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCareDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCareDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PatientCareDocumentShareCompletedEventHandler(object sender, PatientCareDocumentShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientCareDocumentShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientCareDocumentShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocumentResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocumentResp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPatientPlanOfCareDataCompletedEventHandler(object sender, GetPatientPlanOfCareDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientPlanOfCareDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientPlanOfCareDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDocTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDocTableData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591