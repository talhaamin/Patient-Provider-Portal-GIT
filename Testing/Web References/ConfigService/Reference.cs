//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Testing.ConfigService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConfigWSSoap", Namespace="http://tempuri.org/")]
    public partial class ConfigWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPracticeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePracticeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPracticesForOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrganizationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrganizationSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilityDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFacilityDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilitiesForPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreferredLanguageCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenderCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRaceCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEthnicityCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaritalStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConditionStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReligionCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBloodTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmokingStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilityTypesCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRoleCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuditActionCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMRSystemCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationshipCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationshipSNOMEDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityQuestionCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstructionTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProblemCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVaccineCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicationsCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFrequencyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSocialCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRouteOfAdministrationCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocUploadTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPolicyTypeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvisorCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExerciseFrequencyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivityLevelCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlcoholFrequencyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEducationLevelCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThirdPartyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarriersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilitySetupDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ConfigWS() {
            this.Url = global::Testing.Properties.Settings.Default.Testing_ConfigService_ConfigWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPracticeDataCompletedEventHandler GetPracticeDataCompleted;
        
        /// <remarks/>
        public event SavePracticeDataCompletedEventHandler SavePracticeDataCompleted;
        
        /// <remarks/>
        public event GetPracticesForOrganizationCompletedEventHandler GetPracticesForOrganizationCompleted;
        
        /// <remarks/>
        public event GetOrganizationDataCompletedEventHandler GetOrganizationDataCompleted;
        
        /// <remarks/>
        public event SaveOrganizationDataCompletedEventHandler SaveOrganizationDataCompleted;
        
        /// <remarks/>
        public event OrganizationSearchCompletedEventHandler OrganizationSearchCompleted;
        
        /// <remarks/>
        public event GetFacilityDataCompletedEventHandler GetFacilityDataCompleted;
        
        /// <remarks/>
        public event SaveFacilityDataCompletedEventHandler SaveFacilityDataCompleted;
        
        /// <remarks/>
        public event GetFacilitiesForPracticeCompletedEventHandler GetFacilitiesForPracticeCompleted;
        
        /// <remarks/>
        public event GetPreferredLanguageCodesCompletedEventHandler GetPreferredLanguageCodesCompleted;
        
        /// <remarks/>
        public event GetGenderCodesCompletedEventHandler GetGenderCodesCompleted;
        
        /// <remarks/>
        public event GetRaceCodesCompletedEventHandler GetRaceCodesCompleted;
        
        /// <remarks/>
        public event GetEthnicityCodesCompletedEventHandler GetEthnicityCodesCompleted;
        
        /// <remarks/>
        public event GetMaritalStatusCodesCompletedEventHandler GetMaritalStatusCodesCompleted;
        
        /// <remarks/>
        public event GetConditionStatusCodesCompletedEventHandler GetConditionStatusCodesCompleted;
        
        /// <remarks/>
        public event GetReligionCodesCompletedEventHandler GetReligionCodesCompleted;
        
        /// <remarks/>
        public event GetBloodTypeCodesCompletedEventHandler GetBloodTypeCodesCompleted;
        
        /// <remarks/>
        public event GetSmokingStatusCodesCompletedEventHandler GetSmokingStatusCodesCompleted;
        
        /// <remarks/>
        public event GetFacilityTypesCodesCompletedEventHandler GetFacilityTypesCodesCompleted;
        
        /// <remarks/>
        public event GetUserRoleCodesCompletedEventHandler GetUserRoleCodesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeCodesCompletedEventHandler GetDocumentTypeCodesCompleted;
        
        /// <remarks/>
        public event GetAuditActionCodesCompletedEventHandler GetAuditActionCodesCompleted;
        
        /// <remarks/>
        public event GetEMRSystemCodesCompletedEventHandler GetEMRSystemCodesCompleted;
        
        /// <remarks/>
        public event GetRelationshipCodesCompletedEventHandler GetRelationshipCodesCompleted;
        
        /// <remarks/>
        public event GetRelationshipSNOMEDCompletedEventHandler GetRelationshipSNOMEDCompleted;
        
        /// <remarks/>
        public event GetSecurityQuestionCodesCompletedEventHandler GetSecurityQuestionCodesCompleted;
        
        /// <remarks/>
        public event GetInstructionTypeCodesCompletedEventHandler GetInstructionTypeCodesCompleted;
        
        /// <remarks/>
        public event GetProblemCodesCompletedEventHandler GetProblemCodesCompleted;
        
        /// <remarks/>
        public event GetVaccineCodesCompletedEventHandler GetVaccineCodesCompleted;
        
        /// <remarks/>
        public event GetMedicationsCodesCompletedEventHandler GetMedicationsCodesCompleted;
        
        /// <remarks/>
        public event GetFrequencyCodesCompletedEventHandler GetFrequencyCodesCompleted;
        
        /// <remarks/>
        public event GetCountryCodesCompletedEventHandler GetCountryCodesCompleted;
        
        /// <remarks/>
        public event GetStateCodesCompletedEventHandler GetStateCodesCompleted;
        
        /// <remarks/>
        public event GetSocialCodesCompletedEventHandler GetSocialCodesCompleted;
        
        /// <remarks/>
        public event GetRouteOfAdministrationCodesCompletedEventHandler GetRouteOfAdministrationCodesCompleted;
        
        /// <remarks/>
        public event GetDocUploadTypeCodesCompletedEventHandler GetDocUploadTypeCodesCompleted;
        
        /// <remarks/>
        public event GetDoctorTypeCodesCompletedEventHandler GetDoctorTypeCodesCompleted;
        
        /// <remarks/>
        public event GetPolicyTypeCodesCompletedEventHandler GetPolicyTypeCodesCompleted;
        
        /// <remarks/>
        public event GetAdvisorCodesCompletedEventHandler GetAdvisorCodesCompleted;
        
        /// <remarks/>
        public event GetExerciseFrequencyCodesCompletedEventHandler GetExerciseFrequencyCodesCompleted;
        
        /// <remarks/>
        public event GetActivityLevelCodesCompletedEventHandler GetActivityLevelCodesCompleted;
        
        /// <remarks/>
        public event GetAlcoholFrequencyCodesCompletedEventHandler GetAlcoholFrequencyCodesCompleted;
        
        /// <remarks/>
        public event GetEducationLevelCodesCompletedEventHandler GetEducationLevelCodesCompleted;
        
        /// <remarks/>
        public event GetThirdPartyCodesCompletedEventHandler GetThirdPartyCodesCompleted;
        
        /// <remarks/>
        public event GetCarriersCompletedEventHandler GetCarriersCompleted;
        
        /// <remarks/>
        public event GetFacilitySetupDataCompletedEventHandler GetFacilitySetupDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPracticeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PracticeData GetPracticeData(PracticeParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPracticeData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((PracticeData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPracticeDataAsync(PracticeParms Parms, string Token, long UserId, long FacilityId) {
            this.GetPracticeDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPracticeDataAsync(PracticeParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPracticeDataOperationCompleted == null)) {
                this.GetPracticeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPracticeDataOperationCompleted);
            }
            this.InvokeAsync("GetPracticeData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetPracticeDataOperationCompleted, userState);
        }
        
        private void OnGetPracticeDataOperationCompleted(object arg) {
            if ((this.GetPracticeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPracticeDataCompleted(this, new GetPracticeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePracticeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PracticeData SavePracticeData(PracticeData PracticeData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SavePracticeData", new object[] {
                        PracticeData,
                        Token,
                        UserId,
                        FacilityId});
            return ((PracticeData)(results[0]));
        }
        
        /// <remarks/>
        public void SavePracticeDataAsync(PracticeData PracticeData, string Token, long UserId, long FacilityId) {
            this.SavePracticeDataAsync(PracticeData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SavePracticeDataAsync(PracticeData PracticeData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SavePracticeDataOperationCompleted == null)) {
                this.SavePracticeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePracticeDataOperationCompleted);
            }
            this.InvokeAsync("SavePracticeData", new object[] {
                        PracticeData,
                        Token,
                        UserId,
                        FacilityId}, this.SavePracticeDataOperationCompleted, userState);
        }
        
        private void OnSavePracticeDataOperationCompleted(object arg) {
            if ((this.SavePracticeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePracticeDataCompleted(this, new SavePracticeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPracticesForOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PracticeTableData GetPracticesForOrganization(long OrganizationId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPracticesForOrganization", new object[] {
                        OrganizationId,
                        Token,
                        UserId,
                        FacilityId});
            return ((PracticeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPracticesForOrganizationAsync(long OrganizationId, string Token, long UserId, long FacilityId) {
            this.GetPracticesForOrganizationAsync(OrganizationId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPracticesForOrganizationAsync(long OrganizationId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPracticesForOrganizationOperationCompleted == null)) {
                this.GetPracticesForOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPracticesForOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetPracticesForOrganization", new object[] {
                        OrganizationId,
                        Token,
                        UserId,
                        FacilityId}, this.GetPracticesForOrganizationOperationCompleted, userState);
        }
        
        private void OnGetPracticesForOrganizationOperationCompleted(object arg) {
            if ((this.GetPracticesForOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPracticesForOrganizationCompleted(this, new GetPracticesForOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationData GetOrganizationData(OrganizationParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetOrganizationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((OrganizationData)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationDataAsync(OrganizationParms Parms, string Token, long UserId, long FacilityId) {
            this.GetOrganizationDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationDataAsync(OrganizationParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetOrganizationDataOperationCompleted == null)) {
                this.GetOrganizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationDataOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetOrganizationDataOperationCompleted, userState);
        }
        
        private void OnGetOrganizationDataOperationCompleted(object arg) {
            if ((this.GetOrganizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationDataCompleted(this, new GetOrganizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrganizationData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationData SaveOrganizationData(OrganizationData OrganizationData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SaveOrganizationData", new object[] {
                        OrganizationData,
                        Token,
                        UserId,
                        FacilityId});
            return ((OrganizationData)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrganizationDataAsync(OrganizationData OrganizationData, string Token, long UserId, long FacilityId) {
            this.SaveOrganizationDataAsync(OrganizationData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SaveOrganizationDataAsync(OrganizationData OrganizationData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SaveOrganizationDataOperationCompleted == null)) {
                this.SaveOrganizationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrganizationDataOperationCompleted);
            }
            this.InvokeAsync("SaveOrganizationData", new object[] {
                        OrganizationData,
                        Token,
                        UserId,
                        FacilityId}, this.SaveOrganizationDataOperationCompleted, userState);
        }
        
        private void OnSaveOrganizationDataOperationCompleted(object arg) {
            if ((this.SaveOrganizationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrganizationDataCompleted(this, new SaveOrganizationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrganizationSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationTableData OrganizationSearch(OrganizationSearchParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("OrganizationSearch", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((OrganizationTableData)(results[0]));
        }
        
        /// <remarks/>
        public void OrganizationSearchAsync(OrganizationSearchParms Parms, string Token, long UserId, long FacilityId) {
            this.OrganizationSearchAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void OrganizationSearchAsync(OrganizationSearchParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.OrganizationSearchOperationCompleted == null)) {
                this.OrganizationSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrganizationSearchOperationCompleted);
            }
            this.InvokeAsync("OrganizationSearch", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.OrganizationSearchOperationCompleted, userState);
        }
        
        private void OnOrganizationSearchOperationCompleted(object arg) {
            if ((this.OrganizationSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrganizationSearchCompleted(this, new OrganizationSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacilityData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilityData GetFacilityData(FacilityParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetFacilityData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((FacilityData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilityDataAsync(FacilityParms Parms, string Token, long UserId, long FacilityId) {
            this.GetFacilityDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetFacilityDataAsync(FacilityParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetFacilityDataOperationCompleted == null)) {
                this.GetFacilityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilityDataOperationCompleted);
            }
            this.InvokeAsync("GetFacilityData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetFacilityDataOperationCompleted, userState);
        }
        
        private void OnGetFacilityDataOperationCompleted(object arg) {
            if ((this.GetFacilityDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilityDataCompleted(this, new GetFacilityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFacilityData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilityData SaveFacilityData(FacilityData FacilityData, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("SaveFacilityData", new object[] {
                        FacilityData,
                        Token,
                        UserId,
                        FacilityId});
            return ((FacilityData)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFacilityDataAsync(FacilityData FacilityData, string Token, long UserId, long FacilityId) {
            this.SaveFacilityDataAsync(FacilityData, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void SaveFacilityDataAsync(FacilityData FacilityData, string Token, long UserId, long FacilityId, object userState) {
            if ((this.SaveFacilityDataOperationCompleted == null)) {
                this.SaveFacilityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFacilityDataOperationCompleted);
            }
            this.InvokeAsync("SaveFacilityData", new object[] {
                        FacilityData,
                        Token,
                        UserId,
                        FacilityId}, this.SaveFacilityDataOperationCompleted, userState);
        }
        
        private void OnSaveFacilityDataOperationCompleted(object arg) {
            if ((this.SaveFacilityDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFacilityDataCompleted(this, new SaveFacilityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacilitiesForPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilityTableData GetFacilitiesForPractice(long PracticeId, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetFacilitiesForPractice", new object[] {
                        PracticeId,
                        Token,
                        UserId,
                        FacilityId});
            return ((FacilityTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilitiesForPracticeAsync(long PracticeId, string Token, long UserId, long FacilityId) {
            this.GetFacilitiesForPracticeAsync(PracticeId, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetFacilitiesForPracticeAsync(long PracticeId, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetFacilitiesForPracticeOperationCompleted == null)) {
                this.GetFacilitiesForPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilitiesForPracticeOperationCompleted);
            }
            this.InvokeAsync("GetFacilitiesForPractice", new object[] {
                        PracticeId,
                        Token,
                        UserId,
                        FacilityId}, this.GetFacilitiesForPracticeOperationCompleted, userState);
        }
        
        private void OnGetFacilitiesForPracticeOperationCompleted(object arg) {
            if ((this.GetFacilitiesForPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilitiesForPracticeCompleted(this, new GetFacilitiesForPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPreferredLanguageCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetPreferredLanguageCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPreferredLanguageCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreferredLanguageCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetPreferredLanguageCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPreferredLanguageCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPreferredLanguageCodesOperationCompleted == null)) {
                this.GetPreferredLanguageCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreferredLanguageCodesOperationCompleted);
            }
            this.InvokeAsync("GetPreferredLanguageCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetPreferredLanguageCodesOperationCompleted, userState);
        }
        
        private void OnGetPreferredLanguageCodesOperationCompleted(object arg) {
            if ((this.GetPreferredLanguageCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreferredLanguageCodesCompleted(this, new GetPreferredLanguageCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGenderCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetGenderCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetGenderCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenderCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetGenderCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetGenderCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetGenderCodesOperationCompleted == null)) {
                this.GetGenderCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenderCodesOperationCompleted);
            }
            this.InvokeAsync("GetGenderCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetGenderCodesOperationCompleted, userState);
        }
        
        private void OnGetGenderCodesOperationCompleted(object arg) {
            if ((this.GetGenderCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenderCodesCompleted(this, new GetGenderCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRaceCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetRaceCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetRaceCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetRaceCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetRaceCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetRaceCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetRaceCodesOperationCompleted == null)) {
                this.GetRaceCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRaceCodesOperationCompleted);
            }
            this.InvokeAsync("GetRaceCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetRaceCodesOperationCompleted, userState);
        }
        
        private void OnGetRaceCodesOperationCompleted(object arg) {
            if ((this.GetRaceCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRaceCodesCompleted(this, new GetRaceCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEthnicityCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetEthnicityCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetEthnicityCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetEthnicityCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetEthnicityCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetEthnicityCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetEthnicityCodesOperationCompleted == null)) {
                this.GetEthnicityCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEthnicityCodesOperationCompleted);
            }
            this.InvokeAsync("GetEthnicityCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetEthnicityCodesOperationCompleted, userState);
        }
        
        private void OnGetEthnicityCodesOperationCompleted(object arg) {
            if ((this.GetEthnicityCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEthnicityCodesCompleted(this, new GetEthnicityCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaritalStatusCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetMaritalStatusCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetMaritalStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaritalStatusCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetMaritalStatusCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetMaritalStatusCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetMaritalStatusCodesOperationCompleted == null)) {
                this.GetMaritalStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaritalStatusCodesOperationCompleted);
            }
            this.InvokeAsync("GetMaritalStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetMaritalStatusCodesOperationCompleted, userState);
        }
        
        private void OnGetMaritalStatusCodesOperationCompleted(object arg) {
            if ((this.GetMaritalStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaritalStatusCodesCompleted(this, new GetMaritalStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConditionStatusCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetConditionStatusCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetConditionStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetConditionStatusCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetConditionStatusCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetConditionStatusCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetConditionStatusCodesOperationCompleted == null)) {
                this.GetConditionStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConditionStatusCodesOperationCompleted);
            }
            this.InvokeAsync("GetConditionStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetConditionStatusCodesOperationCompleted, userState);
        }
        
        private void OnGetConditionStatusCodesOperationCompleted(object arg) {
            if ((this.GetConditionStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConditionStatusCodesCompleted(this, new GetConditionStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReligionCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetReligionCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetReligionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetReligionCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetReligionCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetReligionCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetReligionCodesOperationCompleted == null)) {
                this.GetReligionCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReligionCodesOperationCompleted);
            }
            this.InvokeAsync("GetReligionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetReligionCodesOperationCompleted, userState);
        }
        
        private void OnGetReligionCodesOperationCompleted(object arg) {
            if ((this.GetReligionCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReligionCodesCompleted(this, new GetReligionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBloodTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetBloodTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetBloodTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBloodTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetBloodTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetBloodTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetBloodTypeCodesOperationCompleted == null)) {
                this.GetBloodTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBloodTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetBloodTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetBloodTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetBloodTypeCodesOperationCompleted(object arg) {
            if ((this.GetBloodTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBloodTypeCodesCompleted(this, new GetBloodTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmokingStatusCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetSmokingStatusCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetSmokingStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmokingStatusCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetSmokingStatusCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetSmokingStatusCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetSmokingStatusCodesOperationCompleted == null)) {
                this.GetSmokingStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmokingStatusCodesOperationCompleted);
            }
            this.InvokeAsync("GetSmokingStatusCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetSmokingStatusCodesOperationCompleted, userState);
        }
        
        private void OnGetSmokingStatusCodesOperationCompleted(object arg) {
            if ((this.GetSmokingStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmokingStatusCodesCompleted(this, new GetSmokingStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacilityTypesCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetFacilityTypesCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetFacilityTypesCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilityTypesCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetFacilityTypesCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetFacilityTypesCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetFacilityTypesCodesOperationCompleted == null)) {
                this.GetFacilityTypesCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilityTypesCodesOperationCompleted);
            }
            this.InvokeAsync("GetFacilityTypesCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetFacilityTypesCodesOperationCompleted, userState);
        }
        
        private void OnGetFacilityTypesCodesOperationCompleted(object arg) {
            if ((this.GetFacilityTypesCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilityTypesCodesCompleted(this, new GetFacilityTypesCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetUserRoleCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetUserRoleCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRoleCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetUserRoleCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetUserRoleCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetUserRoleCodesOperationCompleted == null)) {
                this.GetUserRoleCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRoleCodesOperationCompleted);
            }
            this.InvokeAsync("GetUserRoleCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetUserRoleCodesOperationCompleted, userState);
        }
        
        private void OnGetUserRoleCodesOperationCompleted(object arg) {
            if ((this.GetUserRoleCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRoleCodesCompleted(this, new GetUserRoleCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetDocumentTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetDocumentTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetDocumentTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetDocumentTypeCodesOperationCompleted == null)) {
                this.GetDocumentTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetDocumentTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeCodesOperationCompleted(object arg) {
            if ((this.GetDocumentTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeCodesCompleted(this, new GetDocumentTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditActionCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetAuditActionCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetAuditActionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuditActionCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetAuditActionCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetAuditActionCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetAuditActionCodesOperationCompleted == null)) {
                this.GetAuditActionCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuditActionCodesOperationCompleted);
            }
            this.InvokeAsync("GetAuditActionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetAuditActionCodesOperationCompleted, userState);
        }
        
        private void OnGetAuditActionCodesOperationCompleted(object arg) {
            if ((this.GetAuditActionCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuditActionCodesCompleted(this, new GetAuditActionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMRSystemCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetEMRSystemCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetEMRSystemCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMRSystemCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetEMRSystemCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetEMRSystemCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetEMRSystemCodesOperationCompleted == null)) {
                this.GetEMRSystemCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMRSystemCodesOperationCompleted);
            }
            this.InvokeAsync("GetEMRSystemCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetEMRSystemCodesOperationCompleted, userState);
        }
        
        private void OnGetEMRSystemCodesOperationCompleted(object arg) {
            if ((this.GetEMRSystemCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMRSystemCodesCompleted(this, new GetEMRSystemCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelationshipCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetRelationshipCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetRelationshipCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationshipCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetRelationshipCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetRelationshipCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetRelationshipCodesOperationCompleted == null)) {
                this.GetRelationshipCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationshipCodesOperationCompleted);
            }
            this.InvokeAsync("GetRelationshipCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetRelationshipCodesOperationCompleted, userState);
        }
        
        private void OnGetRelationshipCodesOperationCompleted(object arg) {
            if ((this.GetRelationshipCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationshipCodesCompleted(this, new GetRelationshipCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelationshipSNOMED", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableValue GetRelationshipSNOMED(string Token, long UserId, long FacilityId, string SNOMED) {
            object[] results = this.Invoke("GetRelationshipSNOMED", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SNOMED});
            return ((CodeTableValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationshipSNOMEDAsync(string Token, long UserId, long FacilityId, string SNOMED) {
            this.GetRelationshipSNOMEDAsync(Token, UserId, FacilityId, SNOMED, null);
        }
        
        /// <remarks/>
        public void GetRelationshipSNOMEDAsync(string Token, long UserId, long FacilityId, string SNOMED, object userState) {
            if ((this.GetRelationshipSNOMEDOperationCompleted == null)) {
                this.GetRelationshipSNOMEDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationshipSNOMEDOperationCompleted);
            }
            this.InvokeAsync("GetRelationshipSNOMED", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SNOMED}, this.GetRelationshipSNOMEDOperationCompleted, userState);
        }
        
        private void OnGetRelationshipSNOMEDOperationCompleted(object arg) {
            if ((this.GetRelationshipSNOMEDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationshipSNOMEDCompleted(this, new GetRelationshipSNOMEDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityQuestionCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetSecurityQuestionCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetSecurityQuestionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityQuestionCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetSecurityQuestionCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetSecurityQuestionCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetSecurityQuestionCodesOperationCompleted == null)) {
                this.GetSecurityQuestionCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityQuestionCodesOperationCompleted);
            }
            this.InvokeAsync("GetSecurityQuestionCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetSecurityQuestionCodesOperationCompleted, userState);
        }
        
        private void OnGetSecurityQuestionCodesOperationCompleted(object arg) {
            if ((this.GetSecurityQuestionCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityQuestionCodesCompleted(this, new GetSecurityQuestionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstructionTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetInstructionTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetInstructionTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstructionTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetInstructionTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetInstructionTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetInstructionTypeCodesOperationCompleted == null)) {
                this.GetInstructionTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstructionTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetInstructionTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetInstructionTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetInstructionTypeCodesOperationCompleted(object arg) {
            if ((this.GetInstructionTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstructionTypeCodesCompleted(this, new GetInstructionTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProblemCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetProblemCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            object[] results = this.Invoke("GetProblemCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetProblemCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            this.GetProblemCodesAsync(Token, UserId, FacilityId, SearchValue, null);
        }
        
        /// <remarks/>
        public void GetProblemCodesAsync(string Token, long UserId, long FacilityId, string SearchValue, object userState) {
            if ((this.GetProblemCodesOperationCompleted == null)) {
                this.GetProblemCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProblemCodesOperationCompleted);
            }
            this.InvokeAsync("GetProblemCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue}, this.GetProblemCodesOperationCompleted, userState);
        }
        
        private void OnGetProblemCodesOperationCompleted(object arg) {
            if ((this.GetProblemCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProblemCodesCompleted(this, new GetProblemCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVaccineCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetVaccineCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            object[] results = this.Invoke("GetVaccineCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetVaccineCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            this.GetVaccineCodesAsync(Token, UserId, FacilityId, SearchValue, null);
        }
        
        /// <remarks/>
        public void GetVaccineCodesAsync(string Token, long UserId, long FacilityId, string SearchValue, object userState) {
            if ((this.GetVaccineCodesOperationCompleted == null)) {
                this.GetVaccineCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVaccineCodesOperationCompleted);
            }
            this.InvokeAsync("GetVaccineCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue}, this.GetVaccineCodesOperationCompleted, userState);
        }
        
        private void OnGetVaccineCodesOperationCompleted(object arg) {
            if ((this.GetVaccineCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVaccineCodesCompleted(this, new GetVaccineCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedicationsCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetMedicationsCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            object[] results = this.Invoke("GetMedicationsCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicationsCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            this.GetMedicationsCodesAsync(Token, UserId, FacilityId, SearchValue, null);
        }
        
        /// <remarks/>
        public void GetMedicationsCodesAsync(string Token, long UserId, long FacilityId, string SearchValue, object userState) {
            if ((this.GetMedicationsCodesOperationCompleted == null)) {
                this.GetMedicationsCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicationsCodesOperationCompleted);
            }
            this.InvokeAsync("GetMedicationsCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId,
                        SearchValue}, this.GetMedicationsCodesOperationCompleted, userState);
        }
        
        private void OnGetMedicationsCodesOperationCompleted(object arg) {
            if ((this.GetMedicationsCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicationsCodesCompleted(this, new GetMedicationsCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFrequencyCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetFrequencyCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetFrequencyCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetFrequencyCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetFrequencyCodesOperationCompleted == null)) {
                this.GetFrequencyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFrequencyCodesOperationCompleted);
            }
            this.InvokeAsync("GetFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetFrequencyCodesOperationCompleted, userState);
        }
        
        private void OnGetFrequencyCodesOperationCompleted(object arg) {
            if ((this.GetFrequencyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFrequencyCodesCompleted(this, new GetFrequencyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetCountryCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetCountryCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetCountryCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetCountryCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetCountryCodesOperationCompleted == null)) {
                this.GetCountryCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryCodesOperationCompleted);
            }
            this.InvokeAsync("GetCountryCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetCountryCodesOperationCompleted, userState);
        }
        
        private void OnGetCountryCodesOperationCompleted(object arg) {
            if ((this.GetCountryCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryCodesCompleted(this, new GetCountryCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStateCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetStateCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetStateCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetStateCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetStateCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetStateCodesOperationCompleted == null)) {
                this.GetStateCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateCodesOperationCompleted);
            }
            this.InvokeAsync("GetStateCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetStateCodesOperationCompleted, userState);
        }
        
        private void OnGetStateCodesOperationCompleted(object arg) {
            if ((this.GetStateCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateCodesCompleted(this, new GetStateCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSocialCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetSocialCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetSocialCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetSocialCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetSocialCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetSocialCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetSocialCodesOperationCompleted == null)) {
                this.GetSocialCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSocialCodesOperationCompleted);
            }
            this.InvokeAsync("GetSocialCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetSocialCodesOperationCompleted, userState);
        }
        
        private void OnGetSocialCodesOperationCompleted(object arg) {
            if ((this.GetSocialCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSocialCodesCompleted(this, new GetSocialCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRouteOfAdministrationCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetRouteOfAdministrationCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetRouteOfAdministrationCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetRouteOfAdministrationCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetRouteOfAdministrationCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetRouteOfAdministrationCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetRouteOfAdministrationCodesOperationCompleted == null)) {
                this.GetRouteOfAdministrationCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRouteOfAdministrationCodesOperationCompleted);
            }
            this.InvokeAsync("GetRouteOfAdministrationCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetRouteOfAdministrationCodesOperationCompleted, userState);
        }
        
        private void OnGetRouteOfAdministrationCodesOperationCompleted(object arg) {
            if ((this.GetRouteOfAdministrationCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRouteOfAdministrationCodesCompleted(this, new GetRouteOfAdministrationCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocUploadTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetDocUploadTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetDocUploadTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocUploadTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetDocUploadTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetDocUploadTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetDocUploadTypeCodesOperationCompleted == null)) {
                this.GetDocUploadTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocUploadTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetDocUploadTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetDocUploadTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetDocUploadTypeCodesOperationCompleted(object arg) {
            if ((this.GetDocUploadTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocUploadTypeCodesCompleted(this, new GetDocUploadTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoctorTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetDoctorTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetDoctorTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetDoctorTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetDoctorTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetDoctorTypeCodesOperationCompleted == null)) {
                this.GetDoctorTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetDoctorTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetDoctorTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetDoctorTypeCodesOperationCompleted(object arg) {
            if ((this.GetDoctorTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorTypeCodesCompleted(this, new GetDoctorTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyTypeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetPolicyTypeCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetPolicyTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPolicyTypeCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetPolicyTypeCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetPolicyTypeCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetPolicyTypeCodesOperationCompleted == null)) {
                this.GetPolicyTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPolicyTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetPolicyTypeCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetPolicyTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetPolicyTypeCodesOperationCompleted(object arg) {
            if ((this.GetPolicyTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPolicyTypeCodesCompleted(this, new GetPolicyTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdvisorCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetAdvisorCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetAdvisorCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvisorCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetAdvisorCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetAdvisorCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetAdvisorCodesOperationCompleted == null)) {
                this.GetAdvisorCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvisorCodesOperationCompleted);
            }
            this.InvokeAsync("GetAdvisorCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetAdvisorCodesOperationCompleted, userState);
        }
        
        private void OnGetAdvisorCodesOperationCompleted(object arg) {
            if ((this.GetAdvisorCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvisorCodesCompleted(this, new GetAdvisorCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExerciseFrequencyCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetExerciseFrequencyCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetExerciseFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetExerciseFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetExerciseFrequencyCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetExerciseFrequencyCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetExerciseFrequencyCodesOperationCompleted == null)) {
                this.GetExerciseFrequencyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExerciseFrequencyCodesOperationCompleted);
            }
            this.InvokeAsync("GetExerciseFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetExerciseFrequencyCodesOperationCompleted, userState);
        }
        
        private void OnGetExerciseFrequencyCodesOperationCompleted(object arg) {
            if ((this.GetExerciseFrequencyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExerciseFrequencyCodesCompleted(this, new GetExerciseFrequencyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivityLevelCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetActivityLevelCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetActivityLevelCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivityLevelCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetActivityLevelCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetActivityLevelCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetActivityLevelCodesOperationCompleted == null)) {
                this.GetActivityLevelCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivityLevelCodesOperationCompleted);
            }
            this.InvokeAsync("GetActivityLevelCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetActivityLevelCodesOperationCompleted, userState);
        }
        
        private void OnGetActivityLevelCodesOperationCompleted(object arg) {
            if ((this.GetActivityLevelCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivityLevelCodesCompleted(this, new GetActivityLevelCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlcoholFrequencyCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetAlcoholFrequencyCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetAlcoholFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlcoholFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetAlcoholFrequencyCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetAlcoholFrequencyCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetAlcoholFrequencyCodesOperationCompleted == null)) {
                this.GetAlcoholFrequencyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlcoholFrequencyCodesOperationCompleted);
            }
            this.InvokeAsync("GetAlcoholFrequencyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetAlcoholFrequencyCodesOperationCompleted, userState);
        }
        
        private void OnGetAlcoholFrequencyCodesOperationCompleted(object arg) {
            if ((this.GetAlcoholFrequencyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlcoholFrequencyCodesCompleted(this, new GetAlcoholFrequencyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEducationLevelCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetEducationLevelCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetEducationLevelCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetEducationLevelCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetEducationLevelCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetEducationLevelCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetEducationLevelCodesOperationCompleted == null)) {
                this.GetEducationLevelCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEducationLevelCodesOperationCompleted);
            }
            this.InvokeAsync("GetEducationLevelCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetEducationLevelCodesOperationCompleted, userState);
        }
        
        private void OnGetEducationLevelCodesOperationCompleted(object arg) {
            if ((this.GetEducationLevelCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEducationLevelCodesCompleted(this, new GetEducationLevelCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThirdPartyCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetThirdPartyCodes(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetThirdPartyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetThirdPartyCodesAsync(string Token, long UserId, long FacilityId) {
            this.GetThirdPartyCodesAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetThirdPartyCodesAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetThirdPartyCodesOperationCompleted == null)) {
                this.GetThirdPartyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThirdPartyCodesOperationCompleted);
            }
            this.InvokeAsync("GetThirdPartyCodes", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetThirdPartyCodesOperationCompleted, userState);
        }
        
        private void OnGetThirdPartyCodesOperationCompleted(object arg) {
            if ((this.GetThirdPartyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThirdPartyCodesCompleted(this, new GetThirdPartyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarriers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CodeTableData GetCarriers(string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetCarriers", new object[] {
                        Token,
                        UserId,
                        FacilityId});
            return ((CodeTableData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarriersAsync(string Token, long UserId, long FacilityId) {
            this.GetCarriersAsync(Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetCarriersAsync(string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetCarriersOperationCompleted == null)) {
                this.GetCarriersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarriersOperationCompleted);
            }
            this.InvokeAsync("GetCarriers", new object[] {
                        Token,
                        UserId,
                        FacilityId}, this.GetCarriersOperationCompleted, userState);
        }
        
        private void OnGetCarriersOperationCompleted(object arg) {
            if ((this.GetCarriersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarriersCompleted(this, new GetCarriersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacilitySetupData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilitySetupResp GetFacilitySetupData(FacilityParms Parms, string Token, long UserId, long FacilityId) {
            object[] results = this.Invoke("GetFacilitySetupData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId});
            return ((FacilitySetupResp)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilitySetupDataAsync(FacilityParms Parms, string Token, long UserId, long FacilityId) {
            this.GetFacilitySetupDataAsync(Parms, Token, UserId, FacilityId, null);
        }
        
        /// <remarks/>
        public void GetFacilitySetupDataAsync(FacilityParms Parms, string Token, long UserId, long FacilityId, object userState) {
            if ((this.GetFacilitySetupDataOperationCompleted == null)) {
                this.GetFacilitySetupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilitySetupDataOperationCompleted);
            }
            this.InvokeAsync("GetFacilitySetupData", new object[] {
                        Parms,
                        Token,
                        UserId,
                        FacilityId}, this.GetFacilitySetupDataOperationCompleted, userState);
        }
        
        private void OnGetFacilitySetupDataOperationCompleted(object arg) {
            if ((this.GetFacilitySetupDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilitySetupDataCompleted(this, new GetFacilitySetupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeParms {
        
        private int optionField;
        
        private long practiceIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilitySetupResp {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long facilityIdField;
        
        private long userIdField;
        
        private string logonField;
        
        private string passwordField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Logon {
            get {
                return this.logonField;
            }
            set {
                this.logonField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CodeTableValue {
        
        private bool validField;
        
        private string errorMessageField;
        
        private int codeValueIdField;
        
        private string valueField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int CodeValueId {
            get {
                return this.codeValueIdField;
            }
            set {
                this.codeValueIdField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CodeTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long facilityIdField;
        
        private long practiceIdField;
        
        private int eMRSystemIdField;
        
        private int facilityTypeIdField;
        
        private string facilityNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countryCodeField;
        
        private string postalCodeField;
        
        private string phoneField;
        
        private string faxField;
        
        private string billAddress1Field;
        
        private string billAddress2Field;
        
        private string billAddress3Field;
        
        private string billCityField;
        
        private string billStateField;
        
        private string billPostalCodeField;
        
        private string billCountryCodeField;
        
        private string billPhoneField;
        
        private string billFaxField;
        
        private bool generalMessageAvailableField;
        
        private int generalMessageNotifyField;
        
        private string generalMessageEmailField;
        
        private bool appointmentMessageAvailableField;
        
        private int appointmentMessageNotifyField;
        
        private string appointmentMessageEmailField;
        
        private bool medicationMessageAvailableField;
        
        private int medicationMessageNotifyField;
        
        private string medicationMessageEmailField;
        
        private bool referalMessageAvailableField;
        
        private int referralMessageNotifyField;
        
        private string referralMessageEmailField;
        
        private bool premiumAvailableField;
        
        private short onlineBillPaymentField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
        
        /// <remarks/>
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
            }
        }
        
        /// <remarks/>
        public int EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
            }
        }
        
        /// <remarks/>
        public int FacilityTypeId {
            get {
                return this.facilityTypeIdField;
            }
            set {
                this.facilityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string BillAddress1 {
            get {
                return this.billAddress1Field;
            }
            set {
                this.billAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string BillAddress2 {
            get {
                return this.billAddress2Field;
            }
            set {
                this.billAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string BillAddress3 {
            get {
                return this.billAddress3Field;
            }
            set {
                this.billAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string BillCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
            }
        }
        
        /// <remarks/>
        public string BillState {
            get {
                return this.billStateField;
            }
            set {
                this.billStateField = value;
            }
        }
        
        /// <remarks/>
        public string BillPostalCode {
            get {
                return this.billPostalCodeField;
            }
            set {
                this.billPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BillCountryCode {
            get {
                return this.billCountryCodeField;
            }
            set {
                this.billCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BillPhone {
            get {
                return this.billPhoneField;
            }
            set {
                this.billPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string BillFax {
            get {
                return this.billFaxField;
            }
            set {
                this.billFaxField = value;
            }
        }
        
        /// <remarks/>
        public bool GeneralMessageAvailable {
            get {
                return this.generalMessageAvailableField;
            }
            set {
                this.generalMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public int GeneralMessageNotify {
            get {
                return this.generalMessageNotifyField;
            }
            set {
                this.generalMessageNotifyField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralMessageEmail {
            get {
                return this.generalMessageEmailField;
            }
            set {
                this.generalMessageEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool AppointmentMessageAvailable {
            get {
                return this.appointmentMessageAvailableField;
            }
            set {
                this.appointmentMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public int AppointmentMessageNotify {
            get {
                return this.appointmentMessageNotifyField;
            }
            set {
                this.appointmentMessageNotifyField = value;
            }
        }
        
        /// <remarks/>
        public string AppointmentMessageEmail {
            get {
                return this.appointmentMessageEmailField;
            }
            set {
                this.appointmentMessageEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool MedicationMessageAvailable {
            get {
                return this.medicationMessageAvailableField;
            }
            set {
                this.medicationMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public int MedicationMessageNotify {
            get {
                return this.medicationMessageNotifyField;
            }
            set {
                this.medicationMessageNotifyField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationMessageEmail {
            get {
                return this.medicationMessageEmailField;
            }
            set {
                this.medicationMessageEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool ReferalMessageAvailable {
            get {
                return this.referalMessageAvailableField;
            }
            set {
                this.referalMessageAvailableField = value;
            }
        }
        
        /// <remarks/>
        public int ReferralMessageNotify {
            get {
                return this.referralMessageNotifyField;
            }
            set {
                this.referralMessageNotifyField = value;
            }
        }
        
        /// <remarks/>
        public string ReferralMessageEmail {
            get {
                return this.referralMessageEmailField;
            }
            set {
                this.referralMessageEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool PremiumAvailable {
            get {
                return this.premiumAvailableField;
            }
            set {
                this.premiumAvailableField = value;
            }
        }
        
        /// <remarks/>
        public short OnlineBillPayment {
            get {
                return this.onlineBillPaymentField;
            }
            set {
                this.onlineBillPaymentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityParms {
        
        private int optionField;
        
        private long facilityIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationSearchParms {
        
        private string organizationNameField;
        
        /// <remarks/>
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long organizationIdField;
        
        private string organizationNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationParms {
        
        private int optionField;
        
        private long organizationIdField;
        
        /// <remarks/>
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeTableData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeData {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long practiceIdField;
        
        private long organizationIdField;
        
        private string practiceNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
            }
        }
        
        /// <remarks/>
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        public string PracticeName {
            get {
                return this.practiceNameField;
            }
            set {
                this.practiceNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPracticeDataCompletedEventHandler(object sender, GetPracticeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPracticeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPracticeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PracticeData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PracticeData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SavePracticeDataCompletedEventHandler(object sender, SavePracticeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePracticeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePracticeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PracticeData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PracticeData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPracticesForOrganizationCompletedEventHandler(object sender, GetPracticesForOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPracticesForOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPracticesForOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PracticeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PracticeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOrganizationDataCompletedEventHandler(object sender, GetOrganizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveOrganizationDataCompletedEventHandler(object sender, SaveOrganizationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrganizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrganizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void OrganizationSearchCompletedEventHandler(object sender, OrganizationSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrganizationSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrganizationSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFacilityDataCompletedEventHandler(object sender, GetFacilityDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FacilityData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FacilityData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveFacilityDataCompletedEventHandler(object sender, SaveFacilityDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFacilityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFacilityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FacilityData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FacilityData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFacilitiesForPracticeCompletedEventHandler(object sender, GetFacilitiesForPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilitiesForPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilitiesForPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FacilityTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FacilityTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPreferredLanguageCodesCompletedEventHandler(object sender, GetPreferredLanguageCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreferredLanguageCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreferredLanguageCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetGenderCodesCompletedEventHandler(object sender, GetGenderCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenderCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenderCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRaceCodesCompletedEventHandler(object sender, GetRaceCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRaceCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRaceCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEthnicityCodesCompletedEventHandler(object sender, GetEthnicityCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEthnicityCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEthnicityCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMaritalStatusCodesCompletedEventHandler(object sender, GetMaritalStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaritalStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaritalStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetConditionStatusCodesCompletedEventHandler(object sender, GetConditionStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConditionStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConditionStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetReligionCodesCompletedEventHandler(object sender, GetReligionCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReligionCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReligionCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBloodTypeCodesCompletedEventHandler(object sender, GetBloodTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBloodTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBloodTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSmokingStatusCodesCompletedEventHandler(object sender, GetSmokingStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmokingStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmokingStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFacilityTypesCodesCompletedEventHandler(object sender, GetFacilityTypesCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilityTypesCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilityTypesCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserRoleCodesCompletedEventHandler(object sender, GetUserRoleCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRoleCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRoleCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocumentTypeCodesCompletedEventHandler(object sender, GetDocumentTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAuditActionCodesCompletedEventHandler(object sender, GetAuditActionCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuditActionCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuditActionCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEMRSystemCodesCompletedEventHandler(object sender, GetEMRSystemCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMRSystemCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMRSystemCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRelationshipCodesCompletedEventHandler(object sender, GetRelationshipCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationshipCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationshipCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRelationshipSNOMEDCompletedEventHandler(object sender, GetRelationshipSNOMEDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationshipSNOMEDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationshipSNOMEDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSecurityQuestionCodesCompletedEventHandler(object sender, GetSecurityQuestionCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityQuestionCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityQuestionCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetInstructionTypeCodesCompletedEventHandler(object sender, GetInstructionTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstructionTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstructionTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProblemCodesCompletedEventHandler(object sender, GetProblemCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProblemCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProblemCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetVaccineCodesCompletedEventHandler(object sender, GetVaccineCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVaccineCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVaccineCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMedicationsCodesCompletedEventHandler(object sender, GetMedicationsCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicationsCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicationsCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFrequencyCodesCompletedEventHandler(object sender, GetFrequencyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFrequencyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFrequencyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCountryCodesCompletedEventHandler(object sender, GetCountryCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetStateCodesCompletedEventHandler(object sender, GetStateCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSocialCodesCompletedEventHandler(object sender, GetSocialCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSocialCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSocialCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRouteOfAdministrationCodesCompletedEventHandler(object sender, GetRouteOfAdministrationCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRouteOfAdministrationCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRouteOfAdministrationCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDocUploadTypeCodesCompletedEventHandler(object sender, GetDocUploadTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocUploadTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocUploadTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDoctorTypeCodesCompletedEventHandler(object sender, GetDoctorTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPolicyTypeCodesCompletedEventHandler(object sender, GetPolicyTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPolicyTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPolicyTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAdvisorCodesCompletedEventHandler(object sender, GetAdvisorCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvisorCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvisorCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetExerciseFrequencyCodesCompletedEventHandler(object sender, GetExerciseFrequencyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExerciseFrequencyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExerciseFrequencyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetActivityLevelCodesCompletedEventHandler(object sender, GetActivityLevelCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivityLevelCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivityLevelCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAlcoholFrequencyCodesCompletedEventHandler(object sender, GetAlcoholFrequencyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlcoholFrequencyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlcoholFrequencyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEducationLevelCodesCompletedEventHandler(object sender, GetEducationLevelCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEducationLevelCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEducationLevelCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetThirdPartyCodesCompletedEventHandler(object sender, GetThirdPartyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThirdPartyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThirdPartyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCarriersCompletedEventHandler(object sender, GetCarriersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarriersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarriersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CodeTableData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CodeTableData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFacilitySetupDataCompletedEventHandler(object sender, GetFacilitySetupDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilitySetupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilitySetupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FacilitySetupResp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FacilitySetupResp)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591