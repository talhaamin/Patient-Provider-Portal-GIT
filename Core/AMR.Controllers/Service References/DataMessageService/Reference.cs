//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMR.Controllers.DataMessageService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataMessageService.MessageWSSoap")]
    public interface MessageWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageData GetMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> GetMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMessageReadFlagData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageData UpdateMessageReadFlagData(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMessageReadFlagData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> UpdateMessageReadFlagDataAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveMessageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageData SaveMessageData(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveMessageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> SaveMessageDataAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageData CancelMessage(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> CancelMessageAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageData DeleteMessage(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> DeleteMessageAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageListProvider", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageListProvider(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageListProvider", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageListProviderAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailSentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailSentList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailSentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailSentListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailReceivedList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailReceivedList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailReceivedList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailReceivedListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailProvSentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailProvSentList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailProvSentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailProvSentListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailProvReceivedList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailProvReceivedList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageDetailProvReceivedList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailProvReceivedListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.CodeTableData GetMessageTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageTypeGeneralCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.CodeTableData GetMessageTypeGeneralCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageTypeGeneralCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageTypeGeneralCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageStatusCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.CodeTableData GetMessageStatusCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageStatusCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageStatusCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageResponseTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.CodeTableData GetMessageResponseTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageResponseTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageResponseTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessagePeriodCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.CodeTableData GetMessagePeriodCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessagePeriodCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessagePeriodCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageAttachmentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageAttachmentData GetMessageAttachmentData(AMR.Controllers.DataMessageService.MessageAttachmentData Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageAttachmentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageAttachmentData> GetMessageAttachmentDataAsync(AMR.Controllers.DataMessageService.MessageAttachmentData Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnreadMessageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageUnread GetUnreadMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnreadMessageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageUnread> GetUnreadMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnreadProvMessageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.MessageUnread GetUnreadProvMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnreadProvMessageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageUnread> GetUnreadProvMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataMessageService.EmailMessageData SendEmailMessage(AMR.Controllers.DataMessageService.EmailMessageData Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.EmailMessageData> SendEmailMessageAsync(AMR.Controllers.DataMessageService.EmailMessageData Parms, string Token, long UserId, long FacilityId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long messageIdField;
        
        private long patientIdField;
        
        private long providerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
                this.RaisePropertyChanged("MessageId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmailMessageData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private string toField;
        
        private string subjectField;
        
        private string bodyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageUnread : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private int totalMessagesField;
        
        private int appointmentMessagesField;
        
        private int medicationMessagesField;
        
        private int referralMessagesField;
        
        private int generalMessagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TotalMessages {
            get {
                return this.totalMessagesField;
            }
            set {
                this.totalMessagesField = value;
                this.RaisePropertyChanged("TotalMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AppointmentMessages {
            get {
                return this.appointmentMessagesField;
            }
            set {
                this.appointmentMessagesField = value;
                this.RaisePropertyChanged("AppointmentMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int MedicationMessages {
            get {
                return this.medicationMessagesField;
            }
            set {
                this.medicationMessagesField = value;
                this.RaisePropertyChanged("MedicationMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int ReferralMessages {
            get {
                return this.referralMessagesField;
            }
            set {
                this.referralMessagesField = value;
                this.RaisePropertyChanged("ReferralMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int GeneralMessages {
            get {
                return this.generalMessagesField;
            }
            set {
                this.generalMessagesField = value;
                this.RaisePropertyChanged("GeneralMessages");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageAttachmentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long messageAttachmentIdField;
        
        private long messageIdField;
        
        private long patientIdField;
        
        private string fileDirectoryField;
        
        private string fileNameField;
        
        private string documentFormatField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long MessageAttachmentId {
            get {
                return this.messageAttachmentIdField;
            }
            set {
                this.messageAttachmentIdField = value;
                this.RaisePropertyChanged("MessageAttachmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
                this.RaisePropertyChanged("MessageId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FileDirectory {
            get {
                return this.fileDirectoryField;
            }
            set {
                this.fileDirectoryField = value;
                this.RaisePropertyChanged("FileDirectory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=8)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CodeTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long messageIdField;
        
        private long patientIdField;
        
        private int messageTypeIdField;
        
        private long facilityIdField;
        
        private int messageStatusIdField;
        
        private long user_Id_CreatedField;
        
        private string createdByNameField;
        
        private long messageDetailIdField;
        
        private System.Nullable<long> providerId_ToField;
        
        private System.Nullable<long> providerId_FromField;
        
        private string messageRequestField;
        
        private string messageResponseField;
        
        private int messageResponseTypeIdField;
        
        private string preferredPeriodField;
        
        private string preferredTimeField;
        
        private string preferredWeekDayField;
        
        private string visitReasonField;
        
        private bool messageUrgencyField;
        
        private System.DateTime appointmentStartField;
        
        private System.DateTime appointmentEndField;
        
        private long providerId_AppointmentField;
        
        private string medicationNDCField;
        
        private string medicationNameField;
        
        private int noOfRefillsField;
        
        private int medicationStatusField;
        
        private string pharmacyNameField;
        
        private string pharmacyAddressField;
        
        private string pharmacyPhoneField;
        
        private bool messageReadField;
        
        private string attachmentIdField;
        
        private string attachmentNameField;
        
        private byte[] attachmentField;
        
        private System.Data.DataTable dtDetailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
                this.RaisePropertyChanged("MessageId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int MessageTypeId {
            get {
                return this.messageTypeIdField;
            }
            set {
                this.messageTypeIdField = value;
                this.RaisePropertyChanged("MessageTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int MessageStatusId {
            get {
                return this.messageStatusIdField;
            }
            set {
                this.messageStatusIdField = value;
                this.RaisePropertyChanged("MessageStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public long User_Id_Created {
            get {
                return this.user_Id_CreatedField;
            }
            set {
                this.user_Id_CreatedField = value;
                this.RaisePropertyChanged("User_Id_Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CreatedByName {
            get {
                return this.createdByNameField;
            }
            set {
                this.createdByNameField = value;
                this.RaisePropertyChanged("CreatedByName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public long MessageDetailId {
            get {
                return this.messageDetailIdField;
            }
            set {
                this.messageDetailIdField = value;
                this.RaisePropertyChanged("MessageDetailId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<long> ProviderId_To {
            get {
                return this.providerId_ToField;
            }
            set {
                this.providerId_ToField = value;
                this.RaisePropertyChanged("ProviderId_To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public System.Nullable<long> ProviderId_From {
            get {
                return this.providerId_FromField;
            }
            set {
                this.providerId_FromField = value;
                this.RaisePropertyChanged("ProviderId_From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string MessageRequest {
            get {
                return this.messageRequestField;
            }
            set {
                this.messageRequestField = value;
                this.RaisePropertyChanged("MessageRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string MessageResponse {
            get {
                return this.messageResponseField;
            }
            set {
                this.messageResponseField = value;
                this.RaisePropertyChanged("MessageResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int MessageResponseTypeId {
            get {
                return this.messageResponseTypeIdField;
            }
            set {
                this.messageResponseTypeIdField = value;
                this.RaisePropertyChanged("MessageResponseTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string PreferredPeriod {
            get {
                return this.preferredPeriodField;
            }
            set {
                this.preferredPeriodField = value;
                this.RaisePropertyChanged("PreferredPeriod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string PreferredTime {
            get {
                return this.preferredTimeField;
            }
            set {
                this.preferredTimeField = value;
                this.RaisePropertyChanged("PreferredTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string PreferredWeekDay {
            get {
                return this.preferredWeekDayField;
            }
            set {
                this.preferredWeekDayField = value;
                this.RaisePropertyChanged("PreferredWeekDay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
                this.RaisePropertyChanged("VisitReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool MessageUrgency {
            get {
                return this.messageUrgencyField;
            }
            set {
                this.messageUrgencyField = value;
                this.RaisePropertyChanged("MessageUrgency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public System.DateTime AppointmentStart {
            get {
                return this.appointmentStartField;
            }
            set {
                this.appointmentStartField = value;
                this.RaisePropertyChanged("AppointmentStart");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public System.DateTime AppointmentEnd {
            get {
                return this.appointmentEndField;
            }
            set {
                this.appointmentEndField = value;
                this.RaisePropertyChanged("AppointmentEnd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public long ProviderId_Appointment {
            get {
                return this.providerId_AppointmentField;
            }
            set {
                this.providerId_AppointmentField = value;
                this.RaisePropertyChanged("ProviderId_Appointment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string MedicationNDC {
            get {
                return this.medicationNDCField;
            }
            set {
                this.medicationNDCField = value;
                this.RaisePropertyChanged("MedicationNDC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
                this.RaisePropertyChanged("MedicationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public int NoOfRefills {
            get {
                return this.noOfRefillsField;
            }
            set {
                this.noOfRefillsField = value;
                this.RaisePropertyChanged("NoOfRefills");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public int MedicationStatus {
            get {
                return this.medicationStatusField;
            }
            set {
                this.medicationStatusField = value;
                this.RaisePropertyChanged("MedicationStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
                this.RaisePropertyChanged("PharmacyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string PharmacyAddress {
            get {
                return this.pharmacyAddressField;
            }
            set {
                this.pharmacyAddressField = value;
                this.RaisePropertyChanged("PharmacyAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string PharmacyPhone {
            get {
                return this.pharmacyPhoneField;
            }
            set {
                this.pharmacyPhoneField = value;
                this.RaisePropertyChanged("PharmacyPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public bool MessageRead {
            get {
                return this.messageReadField;
            }
            set {
                this.messageReadField = value;
                this.RaisePropertyChanged("MessageRead");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string AttachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
                this.RaisePropertyChanged("AttachmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string AttachmentName {
            get {
                return this.attachmentNameField;
            }
            set {
                this.attachmentNameField = value;
                this.RaisePropertyChanged("AttachmentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=33)]
        public byte[] Attachment {
            get {
                return this.attachmentField;
            }
            set {
                this.attachmentField = value;
                this.RaisePropertyChanged("Attachment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public System.Data.DataTable dtDetails {
            get {
                return this.dtDetailsField;
            }
            set {
                this.dtDetailsField = value;
                this.RaisePropertyChanged("dtDetails");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MessageWSSoapChannel : AMR.Controllers.DataMessageService.MessageWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageWSSoapClient : System.ServiceModel.ClientBase<AMR.Controllers.DataMessageService.MessageWSSoap>, AMR.Controllers.DataMessageService.MessageWSSoap {
        
        public MessageWSSoapClient() {
        }
        
        public MessageWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMR.Controllers.DataMessageService.MessageData GetMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> GetMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageData UpdateMessageReadFlagData(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.UpdateMessageReadFlagData(MessageData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> UpdateMessageReadFlagDataAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.UpdateMessageReadFlagDataAsync(MessageData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageData SaveMessageData(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveMessageData(MessageData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> SaveMessageDataAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveMessageDataAsync(MessageData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageData CancelMessage(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.CancelMessage(MessageData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> CancelMessageAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.CancelMessageAsync(MessageData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageData DeleteMessage(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.DeleteMessage(MessageData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageData> DeleteMessageAsync(AMR.Controllers.DataMessageService.MessageData MessageData, string Token, long UserId, long FacilityId) {
            return base.Channel.DeleteMessageAsync(MessageData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageListProvider(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageListProvider(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageListProviderAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageListProviderAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailSentList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailSentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailSentListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailSentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailReceivedList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailReceivedList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailReceivedListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailReceivedListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailProvSentList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailProvSentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailProvSentListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailProvSentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageTableData GetMessageDetailProvReceivedList(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailProvReceivedList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageTableData> GetMessageDetailProvReceivedListAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageDetailProvReceivedListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.CodeTableData GetMessageTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.CodeTableData GetMessageTypeGeneralCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageTypeGeneralCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageTypeGeneralCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageTypeGeneralCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.CodeTableData GetMessageStatusCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageStatusCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageStatusCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageStatusCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.CodeTableData GetMessageResponseTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageResponseTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessageResponseTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageResponseTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.CodeTableData GetMessagePeriodCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessagePeriodCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.CodeTableData> GetMessagePeriodCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessagePeriodCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageAttachmentData GetMessageAttachmentData(AMR.Controllers.DataMessageService.MessageAttachmentData Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageAttachmentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageAttachmentData> GetMessageAttachmentDataAsync(AMR.Controllers.DataMessageService.MessageAttachmentData Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMessageAttachmentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageUnread GetUnreadMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetUnreadMessageData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageUnread> GetUnreadMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetUnreadMessageDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.MessageUnread GetUnreadProvMessageData(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetUnreadProvMessageData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.MessageUnread> GetUnreadProvMessageDataAsync(AMR.Controllers.DataMessageService.MessageParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetUnreadProvMessageDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataMessageService.EmailMessageData SendEmailMessage(AMR.Controllers.DataMessageService.EmailMessageData Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.SendEmailMessage(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataMessageService.EmailMessageData> SendEmailMessageAsync(AMR.Controllers.DataMessageService.EmailMessageData Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.SendEmailMessageAsync(Parms, Token, UserId, FacilityId);
        }
    }
}
