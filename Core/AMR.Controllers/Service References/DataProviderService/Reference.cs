//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMR.Controllers.DataProviderService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataProviderService.ProviderWSSoap")]
    public interface ProviderWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderData GetProviderData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderData> GetProviderDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderAdminData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderAdminData GetProviderAdminData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderAdminData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderAdminData> GetProviderAdminDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProviderData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderResponse SaveProviderData(AMR.Controllers.DataProviderService.ProviderData ProviderData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProviderData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> SaveProviderDataAsync(AMR.Controllers.DataProviderService.ProviderData ProviderData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetPracticeList(long PracticeId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticeList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPracticeListAsync(long PracticeId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetFacilityList(long CkFacilityId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetFacilityListAsync(long CkFacilityId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityListForProviders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetFacilityListForProviders(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityListForProviders", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetFacilityListForProvidersAsync(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProvidersForPatientList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetProvidersForPatientList(long PatientId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProvidersForPatientList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetProvidersForPatientListAsync(long PatientId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientForProviderList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetPatientForProviderList(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientForProviderList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPatientForProviderListAsync(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderImageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderImageData GetProviderImageData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderImageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderImageData> GetProviderImageDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProvidermageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderImageData SaveProvidermageData(AMR.Controllers.DataProviderService.ProviderImageData ImageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveProvidermageData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderImageData> SaveProvidermageDataAsync(AMR.Controllers.DataProviderService.ProviderImageData ImageData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProviderInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData GetPatientProviderInfoList(long CkPatientId, long CkFacilityId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProviderInfoList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPatientProviderInfoListAsync(long CkPatientId, long CkFacilityId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProviderEmailSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData ProviderEmailSearch(string EMail, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProviderEmailSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> ProviderEmailSearchAsync(string EMail, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProviderSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderTableData ProviderSearch(AMR.Controllers.DataProviderService.ProviderSearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProviderSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> ProviderSearchAsync(AMR.Controllers.DataProviderService.ProviderSearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateProvider", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderResponse ActivateProvider(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateProvider", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> ActivateProviderAsync(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeactivateProvider", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderResponse DeactivateProvider(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeactivateProvider", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> DeactivateProviderAsync(long ProviderId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeProviderEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataProviderService.ProviderResponse ChangeProviderEmail(long ProviderId, string Email, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeProviderEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> ChangeProviderEmailAsync(long ProviderId, string Email, string Token, long UserId, long FacilityId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long providerIdField;
        
        private long facilityIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderSearchParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long providerIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string licenseField;
        
        private string phoneField;
        
        private string eMailField;
        
        private System.Nullable<int> facilityIdField;
        
        private System.Nullable<int> eMRSystemIdField;
        
        private System.Nullable<int> pageNumberField;
        
        private System.Nullable<int> pageSizeField;
        
        private System.Nullable<long> totalRecordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
                this.RaisePropertyChanged("License");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
                this.RaisePropertyChanged("EMail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<int> EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
                this.RaisePropertyChanged("EMRSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<int> PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
                this.RaisePropertyChanged("PageNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<int> PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
                this.RaisePropertyChanged("PageSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<long> TotalRecord {
            get {
                return this.totalRecordField;
            }
            set {
                this.totalRecordField = value;
                this.RaisePropertyChanged("TotalRecord");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderImageData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long providerIdField;
        
        private byte[] imageField;
        
        private string imageFormatField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=3)]
        public byte[] Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
                this.RaisePropertyChanged("Image");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ImageFormat {
            get {
                return this.imageFormatField;
            }
            set {
                this.imageFormatField = value;
                this.RaisePropertyChanged("ImageFormat");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        private long countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderAdminData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long providerIdField;
        
        private long practiceIdField;
        
        private string practiceNameField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string dEAField;
        
        private string licenseField;
        
        private string phoneField;
        
        private string emailField;
        
        private string passwordField;
        
        private bool activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
                this.RaisePropertyChanged("PracticeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PracticeName {
            get {
                return this.practiceNameField;
            }
            set {
                this.practiceNameField = value;
                this.RaisePropertyChanged("PracticeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
                this.RaisePropertyChanged("MiddleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string DEA {
            get {
                return this.dEAField;
            }
            set {
                this.dEAField = value;
                this.RaisePropertyChanged("DEA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
                this.RaisePropertyChanged("License");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProviderData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long providerIdField;
        
        private long practiceIdField;
        
        private long userIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string dEAField;
        
        private string licenseField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
                this.RaisePropertyChanged("PracticeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
                this.RaisePropertyChanged("MiddleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string DEA {
            get {
                return this.dEAField;
            }
            set {
                this.dEAField = value;
                this.RaisePropertyChanged("DEA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
                this.RaisePropertyChanged("License");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProviderWSSoapChannel : AMR.Controllers.DataProviderService.ProviderWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderWSSoapClient : System.ServiceModel.ClientBase<AMR.Controllers.DataProviderService.ProviderWSSoap>, AMR.Controllers.DataProviderService.ProviderWSSoap {
        
        public ProviderWSSoapClient() {
        }
        
        public ProviderWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProviderWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMR.Controllers.DataProviderService.ProviderData GetProviderData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderData> GetProviderDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderAdminData GetProviderAdminData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderAdminData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderAdminData> GetProviderAdminDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderAdminDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderResponse SaveProviderData(AMR.Controllers.DataProviderService.ProviderData ProviderData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveProviderData(ProviderData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> SaveProviderDataAsync(AMR.Controllers.DataProviderService.ProviderData ProviderData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveProviderDataAsync(ProviderData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetPracticeList(long PracticeId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticeList(PracticeId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPracticeListAsync(long PracticeId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticeListAsync(PracticeId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetFacilityList(long CkFacilityId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityList(CkFacilityId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetFacilityListAsync(long CkFacilityId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityListAsync(CkFacilityId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetFacilityListForProviders(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityListForProviders(ProviderId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetFacilityListForProvidersAsync(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityListForProvidersAsync(ProviderId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetProvidersForPatientList(long PatientId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProvidersForPatientList(PatientId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetProvidersForPatientListAsync(long PatientId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProvidersForPatientListAsync(PatientId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetPatientForProviderList(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientForProviderList(ProviderId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPatientForProviderListAsync(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientForProviderListAsync(ProviderId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderImageData GetProviderImageData(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderImageData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderImageData> GetProviderImageDataAsync(AMR.Controllers.DataProviderService.ProviderParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetProviderImageDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderImageData SaveProvidermageData(AMR.Controllers.DataProviderService.ProviderImageData ImageData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveProvidermageData(ImageData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderImageData> SaveProvidermageDataAsync(AMR.Controllers.DataProviderService.ProviderImageData ImageData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveProvidermageDataAsync(ImageData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData GetPatientProviderInfoList(long CkPatientId, long CkFacilityId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProviderInfoList(CkPatientId, CkFacilityId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> GetPatientProviderInfoListAsync(long CkPatientId, long CkFacilityId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProviderInfoListAsync(CkPatientId, CkFacilityId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData ProviderEmailSearch(string EMail, string Token, long UserId, long FacilityId) {
            return base.Channel.ProviderEmailSearch(EMail, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> ProviderEmailSearchAsync(string EMail, string Token, long UserId, long FacilityId) {
            return base.Channel.ProviderEmailSearchAsync(EMail, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderTableData ProviderSearch(AMR.Controllers.DataProviderService.ProviderSearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.ProviderSearch(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderTableData> ProviderSearchAsync(AMR.Controllers.DataProviderService.ProviderSearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.ProviderSearchAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderResponse ActivateProvider(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.ActivateProvider(ProviderId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> ActivateProviderAsync(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.ActivateProviderAsync(ProviderId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderResponse DeactivateProvider(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.DeactivateProvider(ProviderId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> DeactivateProviderAsync(long ProviderId, string Token, long UserId, long FacilityId) {
            return base.Channel.DeactivateProviderAsync(ProviderId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataProviderService.ProviderResponse ChangeProviderEmail(long ProviderId, string Email, string Token, long UserId, long FacilityId) {
            return base.Channel.ChangeProviderEmail(ProviderId, Email, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataProviderService.ProviderResponse> ChangeProviderEmailAsync(long ProviderId, string Email, string Token, long UserId, long FacilityId) {
            return base.Channel.ChangeProviderEmailAsync(ProviderId, Email, Token, UserId, FacilityId);
        }
    }
}
