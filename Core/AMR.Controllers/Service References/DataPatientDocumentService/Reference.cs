//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMR.Controllers.DataPatientDocumentService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataPatientDocumentService.PatientDocumentWSSoap")]
    public interface PatientDocumentWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientVisitCCDData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientVisitCCD GetPatientVisitCCDData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientVisitCCDData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVisitCCD> GetPatientVisitCCDDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCCDCustomizeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientCCDTableData GetPatientCCDCustomizeData(AMR.Controllers.DataPatientDocumentService.PatientCCDParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCCDCustomizeData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCCDTableData> GetPatientCCDCustomizeDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCCDParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientNoteData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientNoteData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientNoteData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientNoteDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientNoteData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientNoteData SavePatientNoteData(AMR.Controllers.DataPatientDocumentService.PatientNoteData PatientNote, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientNoteData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientNoteData> SavePatientNoteDataAsync(AMR.Controllers.DataPatientDocumentService.PatientNoteData PatientNote, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSocialSelfData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData GetPatientSocialSelfData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSocialSelfData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData> GetPatientSocialSelfDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSocialSelfData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData SavePatientSocialSelfData(AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSocialSelfData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData> SavePatientSocialSelfDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCombinedPatientDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetCombinedPatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCombinedPatientDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetCombinedPatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientAllergyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientAllergyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientAllergyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientAllergyData SavePatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientAllergyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAllergyData> SavePatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientAllergyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientAllergyData DeletePatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientAllergyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAllergyData> DeletePatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientFamilyHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientFamilyHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientFamilyHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData SavePatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientFamilyHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData> SavePatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientFamilyHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData DeletePatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientFamilyHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData> DeletePatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData SavePatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData> SavePatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData DeletePatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData> DeletePatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicationData SavePatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicationData> SavePatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicationData DeletePatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicationData> DeletePatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProblemData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProblemData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientProblemData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientProblemData SavePatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientProblemData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProblemData> SavePatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientProblemData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientProblemData DeletePatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientProblemData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProblemData> DeletePatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProcedureData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientProcedureData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientProcedureData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientProcedureData SavePatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientProcedureData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProcedureData> SavePatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientProcedureData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientProcedureData DeletePatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientProcedureData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProcedureData> DeletePatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSocialHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSocialHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSocialHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSocialHistData SavePatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSocialHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialHistData> SavePatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientSocialHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSocialHistData DeletePatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientSocialHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialHistData> DeletePatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSurgicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSurgicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSurgicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData SavePatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientSurgicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData> SavePatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientSurgicalHistData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData DeletePatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientSurgicalHistData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData> DeletePatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientVitalSignData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientVitalSignData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientVitalSignData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientVitalSignData SavePatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientVitalSignData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVitalSignData> SavePatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientVitalSignData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientVitalSignData DeletePatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientVitalSignData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVitalSignData> DeletePatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientImmunizationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientImmunizationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientImmunizationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientImmunizationData SavePatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientImmunizationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientImmunizationData> SavePatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientImmunizationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientImmunizationData DeletePatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientImmunizationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientImmunizationData> DeletePatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientLabResultData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientLabResultData GetPatientLabResultData(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientLabResultData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientLabResultData> GetPatientLabResultDataAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientLabResultData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientLabResultData SavePatientLabResultData(AMR.Controllers.DataPatientDocumentService.PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientLabResultData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientLabResultData> SavePatientLabResultDataAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientLabResultList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientLabResultList(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientLabResultList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientLabResultListAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientEmergencyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientEmergencyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientEmergencyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientEmergencyData SavePatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientEmergencyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientEmergencyData> SavePatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientEmergencyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientEmergencyData DeletePatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientEmergencyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientEmergencyData> DeletePatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientInsuranceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientInsuranceData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientInsuranceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientInsuranceData SavePatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientInsuranceData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientInsuranceData> SavePatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientInsuranceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientInsuranceData DeletePatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientInsuranceData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientInsuranceData> DeletePatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPharmacyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPharmacyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPharmacyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPharmacyData SavePatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPharmacyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPharmacyData> SavePatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPharmacyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPharmacyData DeletePatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPharmacyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPharmacyData> DeletePatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData GetPatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> GetPatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentDataApp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentDataApp GetPatientClinicalDocumentDataApp(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentDataApp", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentDataApp> GetPatientClinicalDocumentDataAppAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientClinicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData SavePatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientClinicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> SavePatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientClinicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData DeletePatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientClinicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> DeletePatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientClinicalDocumentList(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientClinicalDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientClinicalDocumentShare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientClinicalDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientClinicalDocumentShare", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientClinicalDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentData GetPatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> GetPatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentData SavePatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> SavePatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentData DeletePatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> DeletePatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientDocumentShare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientDocumentShare", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData GetPatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> GetPatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData SavePatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientMedicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> SavePatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicalDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData DeletePatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientMedicalDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> DeletePatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicalDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientMedicalDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicalDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientMedicalDocumentShare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientMedicalDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientMedicalDocumentShare", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientMedicalDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCareDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData GetPatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCareDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> GetPatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientCareDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData SavePatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientCareDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> SavePatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientCareDocumentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData DeletePatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientCareDocumentData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> DeletePatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCareDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientCareDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCareDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientCareDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientCareDocumentShare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientCareDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatientCareDocumentShare", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientCareDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPlanOfCareData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPlanOfCareData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPlanOfCareData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData SavePatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPlanOfCareData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData> SavePatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPlanOfCareData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData DeletePatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPlanOfCareData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData> DeletePatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalInstructionsData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientClinicalInstructionsData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientClinicalInstructionsData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientClinicalInstructionsDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDoctorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientDoctorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientDoctorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDoctorData SavePatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientDoctorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDoctorData> SavePatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientDoctorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDoctorData DeletePatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientDoctorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDoctorData> DeletePatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientAdvisorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientAdvisorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientAdvisorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientAdvisorData SavePatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientAdvisorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAdvisorData> SavePatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientAdvisorData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientAdvisorData DeletePatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientAdvisorData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAdvisorData> DeletePatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLabResultTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData GetLabResultTestData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLabResultTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData> GetLabResultTestDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSummaryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData GetPatientSummaryData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientSummaryData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData> GetPatientSummaryDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCCD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientCCDResult GetPatientCCD(AMR.Controllers.DataPatientDocumentService.CCDParms Parms, string Token, long UserId, long FacilityId, short Action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientCCD", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCCDResult> GetPatientCCDAsync(AMR.Controllers.DataPatientDocumentService.CCDParms Parms, string Token, long UserId, long FacilityId, short Action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientCCD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.CCDPostResponse SavePatientCCD(AMR.Controllers.DataPatientDocumentService.CCDPostData CCDData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientCCD", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.CCDPostResponse> SavePatientCCDAsync(AMR.Controllers.DataPatientDocumentService.CCDPostData CCDData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCCDAuditLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetCCDAuditLog(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCCDAuditLog", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetCCDAuditLogAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicalPortfolio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.MedicalPortfolioData GetMedicalPortfolio(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicalPortfolio", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.MedicalPortfolioData> GetMedicalPortfolioAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPolicyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientPolicyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPolicyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPolicyData SavePatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePatientPolicyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPolicyData> SavePatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPolicyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientPolicyData DeletePatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeletePatientPolicyData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPolicyData> DeletePatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicalSummaryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientDocumentService.PatientMedicalTableData GetMedicalSummaryData(AMR.Controllers.DataPatientDocumentService.PatientMedicalParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicalSummaryData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalTableData> GetMedicalSummaryDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalParms Parms, string Token, long UserId, long FacilityId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSummaryParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private int activeField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        private bool visitField;
        
        private bool allergyField;
        
        private bool medicationField;
        
        private bool socialHistField;
        
        private bool familyHistField;
        
        private bool medicalHistField;
        
        private bool problemField;
        
        private bool procedureField;
        
        private bool vitalSignField;
        
        private bool immunizationField;
        
        private bool planOfCareField;
        
        private bool labField;
        
        private bool insuranceField;
        
        private bool clinicalDocsField;
        
        private bool providerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
                this.RaisePropertyChanged("LabResultCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
                this.RaisePropertyChanged("Visit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
                this.RaisePropertyChanged("Allergy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
                this.RaisePropertyChanged("Medication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool SocialHist {
            get {
                return this.socialHistField;
            }
            set {
                this.socialHistField = value;
                this.RaisePropertyChanged("SocialHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool FamilyHist {
            get {
                return this.familyHistField;
            }
            set {
                this.familyHistField = value;
                this.RaisePropertyChanged("FamilyHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool MedicalHist {
            get {
                return this.medicalHistField;
            }
            set {
                this.medicalHistField = value;
                this.RaisePropertyChanged("MedicalHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
                this.RaisePropertyChanged("Problem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool Procedure {
            get {
                return this.procedureField;
            }
            set {
                this.procedureField = value;
                this.RaisePropertyChanged("Procedure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool VitalSign {
            get {
                return this.vitalSignField;
            }
            set {
                this.vitalSignField = value;
                this.RaisePropertyChanged("VitalSign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool Immunization {
            get {
                return this.immunizationField;
            }
            set {
                this.immunizationField = value;
                this.RaisePropertyChanged("Immunization");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
                this.RaisePropertyChanged("PlanOfCare");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool Lab {
            get {
                return this.labField;
            }
            set {
                this.labField = value;
                this.RaisePropertyChanged("Lab");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool Insurance {
            get {
                return this.insuranceField;
            }
            set {
                this.insuranceField = value;
                this.RaisePropertyChanged("Insurance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool ClinicalDocs {
            get {
                return this.clinicalDocsField;
            }
            set {
                this.clinicalDocsField = value;
                this.RaisePropertyChanged("ClinicalDocs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public bool Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
                this.RaisePropertyChanged("Provider");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtEmergencyField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtDoctorUploadedField;
        
        private System.Data.DataTable dtPatientUploadedField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtPolicyField;
        
        private System.Data.DataTable dtDocumentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dtEmergency {
            get {
                return this.dtEmergencyField;
            }
            set {
                this.dtEmergencyField = value;
                this.RaisePropertyChanged("dtEmergency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
                this.RaisePropertyChanged("dtVisit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataTable dtDoctorUploaded {
            get {
                return this.dtDoctorUploadedField;
            }
            set {
                this.dtDoctorUploadedField = value;
                this.RaisePropertyChanged("dtDoctorUploaded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.Data.DataTable dtPatientUploaded {
            get {
                return this.dtPatientUploadedField;
            }
            set {
                this.dtPatientUploadedField = value;
                this.RaisePropertyChanged("dtPatientUploaded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
                this.RaisePropertyChanged("dtAllergy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
                this.RaisePropertyChanged("dtMedication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
                this.RaisePropertyChanged("dtProblem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.Data.DataTable dtPolicy {
            get {
                return this.dtPolicyField;
            }
            set {
                this.dtPolicyField = value;
                this.RaisePropertyChanged("dtPolicy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.Data.DataTable dtDocument {
            get {
                return this.dtDocumentField;
            }
            set {
                this.dtDocumentField = value;
                this.RaisePropertyChanged("dtDocument");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long patientIdField;
        
        private bool emergencyField;
        
        private bool visitField;
        
        private bool doctorUploadedField;
        
        private bool patientUploadedField;
        
        private bool allergyField;
        
        private bool medicationField;
        
        private bool problemField;
        
        private bool policyField;
        
        private bool documentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Emergency {
            get {
                return this.emergencyField;
            }
            set {
                this.emergencyField = value;
                this.RaisePropertyChanged("Emergency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
                this.RaisePropertyChanged("Visit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DoctorUploaded {
            get {
                return this.doctorUploadedField;
            }
            set {
                this.doctorUploadedField = value;
                this.RaisePropertyChanged("DoctorUploaded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool PatientUploaded {
            get {
                return this.patientUploadedField;
            }
            set {
                this.patientUploadedField = value;
                this.RaisePropertyChanged("PatientUploaded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool Allergy {
            get {
                return this.allergyField;
            }
            set {
                this.allergyField = value;
                this.RaisePropertyChanged("Allergy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
                this.RaisePropertyChanged("Medication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
                this.RaisePropertyChanged("Problem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
                this.RaisePropertyChanged("Policy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
                this.RaisePropertyChanged("Document");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPolicyData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientPolicyIdField;
        
        private int policyTypeIdField;
        
        private string policyTypeNameField;
        
        private string companyField;
        
        private string policyNoField;
        
        private string groupNumberField;
        
        private string planNumberField;
        
        private string agentField;
        
        private string agentPhoneField;
        
        private string agentFaxField;
        
        private string notesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PatientPolicyId {
            get {
                return this.patientPolicyIdField;
            }
            set {
                this.patientPolicyIdField = value;
                this.RaisePropertyChanged("PatientPolicyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int PolicyTypeId {
            get {
                return this.policyTypeIdField;
            }
            set {
                this.policyTypeIdField = value;
                this.RaisePropertyChanged("PolicyTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string PolicyTypeName {
            get {
                return this.policyTypeNameField;
            }
            set {
                this.policyTypeNameField = value;
                this.RaisePropertyChanged("PolicyTypeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PolicyNo {
            get {
                return this.policyNoField;
            }
            set {
                this.policyNoField = value;
                this.RaisePropertyChanged("PolicyNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
                this.RaisePropertyChanged("GroupNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string PlanNumber {
            get {
                return this.planNumberField;
            }
            set {
                this.planNumberField = value;
                this.RaisePropertyChanged("PlanNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Agent {
            get {
                return this.agentField;
            }
            set {
                this.agentField = value;
                this.RaisePropertyChanged("Agent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string AgentPhone {
            get {
                return this.agentPhoneField;
            }
            set {
                this.agentPhoneField = value;
                this.RaisePropertyChanged("AgentPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string AgentFax {
            get {
                return this.agentFaxField;
            }
            set {
                this.agentFaxField = value;
                this.RaisePropertyChanged("AgentFax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MedicalPortfolioData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtOutsideDoctorField;
        
        private System.Data.DataTable dtPatiendDocsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
                this.RaisePropertyChanged("dtVisit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataTable dtOutsideDoctor {
            get {
                return this.dtOutsideDoctorField;
            }
            set {
                this.dtOutsideDoctorField = value;
                this.RaisePropertyChanged("dtOutsideDoctor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataTable dtPatiendDocs {
            get {
                return this.dtPatiendDocsField;
            }
            set {
                this.dtPatiendDocsField = value;
                this.RaisePropertyChanged("dtPatiendDocs");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDPostResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDPostData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long visitIdField;
        
        private long aMRPatientIdField;
        
        private System.DateTime visitDateField;
        
        private long providerIdField;
        
        private string visitReasonField;
        
        private byte[] documentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long AMRPatientId {
            get {
                return this.aMRPatientIdField;
            }
            set {
                this.aMRPatientIdField = value;
                this.RaisePropertyChanged("AMRPatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime VisitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
                this.RaisePropertyChanged("VisitDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
                this.RaisePropertyChanged("VisitReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=5)]
        public byte[] Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
                this.RaisePropertyChanged("Document");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private string cCDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CCD {
            get {
                return this.cCDField;
            }
            set {
                this.cCDField = value;
                this.RaisePropertyChanged("CCD");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCDParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private bool customField;
        
        private bool demographicsField;
        
        private bool providerField;
        
        private bool problemsField;
        
        private bool allergiesField;
        
        private bool immunizationsField;
        
        private bool medicationsField;
        
        private bool medsAdministeredField;
        
        private bool socialField;
        
        private bool proceduresField;
        
        private bool vitalSignsField;
        
        private bool labsField;
        
        private bool planOfCareField;
        
        private bool visitReasonField;
        
        private System.Data.DataSet selectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Custom {
            get {
                return this.customField;
            }
            set {
                this.customField = value;
                this.RaisePropertyChanged("Custom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
                this.RaisePropertyChanged("Demographics");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
                this.RaisePropertyChanged("Provider");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Problems {
            get {
                return this.problemsField;
            }
            set {
                this.problemsField = value;
                this.RaisePropertyChanged("Problems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Allergies {
            get {
                return this.allergiesField;
            }
            set {
                this.allergiesField = value;
                this.RaisePropertyChanged("Allergies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Immunizations {
            get {
                return this.immunizationsField;
            }
            set {
                this.immunizationsField = value;
                this.RaisePropertyChanged("Immunizations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool Medications {
            get {
                return this.medicationsField;
            }
            set {
                this.medicationsField = value;
                this.RaisePropertyChanged("Medications");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool MedsAdministered {
            get {
                return this.medsAdministeredField;
            }
            set {
                this.medsAdministeredField = value;
                this.RaisePropertyChanged("MedsAdministered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool Social {
            get {
                return this.socialField;
            }
            set {
                this.socialField = value;
                this.RaisePropertyChanged("Social");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool Procedures {
            get {
                return this.proceduresField;
            }
            set {
                this.proceduresField = value;
                this.RaisePropertyChanged("Procedures");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool VitalSigns {
            get {
                return this.vitalSignsField;
            }
            set {
                this.vitalSignsField = value;
                this.RaisePropertyChanged("VitalSigns");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool Labs {
            get {
                return this.labsField;
            }
            set {
                this.labsField = value;
                this.RaisePropertyChanged("Labs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool PlanOfCare {
            get {
                return this.planOfCareField;
            }
            set {
                this.planOfCareField = value;
                this.RaisePropertyChanged("PlanOfCare");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
                this.RaisePropertyChanged("VisitReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public System.Data.DataSet Selection {
            get {
                return this.selectionField;
            }
            set {
                this.selectionField = value;
                this.RaisePropertyChanged("Selection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSummaryTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtVisitField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtSocialHistField;
        
        private System.Data.DataTable dtFamilyHistField;
        
        private System.Data.DataTable dtMedicalHistField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtProcedureField;
        
        private System.Data.DataTable dtVitalSignField;
        
        private System.Data.DataTable dtImmunizationField;
        
        private System.Data.DataTable dtPlanOfCareField;
        
        private System.Data.DataTable dtLabField;
        
        private System.Data.DataTable dtLabDetailField;
        
        private System.Data.DataTable dtLabResultField;
        
        private System.Data.DataTable dtInsuranceField;
        
        private System.Data.DataTable dtClinicalDocsField;
        
        private System.Data.DataTable dtProviderField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dtVisit {
            get {
                return this.dtVisitField;
            }
            set {
                this.dtVisitField = value;
                this.RaisePropertyChanged("dtVisit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
                this.RaisePropertyChanged("dtAllergy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
                this.RaisePropertyChanged("dtMedication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.Data.DataTable dtSocialHist {
            get {
                return this.dtSocialHistField;
            }
            set {
                this.dtSocialHistField = value;
                this.RaisePropertyChanged("dtSocialHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.Data.DataTable dtFamilyHist {
            get {
                return this.dtFamilyHistField;
            }
            set {
                this.dtFamilyHistField = value;
                this.RaisePropertyChanged("dtFamilyHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.Data.DataTable dtMedicalHist {
            get {
                return this.dtMedicalHistField;
            }
            set {
                this.dtMedicalHistField = value;
                this.RaisePropertyChanged("dtMedicalHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
                this.RaisePropertyChanged("dtProblem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.Data.DataTable dtProcedure {
            get {
                return this.dtProcedureField;
            }
            set {
                this.dtProcedureField = value;
                this.RaisePropertyChanged("dtProcedure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.Data.DataTable dtVitalSign {
            get {
                return this.dtVitalSignField;
            }
            set {
                this.dtVitalSignField = value;
                this.RaisePropertyChanged("dtVitalSign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.Data.DataTable dtImmunization {
            get {
                return this.dtImmunizationField;
            }
            set {
                this.dtImmunizationField = value;
                this.RaisePropertyChanged("dtImmunization");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.Data.DataTable dtPlanOfCare {
            get {
                return this.dtPlanOfCareField;
            }
            set {
                this.dtPlanOfCareField = value;
                this.RaisePropertyChanged("dtPlanOfCare");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public System.Data.DataTable dtLab {
            get {
                return this.dtLabField;
            }
            set {
                this.dtLabField = value;
                this.RaisePropertyChanged("dtLab");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public System.Data.DataTable dtLabDetail {
            get {
                return this.dtLabDetailField;
            }
            set {
                this.dtLabDetailField = value;
                this.RaisePropertyChanged("dtLabDetail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public System.Data.DataTable dtLabResult {
            get {
                return this.dtLabResultField;
            }
            set {
                this.dtLabResultField = value;
                this.RaisePropertyChanged("dtLabResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public System.Data.DataTable dtInsurance {
            get {
                return this.dtInsuranceField;
            }
            set {
                this.dtInsuranceField = value;
                this.RaisePropertyChanged("dtInsurance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public System.Data.DataTable dtClinicalDocs {
            get {
                return this.dtClinicalDocsField;
            }
            set {
                this.dtClinicalDocsField = value;
                this.RaisePropertyChanged("dtClinicalDocs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public System.Data.DataTable dtProvider {
            get {
                return this.dtProviderField;
            }
            set {
                this.dtProviderField = value;
                this.RaisePropertyChanged("dtProvider");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAdvisorData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientAdvisorIdField;
        
        private int advisorIdField;
        
        private string advisorDescField;
        
        private string nameField;
        
        private string contactAgentField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string workPhoneField;
        
        private string mobilePhoneField;
        
        private string faxField;
        
        private string eMailField;
        
        private string notesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PatientAdvisorId {
            get {
                return this.patientAdvisorIdField;
            }
            set {
                this.patientAdvisorIdField = value;
                this.RaisePropertyChanged("PatientAdvisorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int AdvisorId {
            get {
                return this.advisorIdField;
            }
            set {
                this.advisorIdField = value;
                this.RaisePropertyChanged("AdvisorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AdvisorDesc {
            get {
                return this.advisorDescField;
            }
            set {
                this.advisorDescField = value;
                this.RaisePropertyChanged("AdvisorDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ContactAgent {
            get {
                return this.contactAgentField;
            }
            set {
                this.contactAgentField = value;
                this.RaisePropertyChanged("ContactAgent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
                this.RaisePropertyChanged("WorkPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
                this.RaisePropertyChanged("MobilePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
                this.RaisePropertyChanged("EMail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDoctorData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientDoctorIdField;
        
        private int doctorTypeIdField;
        
        private string doctorTypeDescField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string workPhoneField;
        
        private string mobilePhoneField;
        
        private string faxField;
        
        private string emailField;
        
        private bool isPrimaryField;
        
        private bool onCardField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PatientDoctorId {
            get {
                return this.patientDoctorIdField;
            }
            set {
                this.patientDoctorIdField = value;
                this.RaisePropertyChanged("PatientDoctorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int DoctorTypeId {
            get {
                return this.doctorTypeIdField;
            }
            set {
                this.doctorTypeIdField = value;
                this.RaisePropertyChanged("DoctorTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DoctorTypeDesc {
            get {
                return this.doctorTypeDescField;
            }
            set {
                this.doctorTypeDescField = value;
                this.RaisePropertyChanged("DoctorTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
                this.RaisePropertyChanged("WorkPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
                this.RaisePropertyChanged("MobilePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
                this.RaisePropertyChanged("IsPrimary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
                this.RaisePropertyChanged("OnCard");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPlanOfCareData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long planCntrField;
        
        private short instructionTypeIdField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string instructionField;
        
        private string goalField;
        
        private string noteField;
        
        private System.DateTime appointmentDateTimeField;
        
        private long providerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PlanCntr {
            get {
                return this.planCntrField;
            }
            set {
                this.planCntrField = value;
                this.RaisePropertyChanged("PlanCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public short InstructionTypeId {
            get {
                return this.instructionTypeIdField;
            }
            set {
                this.instructionTypeIdField = value;
                this.RaisePropertyChanged("InstructionTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
                this.RaisePropertyChanged("Instruction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Goal {
            get {
                return this.goalField;
            }
            set {
                this.goalField = value;
                this.RaisePropertyChanged("Goal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime AppointmentDateTime {
            get {
                return this.appointmentDateTimeField;
            }
            set {
                this.appointmentDateTimeField = value;
                this.RaisePropertyChanged("AppointmentDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCareDocumentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string doctorNameField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
                this.RaisePropertyChanged("DoctorName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
                this.RaisePropertyChanged("StorageLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
                this.RaisePropertyChanged("Viewable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=11)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalDocumentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string facilityNameField;
        
        private string doctorNameField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
                this.RaisePropertyChanged("FacilityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
                this.RaisePropertyChanged("DoctorName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
                this.RaisePropertyChanged("StorageLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
                this.RaisePropertyChanged("Viewable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=12)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
                this.RaisePropertyChanged("StorageLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
                this.RaisePropertyChanged("Viewable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=10)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentResp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientClinicalDocumentDataApp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
                this.RaisePropertyChanged("StorageLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
                this.RaisePropertyChanged("Viewable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=12)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientClinicalDocumentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long documentCntrField;
        
        private string documentDescriptionField;
        
        private string documentIdField;
        
        private string documentFormatField;
        
        private string storageLocationField;
        
        private string notesField;
        
        private bool viewableField;
        
        private byte[] documentImageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DocumentFormat {
            get {
                return this.documentFormatField;
            }
            set {
                this.documentFormatField = value;
                this.RaisePropertyChanged("DocumentFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string StorageLocation {
            get {
                return this.storageLocationField;
            }
            set {
                this.storageLocationField = value;
                this.RaisePropertyChanged("StorageLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool Viewable {
            get {
                return this.viewableField;
            }
            set {
                this.viewableField = value;
                this.RaisePropertyChanged("Viewable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=12)]
        public byte[] DocumentImage {
            get {
                return this.documentImageField;
            }
            set {
                this.documentImageField = value;
                this.RaisePropertyChanged("DocumentImage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientClinicalDocumentParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long documentCntrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientPharmacyData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long pharmacyCntrField;
        
        private string pharmacyNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string phoneField;
        
        private bool preferredField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PharmacyCntr {
            get {
                return this.pharmacyCntrField;
            }
            set {
                this.pharmacyCntrField = value;
                this.RaisePropertyChanged("PharmacyCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
                this.RaisePropertyChanged("PharmacyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public bool Preferred {
            get {
                return this.preferredField;
            }
            set {
                this.preferredField = value;
                this.RaisePropertyChanged("Preferred");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientInsuranceData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientInsuranceIdField;
        
        private string planNameField;
        
        private string memberNumberField;
        
        private string groupNumberField;
        
        private string subscriberField;
        
        private string relationshipField;
        
        private System.DateTime effectiveDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientInsuranceId {
            get {
                return this.patientInsuranceIdField;
            }
            set {
                this.patientInsuranceIdField = value;
                this.RaisePropertyChanged("PatientInsuranceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PlanName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
                this.RaisePropertyChanged("PlanName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MemberNumber {
            get {
                return this.memberNumberField;
            }
            set {
                this.memberNumberField = value;
                this.RaisePropertyChanged("MemberNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
                this.RaisePropertyChanged("GroupNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Subscriber {
            get {
                return this.subscriberField;
            }
            set {
                this.subscriberField = value;
                this.RaisePropertyChanged("Subscriber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Relationship {
            get {
                return this.relationshipField;
            }
            set {
                this.relationshipField = value;
                this.RaisePropertyChanged("Relationship");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientEmergencyData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long patientEmergencyIdField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        private string homePhoneField;
        
        private string mobilePhoneField;
        
        private string workPhoneField;
        
        private string emailField;
        
        private bool isPrimaryField;
        
        private System.Nullable<int> relationshipIdField;
        
        private bool onCardField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PatientEmergencyId {
            get {
                return this.patientEmergencyIdField;
            }
            set {
                this.patientEmergencyIdField = value;
                this.RaisePropertyChanged("PatientEmergencyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
                this.RaisePropertyChanged("HomePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
                this.RaisePropertyChanged("MobilePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string WorkPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
                this.RaisePropertyChanged("WorkPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
                this.RaisePropertyChanged("IsPrimary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
        public System.Nullable<int> RelationshipId {
            get {
                return this.relationshipIdField;
            }
            set {
                this.relationshipIdField = value;
                this.RaisePropertyChanged("RelationshipId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
                this.RaisePropertyChanged("OnCard");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientLabResultData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        private long providerId_RequestedField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string labNameField;
        
        private System.DateTime orderDateField;
        
        private System.DateTime collectionDateField;
        
        private string requisitonField;
        
        private string specimenField;
        
        private string specimenSourceField;
        
        private System.DateTime reportDateField;
        
        private System.DateTime reviewDateField;
        
        private string reviewerField;
        
        private System.Data.DataTable dtTestsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
                this.RaisePropertyChanged("LabResultCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public long ProviderId_Requested {
            get {
                return this.providerId_RequestedField;
            }
            set {
                this.providerId_RequestedField = value;
                this.RaisePropertyChanged("ProviderId_Requested");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string LabName {
            get {
                return this.labNameField;
            }
            set {
                this.labNameField = value;
                this.RaisePropertyChanged("LabName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
                this.RaisePropertyChanged("OrderDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime CollectionDate {
            get {
                return this.collectionDateField;
            }
            set {
                this.collectionDateField = value;
                this.RaisePropertyChanged("CollectionDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Requisiton {
            get {
                return this.requisitonField;
            }
            set {
                this.requisitonField = value;
                this.RaisePropertyChanged("Requisiton");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
                this.RaisePropertyChanged("Specimen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string SpecimenSource {
            get {
                return this.specimenSourceField;
            }
            set {
                this.specimenSourceField = value;
                this.RaisePropertyChanged("SpecimenSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public System.DateTime ReportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
                this.RaisePropertyChanged("ReportDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public System.DateTime ReviewDate {
            get {
                return this.reviewDateField;
            }
            set {
                this.reviewDateField = value;
                this.RaisePropertyChanged("ReviewDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Reviewer {
            get {
                return this.reviewerField;
            }
            set {
                this.reviewerField = value;
                this.RaisePropertyChanged("Reviewer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public System.Data.DataTable dtTests {
            get {
                return this.dtTestsField;
            }
            set {
                this.dtTestsField = value;
                this.RaisePropertyChanged("dtTests");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientLabResultParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long labResultCntrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long LabResultCntr {
            get {
                return this.labResultCntrField;
            }
            set {
                this.labResultCntrField = value;
                this.RaisePropertyChanged("LabResultCntr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientImmunizationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientImmunizationCntrField;
        
        private string immunizationDateField;
        
        private string immunizationTimeField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string vaccineField;
        
        private string amountField;
        
        private string routeField;
        
        private string siteField;
        
        private string sequenceField;
        
        private System.DateTime expirationDateField;
        
        private string lotNumberField;
        
        private string manufacturerField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientImmunizationCntr {
            get {
                return this.patientImmunizationCntrField;
            }
            set {
                this.patientImmunizationCntrField = value;
                this.RaisePropertyChanged("PatientImmunizationCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ImmunizationDate {
            get {
                return this.immunizationDateField;
            }
            set {
                this.immunizationDateField = value;
                this.RaisePropertyChanged("ImmunizationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ImmunizationTime {
            get {
                return this.immunizationTimeField;
            }
            set {
                this.immunizationTimeField = value;
                this.RaisePropertyChanged("ImmunizationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Vaccine {
            get {
                return this.vaccineField;
            }
            set {
                this.vaccineField = value;
                this.RaisePropertyChanged("Vaccine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
                this.RaisePropertyChanged("Route");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
                this.RaisePropertyChanged("Site");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
                this.RaisePropertyChanged("Sequence");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
                this.RaisePropertyChanged("ExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string LotNumber {
            get {
                return this.lotNumberField;
            }
            set {
                this.lotNumberField = value;
                this.RaisePropertyChanged("LotNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
                this.RaisePropertyChanged("Manufacturer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVitalSignData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientVitalCntrField;
        
        private System.DateTime vitalDateField;
        
        private int heightInField;
        
        private int weightLbField;
        
        private string bloodPressurePosnField;
        
        private int systolicField;
        
        private int diastolicField;
        
        private int pulseField;
        
        private int respirationField;
        
        private decimal temperatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientVitalCntr {
            get {
                return this.patientVitalCntrField;
            }
            set {
                this.patientVitalCntrField = value;
                this.RaisePropertyChanged("PatientVitalCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime VitalDate {
            get {
                return this.vitalDateField;
            }
            set {
                this.vitalDateField = value;
                this.RaisePropertyChanged("VitalDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int HeightIn {
            get {
                return this.heightInField;
            }
            set {
                this.heightInField = value;
                this.RaisePropertyChanged("HeightIn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int WeightLb {
            get {
                return this.weightLbField;
            }
            set {
                this.weightLbField = value;
                this.RaisePropertyChanged("WeightLb");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string BloodPressurePosn {
            get {
                return this.bloodPressurePosnField;
            }
            set {
                this.bloodPressurePosnField = value;
                this.RaisePropertyChanged("BloodPressurePosn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
                this.RaisePropertyChanged("Systolic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
                this.RaisePropertyChanged("Diastolic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
                this.RaisePropertyChanged("Pulse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int Respiration {
            get {
                return this.respirationField;
            }
            set {
                this.respirationField = value;
                this.RaisePropertyChanged("Respiration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public decimal Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
                this.RaisePropertyChanged("Temperature");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSurgicalHistData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patSurgicalHistCntrField;
        
        private string descriptionField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string diagnosisField;
        
        private string performedByField;
        
        private string serviceLocationField;
        
        private string serviceDateField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatSurgicalHistCntr {
            get {
                return this.patSurgicalHistCntrField;
            }
            set {
                this.patSurgicalHistCntrField = value;
                this.RaisePropertyChanged("PatSurgicalHistCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
                this.RaisePropertyChanged("Diagnosis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PerformedBy {
            get {
                return this.performedByField;
            }
            set {
                this.performedByField = value;
                this.RaisePropertyChanged("PerformedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ServiceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
                this.RaisePropertyChanged("ServiceLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ServiceDate {
            get {
                return this.serviceDateField;
            }
            set {
                this.serviceDateField = value;
                this.RaisePropertyChanged("ServiceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSocialHistData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patSocialHistCntrField;
        
        private string descriptionField;
        
        private string qualifierField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string beginDateField;
        
        private string endDateField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatSocialHistCntr {
            get {
                return this.patSocialHistCntrField;
            }
            set {
                this.patSocialHistCntrField = value;
                this.RaisePropertyChanged("PatSocialHistCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
                this.RaisePropertyChanged("Qualifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string BeginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
                this.RaisePropertyChanged("BeginDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientProcedureData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patProcedureCntrField;
        
        private string descriptionField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string diagnosisField;
        
        private string performedByField;
        
        private string serviceLocationField;
        
        private string serviceDateField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatProcedureCntr {
            get {
                return this.patProcedureCntrField;
            }
            set {
                this.patProcedureCntrField = value;
                this.RaisePropertyChanged("PatProcedureCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
                this.RaisePropertyChanged("Diagnosis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PerformedBy {
            get {
                return this.performedByField;
            }
            set {
                this.performedByField = value;
                this.RaisePropertyChanged("PerformedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ServiceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
                this.RaisePropertyChanged("ServiceLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ServiceDate {
            get {
                return this.serviceDateField;
            }
            set {
                this.serviceDateField = value;
                this.RaisePropertyChanged("ServiceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientProblemData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientProblemCntrField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string conditionField;
        
        private string effectiveDateField;
        
        private string lastChangeDateField;
        
        private short conditionStatusIdField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientProblemCntr {
            get {
                return this.patientProblemCntrField;
            }
            set {
                this.patientProblemCntrField = value;
                this.RaisePropertyChanged("PatientProblemCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string LastChangeDate {
            get {
                return this.lastChangeDateField;
            }
            set {
                this.lastChangeDateField = value;
                this.RaisePropertyChanged("LastChangeDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
                this.RaisePropertyChanged("ConditionStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientMedicationCntrField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private string medicationNameField;
        
        private bool activeField;
        
        private int quantityField;
        
        private string routeIdField;
        
        private int doseField;
        
        private string doseUnitField;
        
        private int refillsField;
        
        private string frequencyField;
        
        private string sigField;
        
        private string diagnosisField;
        
        private System.DateTime startDateField;
        
        private System.DateTime expireDateField;
        
        private string pharmacyField;
        
        private string noteField;
        
        private bool duringVisitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientMedicationCntr {
            get {
                return this.patientMedicationCntrField;
            }
            set {
                this.patientMedicationCntrField = value;
                this.RaisePropertyChanged("PatientMedicationCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
                this.RaisePropertyChanged("MedicationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
                this.RaisePropertyChanged("Quantity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string RouteId {
            get {
                return this.routeIdField;
            }
            set {
                this.routeIdField = value;
                this.RaisePropertyChanged("RouteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int Dose {
            get {
                return this.doseField;
            }
            set {
                this.doseField = value;
                this.RaisePropertyChanged("Dose");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string DoseUnit {
            get {
                return this.doseUnitField;
            }
            set {
                this.doseUnitField = value;
                this.RaisePropertyChanged("DoseUnit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
                this.RaisePropertyChanged("Refills");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
                this.RaisePropertyChanged("Frequency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
                this.RaisePropertyChanged("Sig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
                this.RaisePropertyChanged("Diagnosis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public System.DateTime ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
                this.RaisePropertyChanged("ExpireDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Pharmacy {
            get {
                return this.pharmacyField;
            }
            set {
                this.pharmacyField = value;
                this.RaisePropertyChanged("Pharmacy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public bool DuringVisit {
            get {
                return this.duringVisitField;
            }
            set {
                this.duringVisitField = value;
                this.RaisePropertyChanged("DuringVisit");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientMedicalHistData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patMedicalHistCntrField;
        
        private string descriptionField;
        
        private string dateOfOccuranceField;
        
        private string noteField;
        
        private bool onCardField;
        
        private bool onKeysField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatMedicalHistCntr {
            get {
                return this.patMedicalHistCntrField;
            }
            set {
                this.patMedicalHistCntrField = value;
                this.RaisePropertyChanged("PatMedicalHistCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DateOfOccurance {
            get {
                return this.dateOfOccuranceField;
            }
            set {
                this.dateOfOccuranceField = value;
                this.RaisePropertyChanged("DateOfOccurance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
                this.RaisePropertyChanged("OnCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool OnKeys {
            get {
                return this.onKeysField;
            }
            set {
                this.onKeysField = value;
                this.RaisePropertyChanged("OnKeys");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientFamilyHistData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patFamilyHistCntrField;
        
        private short relationshipIdField;
        
        private string familyMemberField;
        
        private string descriptionField;
        
        private string qualifierField;
        
        private string codeValueField;
        
        private int codeSystemIdField;
        
        private short conditionStatusIdField;
        
        private string sNOMEDCodeField;
        
        private int ageAtOnsetField;
        
        private bool diseasedField;
        
        private int diseasedAgeField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatFamilyHistCntr {
            get {
                return this.patFamilyHistCntrField;
            }
            set {
                this.patFamilyHistCntrField = value;
                this.RaisePropertyChanged("PatFamilyHistCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public short RelationshipId {
            get {
                return this.relationshipIdField;
            }
            set {
                this.relationshipIdField = value;
                this.RaisePropertyChanged("RelationshipId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string FamilyMember {
            get {
                return this.familyMemberField;
            }
            set {
                this.familyMemberField = value;
                this.RaisePropertyChanged("FamilyMember");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
                this.RaisePropertyChanged("Qualifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
                this.RaisePropertyChanged("CodeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int CodeSystemId {
            get {
                return this.codeSystemIdField;
            }
            set {
                this.codeSystemIdField = value;
                this.RaisePropertyChanged("CodeSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
                this.RaisePropertyChanged("ConditionStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string SNOMEDCode {
            get {
                return this.sNOMEDCodeField;
            }
            set {
                this.sNOMEDCodeField = value;
                this.RaisePropertyChanged("SNOMEDCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int AgeAtOnset {
            get {
                return this.ageAtOnsetField;
            }
            set {
                this.ageAtOnsetField = value;
                this.RaisePropertyChanged("AgeAtOnset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool Diseased {
            get {
                return this.diseasedField;
            }
            set {
                this.diseasedField = value;
                this.RaisePropertyChanged("Diseased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int DiseasedAge {
            get {
                return this.diseasedAgeField;
            }
            set {
                this.diseasedAgeField = value;
                this.RaisePropertyChanged("DiseasedAge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientAllergyData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long patientAllergyCntrField;
        
        private string codeValue_AllergenField;
        
        private short codeSystem_AllergenField;
        
        private string allergenField;
        
        private string allergenTypeField;
        
        private string codeValue_ReactionField;
        
        private short codeSystem_ReactionField;
        
        private string reactionField;
        
        private string effectiveDateField;
        
        private short conditionStatusIdField;
        
        private string noteField;
        
        private bool onCardField;
        
        private bool onKeysField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long PatientAllergyCntr {
            get {
                return this.patientAllergyCntrField;
            }
            set {
                this.patientAllergyCntrField = value;
                this.RaisePropertyChanged("PatientAllergyCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CodeValue_Allergen {
            get {
                return this.codeValue_AllergenField;
            }
            set {
                this.codeValue_AllergenField = value;
                this.RaisePropertyChanged("CodeValue_Allergen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public short CodeSystem_Allergen {
            get {
                return this.codeSystem_AllergenField;
            }
            set {
                this.codeSystem_AllergenField = value;
                this.RaisePropertyChanged("CodeSystem_Allergen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Allergen {
            get {
                return this.allergenField;
            }
            set {
                this.allergenField = value;
                this.RaisePropertyChanged("Allergen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string AllergenType {
            get {
                return this.allergenTypeField;
            }
            set {
                this.allergenTypeField = value;
                this.RaisePropertyChanged("AllergenType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CodeValue_Reaction {
            get {
                return this.codeValue_ReactionField;
            }
            set {
                this.codeValue_ReactionField = value;
                this.RaisePropertyChanged("CodeValue_Reaction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public short CodeSystem_Reaction {
            get {
                return this.codeSystem_ReactionField;
            }
            set {
                this.codeSystem_ReactionField = value;
                this.RaisePropertyChanged("CodeSystem_Reaction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Reaction {
            get {
                return this.reactionField;
            }
            set {
                this.reactionField = value;
                this.RaisePropertyChanged("Reaction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public short ConditionStatusId {
            get {
                return this.conditionStatusIdField;
            }
            set {
                this.conditionStatusIdField = value;
                this.RaisePropertyChanged("ConditionStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool OnCard {
            get {
                return this.onCardField;
            }
            set {
                this.onCardField = value;
                this.RaisePropertyChanged("OnCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool OnKeys {
            get {
                return this.onKeysField;
            }
            set {
                this.onKeysField = value;
                this.RaisePropertyChanged("OnKeys");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocumentParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long patientIdField;
        
        private long documentCntrField;
        
        private bool shareField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long DocumentCntr {
            get {
                return this.documentCntrField;
            }
            set {
                this.documentCntrField = value;
                this.RaisePropertyChanged("DocumentCntr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
                this.RaisePropertyChanged("Share");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientSocialSelfData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string birthplaceField;
        
        private short educationLevelIdField;
        
        private string occupationField;
        
        private bool retiredField;
        
        private short childrenSonField;
        
        private short childrenDaughterField;
        
        private bool caffeineUserField;
        
        private string caffieneTypeField;
        
        private string caffeineAmountField;
        
        private bool exerciseMemberField;
        
        private short exerciseFrequencyIdField;
        
        private string exerciseAmountField;
        
        private short activityLevelIdField;
        
        private string activity1Field;
        
        private string activity2Field;
        
        private string activity3Field;
        
        private bool alcoholUserField;
        
        private short alcoholFrequencyIdField;
        
        private System.DateTime alcoholLastUseField;
        
        private string alcoholTypeField;
        
        private short alcoholStartAgeField;
        
        private bool alcoholFamilyHistField;
        
        private int smokingStatusIdField;
        
        private string smokingStatusField;
        
        private short smokingDailyAmountField;
        
        private string smokingTypeField;
        
        private short smokingYearsField;
        
        private short smokingQuitAttemptsField;
        
        private System.DateTime smokingQuitDateField;
        
        private bool smokingSecondHandField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Birthplace {
            get {
                return this.birthplaceField;
            }
            set {
                this.birthplaceField = value;
                this.RaisePropertyChanged("Birthplace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public short EducationLevelId {
            get {
                return this.educationLevelIdField;
            }
            set {
                this.educationLevelIdField = value;
                this.RaisePropertyChanged("EducationLevelId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
                this.RaisePropertyChanged("Occupation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool Retired {
            get {
                return this.retiredField;
            }
            set {
                this.retiredField = value;
                this.RaisePropertyChanged("Retired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public short ChildrenSon {
            get {
                return this.childrenSonField;
            }
            set {
                this.childrenSonField = value;
                this.RaisePropertyChanged("ChildrenSon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public short ChildrenDaughter {
            get {
                return this.childrenDaughterField;
            }
            set {
                this.childrenDaughterField = value;
                this.RaisePropertyChanged("ChildrenDaughter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool CaffeineUser {
            get {
                return this.caffeineUserField;
            }
            set {
                this.caffeineUserField = value;
                this.RaisePropertyChanged("CaffeineUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CaffieneType {
            get {
                return this.caffieneTypeField;
            }
            set {
                this.caffieneTypeField = value;
                this.RaisePropertyChanged("CaffieneType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CaffeineAmount {
            get {
                return this.caffeineAmountField;
            }
            set {
                this.caffeineAmountField = value;
                this.RaisePropertyChanged("CaffeineAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool ExerciseMember {
            get {
                return this.exerciseMemberField;
            }
            set {
                this.exerciseMemberField = value;
                this.RaisePropertyChanged("ExerciseMember");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public short ExerciseFrequencyId {
            get {
                return this.exerciseFrequencyIdField;
            }
            set {
                this.exerciseFrequencyIdField = value;
                this.RaisePropertyChanged("ExerciseFrequencyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ExerciseAmount {
            get {
                return this.exerciseAmountField;
            }
            set {
                this.exerciseAmountField = value;
                this.RaisePropertyChanged("ExerciseAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public short ActivityLevelId {
            get {
                return this.activityLevelIdField;
            }
            set {
                this.activityLevelIdField = value;
                this.RaisePropertyChanged("ActivityLevelId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Activity1 {
            get {
                return this.activity1Field;
            }
            set {
                this.activity1Field = value;
                this.RaisePropertyChanged("Activity1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Activity2 {
            get {
                return this.activity2Field;
            }
            set {
                this.activity2Field = value;
                this.RaisePropertyChanged("Activity2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Activity3 {
            get {
                return this.activity3Field;
            }
            set {
                this.activity3Field = value;
                this.RaisePropertyChanged("Activity3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool AlcoholUser {
            get {
                return this.alcoholUserField;
            }
            set {
                this.alcoholUserField = value;
                this.RaisePropertyChanged("AlcoholUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public short AlcoholFrequencyId {
            get {
                return this.alcoholFrequencyIdField;
            }
            set {
                this.alcoholFrequencyIdField = value;
                this.RaisePropertyChanged("AlcoholFrequencyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public System.DateTime AlcoholLastUse {
            get {
                return this.alcoholLastUseField;
            }
            set {
                this.alcoholLastUseField = value;
                this.RaisePropertyChanged("AlcoholLastUse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string AlcoholType {
            get {
                return this.alcoholTypeField;
            }
            set {
                this.alcoholTypeField = value;
                this.RaisePropertyChanged("AlcoholType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public short AlcoholStartAge {
            get {
                return this.alcoholStartAgeField;
            }
            set {
                this.alcoholStartAgeField = value;
                this.RaisePropertyChanged("AlcoholStartAge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public bool AlcoholFamilyHist {
            get {
                return this.alcoholFamilyHistField;
            }
            set {
                this.alcoholFamilyHistField = value;
                this.RaisePropertyChanged("AlcoholFamilyHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public int SmokingStatusId {
            get {
                return this.smokingStatusIdField;
            }
            set {
                this.smokingStatusIdField = value;
                this.RaisePropertyChanged("SmokingStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string SmokingStatus {
            get {
                return this.smokingStatusField;
            }
            set {
                this.smokingStatusField = value;
                this.RaisePropertyChanged("SmokingStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public short SmokingDailyAmount {
            get {
                return this.smokingDailyAmountField;
            }
            set {
                this.smokingDailyAmountField = value;
                this.RaisePropertyChanged("SmokingDailyAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string SmokingType {
            get {
                return this.smokingTypeField;
            }
            set {
                this.smokingTypeField = value;
                this.RaisePropertyChanged("SmokingType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public short SmokingYears {
            get {
                return this.smokingYearsField;
            }
            set {
                this.smokingYearsField = value;
                this.RaisePropertyChanged("SmokingYears");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public short SmokingQuitAttempts {
            get {
                return this.smokingQuitAttemptsField;
            }
            set {
                this.smokingQuitAttemptsField = value;
                this.RaisePropertyChanged("SmokingQuitAttempts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public System.DateTime SmokingQuitDate {
            get {
                return this.smokingQuitDateField;
            }
            set {
                this.smokingQuitDateField = value;
                this.RaisePropertyChanged("SmokingQuitDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public bool SmokingSecondHand {
            get {
                return this.smokingSecondHandField;
            }
            set {
                this.smokingSecondHandField = value;
                this.RaisePropertyChanged("SmokingSecondHand");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientNoteData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private string noteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientDocParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private int activeField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private bool clinicalSummaryField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtMedicationField;
        
        private System.Data.DataTable dtMedsAdministeredField;
        
        private System.Data.DataTable dtProblemField;
        
        private System.Data.DataTable dtAllergyField;
        
        private System.Data.DataTable dtImmunizationField;
        
        private System.Data.DataTable dtSocialHistField;
        
        private System.Data.DataTable dtProcedureField;
        
        private System.Data.DataTable dtVitalSignField;
        
        private System.Data.DataTable dtLabField;
        
        private System.Data.DataTable dtPlanOfCareField;
        
        private System.Data.DataTable dtClinicalInstructionsField;
        
        private System.Data.DataTable dtFamilyHistField;
        
        private System.Data.DataTable dtMedicalHistField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ClinicalSummary {
            get {
                return this.clinicalSummaryField;
            }
            set {
                this.clinicalSummaryField = value;
                this.RaisePropertyChanged("ClinicalSummary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.Data.DataTable dtMedication {
            get {
                return this.dtMedicationField;
            }
            set {
                this.dtMedicationField = value;
                this.RaisePropertyChanged("dtMedication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataTable dtMedsAdministered {
            get {
                return this.dtMedsAdministeredField;
            }
            set {
                this.dtMedsAdministeredField = value;
                this.RaisePropertyChanged("dtMedsAdministered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.Data.DataTable dtProblem {
            get {
                return this.dtProblemField;
            }
            set {
                this.dtProblemField = value;
                this.RaisePropertyChanged("dtProblem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.Data.DataTable dtAllergy {
            get {
                return this.dtAllergyField;
            }
            set {
                this.dtAllergyField = value;
                this.RaisePropertyChanged("dtAllergy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.Data.DataTable dtImmunization {
            get {
                return this.dtImmunizationField;
            }
            set {
                this.dtImmunizationField = value;
                this.RaisePropertyChanged("dtImmunization");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.Data.DataTable dtSocialHist {
            get {
                return this.dtSocialHistField;
            }
            set {
                this.dtSocialHistField = value;
                this.RaisePropertyChanged("dtSocialHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.Data.DataTable dtProcedure {
            get {
                return this.dtProcedureField;
            }
            set {
                this.dtProcedureField = value;
                this.RaisePropertyChanged("dtProcedure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.Data.DataTable dtVitalSign {
            get {
                return this.dtVitalSignField;
            }
            set {
                this.dtVitalSignField = value;
                this.RaisePropertyChanged("dtVitalSign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.Data.DataTable dtLab {
            get {
                return this.dtLabField;
            }
            set {
                this.dtLabField = value;
                this.RaisePropertyChanged("dtLab");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.Data.DataTable dtPlanOfCare {
            get {
                return this.dtPlanOfCareField;
            }
            set {
                this.dtPlanOfCareField = value;
                this.RaisePropertyChanged("dtPlanOfCare");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public System.Data.DataTable dtClinicalInstructions {
            get {
                return this.dtClinicalInstructionsField;
            }
            set {
                this.dtClinicalInstructionsField = value;
                this.RaisePropertyChanged("dtClinicalInstructions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public System.Data.DataTable dtFamilyHist {
            get {
                return this.dtFamilyHistField;
            }
            set {
                this.dtFamilyHistField = value;
                this.RaisePropertyChanged("dtFamilyHist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public System.Data.DataTable dtMedicalHist {
            get {
                return this.dtMedicalHistField;
            }
            set {
                this.dtMedicalHistField = value;
                this.RaisePropertyChanged("dtMedicalHist");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientCCDParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private bool clinicalSummaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool ClinicalSummary {
            get {
                return this.clinicalSummaryField;
            }
            set {
                this.clinicalSummaryField = value;
                this.RaisePropertyChanged("ClinicalSummary");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientVisitCCD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long patientIdField;
        
        private long facilityIdField;
        
        private long visitIdField;
        
        private long providerIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string licenseField;
        
        private string phoneField;
        
        private string emailField;
        
        private int facilityTypeIdField;
        
        private string facilityTypeField;
        
        private string facilityNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countryCodeField;
        
        private string countryNameField;
        
        private string postalCodeField;
        
        private string facilityPhoneField;
        
        private string facilityFaxField;
        
        private string visitReasonField;
        
        private System.DateTime visitDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
                this.RaisePropertyChanged("PatientId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long VisitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
                this.RaisePropertyChanged("VisitId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
                this.RaisePropertyChanged("ProviderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
                this.RaisePropertyChanged("License");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int FacilityTypeId {
            get {
                return this.facilityTypeIdField;
            }
            set {
                this.facilityTypeIdField = value;
                this.RaisePropertyChanged("FacilityTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string FacilityType {
            get {
                return this.facilityTypeField;
            }
            set {
                this.facilityTypeField = value;
                this.RaisePropertyChanged("FacilityType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
                this.RaisePropertyChanged("FacilityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
                this.RaisePropertyChanged("CountryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string FacilityPhone {
            get {
                return this.facilityPhoneField;
            }
            set {
                this.facilityPhoneField = value;
                this.RaisePropertyChanged("FacilityPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string FacilityFax {
            get {
                return this.facilityFaxField;
            }
            set {
                this.facilityFaxField = value;
                this.RaisePropertyChanged("FacilityFax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string VisitReason {
            get {
                return this.visitReasonField;
            }
            set {
                this.visitReasonField = value;
                this.RaisePropertyChanged("VisitReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public System.DateTime VisitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
                this.RaisePropertyChanged("VisitDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PatientDocumentWSSoapChannel : AMR.Controllers.DataPatientDocumentService.PatientDocumentWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientDocumentWSSoapClient : System.ServiceModel.ClientBase<AMR.Controllers.DataPatientDocumentService.PatientDocumentWSSoap>, AMR.Controllers.DataPatientDocumentService.PatientDocumentWSSoap {
        
        public PatientDocumentWSSoapClient() {
        }
        
        public PatientDocumentWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientDocumentWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientDocumentWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientDocumentWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientVisitCCD GetPatientVisitCCDData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientVisitCCDData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVisitCCD> GetPatientVisitCCDDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientVisitCCDDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientCCDTableData GetPatientCCDCustomizeData(AMR.Controllers.DataPatientDocumentService.PatientCCDParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCCDCustomizeData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCCDTableData> GetPatientCCDCustomizeDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCCDParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCCDCustomizeDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientNoteData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientNoteData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientNoteDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientNoteDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientNoteData SavePatientNoteData(AMR.Controllers.DataPatientDocumentService.PatientNoteData PatientNote, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientNoteData(PatientNote, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientNoteData> SavePatientNoteDataAsync(AMR.Controllers.DataPatientDocumentService.PatientNoteData PatientNote, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientNoteDataAsync(PatientNote, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData GetPatientSocialSelfData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSocialSelfData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData> GetPatientSocialSelfDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSocialSelfDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData SavePatientSocialSelfData(AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSocialSelfData(PatientSocialData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData> SavePatientSocialSelfDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialSelfData PatientSocialData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSocialSelfDataAsync(PatientSocialData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetCombinedPatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetCombinedPatientDocumentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetCombinedPatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetCombinedPatientDocumentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientAllergyData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientAllergyDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientAllergyData SavePatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientAllergyData(PatientAllergy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAllergyData> SavePatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientAllergyDataAsync(PatientAllergy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientAllergyData DeletePatientAllergyData(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientAllergyData(PatientAllergy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAllergyData> DeletePatientAllergyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAllergyData PatientAllergy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientAllergyDataAsync(PatientAllergy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientFamilyHistData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientFamilyHistDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData SavePatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientFamilyHistData(PatientFamilyHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData> SavePatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientFamilyHistDataAsync(PatientFamilyHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData DeletePatientFamilyHistData(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientFamilyHistData(PatientFamilyHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData> DeletePatientFamilyHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientFamilyHistData PatientFamilyHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientFamilyHistDataAsync(PatientFamilyHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalHistData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalHistDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData SavePatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicalHistData(PatientMedicalHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData> SavePatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicalHistDataAsync(PatientMedicalHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData DeletePatientMedicalHistData(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicalHistData(PatientMedicalHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData> DeletePatientMedicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalHistData PatientMedicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicalHistDataAsync(PatientMedicalHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicationData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicationDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicationData SavePatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicationData(PatientMedication, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicationData> SavePatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicationDataAsync(PatientMedication, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicationData DeletePatientMedicationData(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicationData(PatientMedication, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicationData> DeletePatientMedicationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicationData PatientMedication, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicationDataAsync(PatientMedication, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProblemData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProblemDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientProblemData SavePatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientProblemData(PatientProblem, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProblemData> SavePatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientProblemDataAsync(PatientProblem, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientProblemData DeletePatientProblemData(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientProblemData(PatientProblem, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProblemData> DeletePatientProblemDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProblemData PatientProblem, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientProblemDataAsync(PatientProblem, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProcedureData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientProcedureDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientProcedureData SavePatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientProcedureData(PatientProcedure, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProcedureData> SavePatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientProcedureDataAsync(PatientProcedure, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientProcedureData DeletePatientProcedureData(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientProcedureData(PatientProcedure, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientProcedureData> DeletePatientProcedureDataAsync(AMR.Controllers.DataPatientDocumentService.PatientProcedureData PatientProcedure, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientProcedureDataAsync(PatientProcedure, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSocialHistData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSocialHistDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSocialHistData SavePatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSocialHistData(PatientSocialHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialHistData> SavePatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSocialHistDataAsync(PatientSocialHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSocialHistData DeletePatientSocialHistData(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientSocialHistData(PatientSocialHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSocialHistData> DeletePatientSocialHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSocialHistData PatientSocialHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientSocialHistDataAsync(PatientSocialHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSurgicalHistData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSurgicalHistDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData SavePatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSurgicalHistData(PatientSurgicalHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData> SavePatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientSurgicalHistDataAsync(PatientSurgicalHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData DeletePatientSurgicalHistData(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientSurgicalHistData(PatientSurgicalHist, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData> DeletePatientSurgicalHistDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSurgicalHistData PatientSurgicalHist, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientSurgicalHistDataAsync(PatientSurgicalHist, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientVitalSignData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientVitalSignDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientVitalSignData SavePatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientVitalSignData(PatientVitalSign, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVitalSignData> SavePatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientVitalSignDataAsync(PatientVitalSign, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientVitalSignData DeletePatientVitalSignData(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientVitalSignData(PatientVitalSign, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientVitalSignData> DeletePatientVitalSignDataAsync(AMR.Controllers.DataPatientDocumentService.PatientVitalSignData PatientVitalSign, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientVitalSignDataAsync(PatientVitalSign, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientImmunizationData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientImmunizationDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientImmunizationData SavePatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientImmunizationData(PatientImmunization, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientImmunizationData> SavePatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientImmunizationDataAsync(PatientImmunization, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientImmunizationData DeletePatientImmunizationData(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientImmunizationData(PatientImmunization, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientImmunizationData> DeletePatientImmunizationDataAsync(AMR.Controllers.DataPatientDocumentService.PatientImmunizationData PatientImmunization, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientImmunizationDataAsync(PatientImmunization, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientLabResultData GetPatientLabResultData(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientLabResultData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientLabResultData> GetPatientLabResultDataAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientLabResultDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientLabResultData SavePatientLabResultData(AMR.Controllers.DataPatientDocumentService.PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientLabResultData(PatientLabResult, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientLabResultData> SavePatientLabResultDataAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultData PatientLabResult, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientLabResultDataAsync(PatientLabResult, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientLabResultList(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientLabResultList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientLabResultListAsync(AMR.Controllers.DataPatientDocumentService.PatientLabResultParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientLabResultListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientEmergencyData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientEmergencyDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientEmergencyData SavePatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientEmergencyData(PatientEmergency, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientEmergencyData> SavePatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientEmergencyDataAsync(PatientEmergency, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientEmergencyData DeletePatientEmergencyData(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientEmergencyData(PatientEmergency, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientEmergencyData> DeletePatientEmergencyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientEmergencyData PatientEmergency, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientEmergencyDataAsync(PatientEmergency, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientInsuranceData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientInsuranceDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientInsuranceData SavePatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientInsuranceData(PatientInsurance, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientInsuranceData> SavePatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientInsuranceDataAsync(PatientInsurance, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientInsuranceData DeletePatientInsuranceData(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientInsuranceData(PatientInsurance, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientInsuranceData> DeletePatientInsuranceDataAsync(AMR.Controllers.DataPatientDocumentService.PatientInsuranceData PatientInsurance, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientInsuranceDataAsync(PatientInsurance, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPharmacyData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPharmacyDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPharmacyData SavePatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPharmacyData(PatientPharmacy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPharmacyData> SavePatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPharmacyDataAsync(PatientPharmacy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPharmacyData DeletePatientPharmacyData(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPharmacyData(PatientPharmacy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPharmacyData> DeletePatientPharmacyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPharmacyData PatientPharmacy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPharmacyDataAsync(PatientPharmacy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData GetPatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> GetPatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentDataApp GetPatientClinicalDocumentDataApp(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentDataApp(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentDataApp> GetPatientClinicalDocumentDataAppAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentDataAppAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData SavePatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientClinicalDocumentData(PatientClinicalDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> SavePatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientClinicalDocumentDataAsync(PatientClinicalDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData DeletePatientClinicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientClinicalDocumentData(PatientClinicalDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData> DeletePatientClinicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentData PatientClinicalDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientClinicalDocumentDataAsync(PatientClinicalDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientClinicalDocumentList(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientClinicalDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientClinicalDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalDocumentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientClinicalDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientClinicalDocumentShare(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientClinicalDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientClinicalDocumentShareAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentData GetPatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDocumentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> GetPatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDocumentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentData SavePatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> SavePatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentData DeletePatientDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentData> DeletePatientDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDocumentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDocumentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientDocumentShare(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientDocumentShareAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData GetPatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalDocumentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> GetPatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalDocumentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData SavePatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicalDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> SavePatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientMedicalDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData DeletePatientMedicalDocumentData(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicalDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData> DeletePatientMedicalDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientMedicalDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientMedicalDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalDocumentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientMedicalDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientMedicalDocumentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientMedicalDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientMedicalDocumentShare(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientMedicalDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientMedicalDocumentShareAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData GetPatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCareDocumentData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> GetPatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCareDocumentDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData SavePatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientCareDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> SavePatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientCareDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData DeletePatientCareDocumentData(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientCareDocumentData(PatientDocument, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData> DeletePatientCareDocumentDataAsync(AMR.Controllers.DataPatientDocumentService.PatientCareDocumentData PatientDocument, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientCareDocumentDataAsync(PatientDocument, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientCareDocumentList(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCareDocumentList(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientCareDocumentListAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientCareDocumentListAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocumentResp PatientCareDocumentShare(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientCareDocumentShare(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocumentResp> PatientCareDocumentShareAsync(AMR.Controllers.DataPatientDocumentService.PatientDocumentParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.PatientCareDocumentShareAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPlanOfCareData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPlanOfCareDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData SavePatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPlanOfCareData(PatientPlanOfCare, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData> SavePatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPlanOfCareDataAsync(PatientPlanOfCare, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData DeletePatientPlanOfCareData(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPlanOfCareData(PatientPlanOfCare, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData> DeletePatientPlanOfCareDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPlanOfCareData PatientPlanOfCare, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPlanOfCareDataAsync(PatientPlanOfCare, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientClinicalInstructionsData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalInstructionsData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientClinicalInstructionsDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientClinicalInstructionsDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDoctorData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientDoctorDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDoctorData SavePatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientDoctorData(PatientDoctor, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDoctorData> SavePatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientDoctorDataAsync(PatientDoctor, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDoctorData DeletePatientDoctorData(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientDoctorData(PatientDoctor, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDoctorData> DeletePatientDoctorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDoctorData PatientDoctor, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientDoctorDataAsync(PatientDoctor, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientAdvisorData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientAdvisorDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientAdvisorData SavePatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientAdvisorData(PatientAdvisor, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAdvisorData> SavePatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientAdvisorDataAsync(PatientAdvisor, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientAdvisorData DeletePatientAdvisorData(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientAdvisorData(PatientAdvisor, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientAdvisorData> DeletePatientAdvisorDataAsync(AMR.Controllers.DataPatientDocumentService.PatientAdvisorData PatientAdvisor, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientAdvisorDataAsync(PatientAdvisor, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData GetLabResultTestData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetLabResultTestData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData> GetLabResultTestDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetLabResultTestDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData GetPatientSummaryData(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSummaryData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientSummaryTableData> GetPatientSummaryDataAsync(AMR.Controllers.DataPatientDocumentService.PatientSummaryParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientSummaryDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientCCDResult GetPatientCCD(AMR.Controllers.DataPatientDocumentService.CCDParms Parms, string Token, long UserId, long FacilityId, short Action) {
            return base.Channel.GetPatientCCD(Parms, Token, UserId, FacilityId, Action);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientCCDResult> GetPatientCCDAsync(AMR.Controllers.DataPatientDocumentService.CCDParms Parms, string Token, long UserId, long FacilityId, short Action) {
            return base.Channel.GetPatientCCDAsync(Parms, Token, UserId, FacilityId, Action);
        }
        
        public AMR.Controllers.DataPatientDocumentService.CCDPostResponse SavePatientCCD(AMR.Controllers.DataPatientDocumentService.CCDPostData CCDData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientCCD(CCDData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.CCDPostResponse> SavePatientCCDAsync(AMR.Controllers.DataPatientDocumentService.CCDPostData CCDData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientCCDAsync(CCDData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetCCDAuditLog(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetCCDAuditLog(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetCCDAuditLogAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetCCDAuditLogAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.MedicalPortfolioData GetMedicalPortfolio(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMedicalPortfolio(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.MedicalPortfolioData> GetMedicalPortfolioAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMedicalPortfolioAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientDocTableData GetPatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPolicyData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientDocTableData> GetPatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientDocParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPatientPolicyDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPolicyData SavePatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPolicyData(PatientPolicy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPolicyData> SavePatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePatientPolicyDataAsync(PatientPolicy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientPolicyData DeletePatientPolicyData(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPolicyData(PatientPolicy, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientPolicyData> DeletePatientPolicyDataAsync(AMR.Controllers.DataPatientDocumentService.PatientPolicyData PatientPolicy, string Token, long UserId, long FacilityId) {
            return base.Channel.DeletePatientPolicyDataAsync(PatientPolicy, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientDocumentService.PatientMedicalTableData GetMedicalSummaryData(AMR.Controllers.DataPatientDocumentService.PatientMedicalParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMedicalSummaryData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientDocumentService.PatientMedicalTableData> GetMedicalSummaryDataAsync(AMR.Controllers.DataPatientDocumentService.PatientMedicalParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetMedicalSummaryDataAsync(Parms, Token, UserId, FacilityId);
        }
    }
}
