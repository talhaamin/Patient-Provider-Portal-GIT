//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMR.Controllers.DataPatientConfigService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataPatientConfigService.ConfigWSSoap")]
    public interface ConfigWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.PracticeData GetPracticeData(AMR.Controllers.DataPatientConfigService.PracticeParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticeData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeData> GetPracticeDataAsync(AMR.Controllers.DataPatientConfigService.PracticeParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePracticeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.PracticeData SavePracticeData(AMR.Controllers.DataPatientConfigService.PracticeData PracticeData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePracticeData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeData> SavePracticeDataAsync(AMR.Controllers.DataPatientConfigService.PracticeData PracticeData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticesForOrganization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.PracticeTableData GetPracticesForOrganization(long OrganizationId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPracticesForOrganization", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeTableData> GetPracticesForOrganizationAsync(long OrganizationId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrganizationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.OrganizationData GetOrganizationData(AMR.Controllers.DataPatientConfigService.OrganizationParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrganizationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationData> GetOrganizationDataAsync(AMR.Controllers.DataPatientConfigService.OrganizationParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrganizationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.OrganizationData SaveOrganizationData(AMR.Controllers.DataPatientConfigService.OrganizationData OrganizationData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveOrganizationData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationData> SaveOrganizationDataAsync(AMR.Controllers.DataPatientConfigService.OrganizationData OrganizationData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrganizationSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.OrganizationTableData OrganizationSearch(AMR.Controllers.DataPatientConfigService.OrganizationSearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrganizationSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationTableData> OrganizationSearchAsync(AMR.Controllers.DataPatientConfigService.OrganizationSearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.FacilityData GetFacilityData(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityData> GetFacilityDataAsync(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFacilityData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.FacilityData SaveFacilityData(AMR.Controllers.DataPatientConfigService.FacilityData FacilityData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveFacilityData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityData> SaveFacilityDataAsync(AMR.Controllers.DataPatientConfigService.FacilityData FacilityData, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilitiesForPractice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.FacilityTableData GetFacilitiesForPractice(long PracticeId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilitiesForPractice", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityTableData> GetFacilitiesForPracticeAsync(long PracticeId, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FacilitySearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.FacilityTableData FacilitySearch(AMR.Controllers.DataPatientConfigService.FacilitySearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FacilitySearch", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityTableData> FacilitySearchAsync(AMR.Controllers.DataPatientConfigService.FacilitySearchParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPreferredLanguageCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetPreferredLanguageCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPreferredLanguageCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetPreferredLanguageCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGenderCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetGenderCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGenderCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetGenderCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRaceCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetRaceCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRaceCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRaceCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEthnicityCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetEthnicityCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEthnicityCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEthnicityCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMaritalStatusCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetMaritalStatusCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMaritalStatusCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetMaritalStatusCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetConditionStatusCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetConditionStatusCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetConditionStatusCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetConditionStatusCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReligionCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetReligionCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReligionCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetReligionCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBloodTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetBloodTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBloodTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetBloodTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmokingStatusCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetSmokingStatusCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmokingStatusCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSmokingStatusCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityTypesCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetFacilityTypesCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilityTypesCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetFacilityTypesCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserRoleCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetUserRoleCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserRoleCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetUserRoleCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetDocumentTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDocumentTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuditActionCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetAuditActionCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuditActionCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAuditActionCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEMRSystemCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetEMRSystemCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEMRSystemCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEMRSystemCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelationshipCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetRelationshipCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelationshipCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRelationshipCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelationshipSNOMED", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableValue GetRelationshipSNOMED(string Token, long UserId, long FacilityId, string SNOMED);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRelationshipSNOMED", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableValue> GetRelationshipSNOMEDAsync(string Token, long UserId, long FacilityId, string SNOMED);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSecurityQuestionCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetSecurityQuestionCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSecurityQuestionCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSecurityQuestionCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInstructionTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetInstructionTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInstructionTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetInstructionTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProblemCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetProblemCodes(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProblemCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetProblemCodesAsync(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVaccineCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetVaccineCodes(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVaccineCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetVaccineCodesAsync(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicationsCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetMedicationsCodes(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMedicationsCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetMedicationsCodesAsync(string Token, long UserId, long FacilityId, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFrequencyCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetFrequencyCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFrequencyCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetFrequencyCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetCountryCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountryCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetCountryCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetStateCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetStateCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSocialCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetSocialCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSocialCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSocialCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRouteOfAdministrationCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetRouteOfAdministrationCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRouteOfAdministrationCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRouteOfAdministrationCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocUploadTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetDocUploadTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocUploadTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDocUploadTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDoctorTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetDoctorTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDoctorTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDoctorTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPolicyTypeCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetPolicyTypeCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPolicyTypeCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetPolicyTypeCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdvisorCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetAdvisorCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdvisorCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAdvisorCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExerciseFrequencyCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetExerciseFrequencyCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExerciseFrequencyCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetExerciseFrequencyCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActivityLevelCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetActivityLevelCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActivityLevelCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetActivityLevelCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAlcoholFrequencyCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetAlcoholFrequencyCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAlcoholFrequencyCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAlcoholFrequencyCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEducationLevelCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetEducationLevelCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEducationLevelCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEducationLevelCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThirdPartyCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetThirdPartyCodes(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThirdPartyCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetThirdPartyCodesAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCarriers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.CodeTableData GetCarriers(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCarriers", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetCarriersAsync(string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilitySetupData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AMR.Controllers.DataPatientConfigService.FacilitySetupResp GetFacilitySetupData(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFacilitySetupData", ReplyAction="*")]
        System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilitySetupResp> GetFacilitySetupDataAsync(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long practiceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
                this.RaisePropertyChanged("PracticeId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilitySetupResp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long facilityIdField;
        
        private long userIdField;
        
        private string logonField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Logon {
            get {
                return this.logonField;
            }
            set {
                this.logonField = value;
                this.RaisePropertyChanged("Logon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CodeTableValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private int codeValueIdField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int CodeValueId {
            get {
                return this.codeValueIdField;
            }
            set {
                this.codeValueIdField = value;
                this.RaisePropertyChanged("CodeValueId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CodeTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilitySearchParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long facilityIdField;
        
        private string facilityNameField;
        
        private System.Nullable<int> pageNumberField;
        
        private System.Nullable<int> pageSizeField;
        
        private System.Nullable<long> totalRecordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
                this.RaisePropertyChanged("FacilityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<int> PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
                this.RaisePropertyChanged("PageNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<int> PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
                this.RaisePropertyChanged("PageSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<long> TotalRecord {
            get {
                return this.totalRecordField;
            }
            set {
                this.totalRecordField = value;
                this.RaisePropertyChanged("TotalRecord");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        private long countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long facilityIdField;
        
        private long practiceIdField;
        
        private int eMRSystemIdField;
        
        private int facilityTypeIdField;
        
        private string facilityNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countryCodeField;
        
        private string postalCodeField;
        
        private string phoneField;
        
        private string faxField;
        
        private string billAddress1Field;
        
        private string billAddress2Field;
        
        private string billAddress3Field;
        
        private string billCityField;
        
        private string billStateField;
        
        private string billPostalCodeField;
        
        private string billCountryCodeField;
        
        private string billPhoneField;
        
        private string billFaxField;
        
        private bool generalMessageAvailableField;
        
        private int generalMessageNotifyField;
        
        private string generalMessageEmailField;
        
        private bool appointmentMessageAvailableField;
        
        private int appointmentMessageNotifyField;
        
        private string appointmentMessageEmailField;
        
        private bool medicationMessageAvailableField;
        
        private int medicationMessageNotifyField;
        
        private string medicationMessageEmailField;
        
        private bool referalMessageAvailableField;
        
        private int referralMessageNotifyField;
        
        private string referralMessageEmailField;
        
        private bool premiumAvailableField;
        
        private short onlineBillPaymentField;
        
        private string commentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
                this.RaisePropertyChanged("PracticeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int EMRSystemId {
            get {
                return this.eMRSystemIdField;
            }
            set {
                this.eMRSystemIdField = value;
                this.RaisePropertyChanged("EMRSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int FacilityTypeId {
            get {
                return this.facilityTypeIdField;
            }
            set {
                this.facilityTypeIdField = value;
                this.RaisePropertyChanged("FacilityTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FacilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
                this.RaisePropertyChanged("FacilityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string BillAddress1 {
            get {
                return this.billAddress1Field;
            }
            set {
                this.billAddress1Field = value;
                this.RaisePropertyChanged("BillAddress1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string BillAddress2 {
            get {
                return this.billAddress2Field;
            }
            set {
                this.billAddress2Field = value;
                this.RaisePropertyChanged("BillAddress2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string BillAddress3 {
            get {
                return this.billAddress3Field;
            }
            set {
                this.billAddress3Field = value;
                this.RaisePropertyChanged("BillAddress3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string BillCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
                this.RaisePropertyChanged("BillCity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string BillState {
            get {
                return this.billStateField;
            }
            set {
                this.billStateField = value;
                this.RaisePropertyChanged("BillState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string BillPostalCode {
            get {
                return this.billPostalCodeField;
            }
            set {
                this.billPostalCodeField = value;
                this.RaisePropertyChanged("BillPostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string BillCountryCode {
            get {
                return this.billCountryCodeField;
            }
            set {
                this.billCountryCodeField = value;
                this.RaisePropertyChanged("BillCountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string BillPhone {
            get {
                return this.billPhoneField;
            }
            set {
                this.billPhoneField = value;
                this.RaisePropertyChanged("BillPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string BillFax {
            get {
                return this.billFaxField;
            }
            set {
                this.billFaxField = value;
                this.RaisePropertyChanged("BillFax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public bool GeneralMessageAvailable {
            get {
                return this.generalMessageAvailableField;
            }
            set {
                this.generalMessageAvailableField = value;
                this.RaisePropertyChanged("GeneralMessageAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public int GeneralMessageNotify {
            get {
                return this.generalMessageNotifyField;
            }
            set {
                this.generalMessageNotifyField = value;
                this.RaisePropertyChanged("GeneralMessageNotify");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string GeneralMessageEmail {
            get {
                return this.generalMessageEmailField;
            }
            set {
                this.generalMessageEmailField = value;
                this.RaisePropertyChanged("GeneralMessageEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public bool AppointmentMessageAvailable {
            get {
                return this.appointmentMessageAvailableField;
            }
            set {
                this.appointmentMessageAvailableField = value;
                this.RaisePropertyChanged("AppointmentMessageAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public int AppointmentMessageNotify {
            get {
                return this.appointmentMessageNotifyField;
            }
            set {
                this.appointmentMessageNotifyField = value;
                this.RaisePropertyChanged("AppointmentMessageNotify");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string AppointmentMessageEmail {
            get {
                return this.appointmentMessageEmailField;
            }
            set {
                this.appointmentMessageEmailField = value;
                this.RaisePropertyChanged("AppointmentMessageEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public bool MedicationMessageAvailable {
            get {
                return this.medicationMessageAvailableField;
            }
            set {
                this.medicationMessageAvailableField = value;
                this.RaisePropertyChanged("MedicationMessageAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public int MedicationMessageNotify {
            get {
                return this.medicationMessageNotifyField;
            }
            set {
                this.medicationMessageNotifyField = value;
                this.RaisePropertyChanged("MedicationMessageNotify");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public string MedicationMessageEmail {
            get {
                return this.medicationMessageEmailField;
            }
            set {
                this.medicationMessageEmailField = value;
                this.RaisePropertyChanged("MedicationMessageEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public bool ReferalMessageAvailable {
            get {
                return this.referalMessageAvailableField;
            }
            set {
                this.referalMessageAvailableField = value;
                this.RaisePropertyChanged("ReferalMessageAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public int ReferralMessageNotify {
            get {
                return this.referralMessageNotifyField;
            }
            set {
                this.referralMessageNotifyField = value;
                this.RaisePropertyChanged("ReferralMessageNotify");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string ReferralMessageEmail {
            get {
                return this.referralMessageEmailField;
            }
            set {
                this.referralMessageEmailField = value;
                this.RaisePropertyChanged("ReferralMessageEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        public bool PremiumAvailable {
            get {
                return this.premiumAvailableField;
            }
            set {
                this.premiumAvailableField = value;
                this.RaisePropertyChanged("PremiumAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public short OnlineBillPayment {
            get {
                return this.onlineBillPaymentField;
            }
            set {
                this.onlineBillPaymentField = value;
                this.RaisePropertyChanged("OnlineBillPayment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long facilityIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long FacilityId {
            get {
                return this.facilityIdField;
            }
            set {
                this.facilityIdField = value;
                this.RaisePropertyChanged("FacilityId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationSearchParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string organizationNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
                this.RaisePropertyChanged("OrganizationName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long organizationIdField;
        
        private string organizationNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
                this.RaisePropertyChanged("OrganizationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
                this.RaisePropertyChanged("OrganizationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrganizationParms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int optionField;
        
        private long organizationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
                this.RaisePropertyChanged("Option");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
                this.RaisePropertyChanged("OrganizationId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeTableData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private System.Data.DataTable dtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
                this.RaisePropertyChanged("dt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PracticeData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool validField;
        
        private string errorMessageField;
        
        private long practiceIdField;
        
        private long organizationIdField;
        
        private string practiceNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PracticeId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
                this.RaisePropertyChanged("PracticeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
                this.RaisePropertyChanged("OrganizationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PracticeName {
            get {
                return this.practiceNameField;
            }
            set {
                this.practiceNameField = value;
                this.RaisePropertyChanged("PracticeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
                this.RaisePropertyChanged("Address3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConfigWSSoapChannel : AMR.Controllers.DataPatientConfigService.ConfigWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigWSSoapClient : System.ServiceModel.ClientBase<AMR.Controllers.DataPatientConfigService.ConfigWSSoap>, AMR.Controllers.DataPatientConfigService.ConfigWSSoap {
        
        public ConfigWSSoapClient() {
        }
        
        public ConfigWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AMR.Controllers.DataPatientConfigService.PracticeData GetPracticeData(AMR.Controllers.DataPatientConfigService.PracticeParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticeData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeData> GetPracticeDataAsync(AMR.Controllers.DataPatientConfigService.PracticeParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticeDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.PracticeData SavePracticeData(AMR.Controllers.DataPatientConfigService.PracticeData PracticeData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePracticeData(PracticeData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeData> SavePracticeDataAsync(AMR.Controllers.DataPatientConfigService.PracticeData PracticeData, string Token, long UserId, long FacilityId) {
            return base.Channel.SavePracticeDataAsync(PracticeData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.PracticeTableData GetPracticesForOrganization(long OrganizationId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticesForOrganization(OrganizationId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.PracticeTableData> GetPracticesForOrganizationAsync(long OrganizationId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetPracticesForOrganizationAsync(OrganizationId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.OrganizationData GetOrganizationData(AMR.Controllers.DataPatientConfigService.OrganizationParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetOrganizationData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationData> GetOrganizationDataAsync(AMR.Controllers.DataPatientConfigService.OrganizationParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetOrganizationDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.OrganizationData SaveOrganizationData(AMR.Controllers.DataPatientConfigService.OrganizationData OrganizationData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveOrganizationData(OrganizationData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationData> SaveOrganizationDataAsync(AMR.Controllers.DataPatientConfigService.OrganizationData OrganizationData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveOrganizationDataAsync(OrganizationData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.OrganizationTableData OrganizationSearch(AMR.Controllers.DataPatientConfigService.OrganizationSearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.OrganizationSearch(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.OrganizationTableData> OrganizationSearchAsync(AMR.Controllers.DataPatientConfigService.OrganizationSearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.OrganizationSearchAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.FacilityData GetFacilityData(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityData> GetFacilityDataAsync(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityDataAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.FacilityData SaveFacilityData(AMR.Controllers.DataPatientConfigService.FacilityData FacilityData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveFacilityData(FacilityData, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityData> SaveFacilityDataAsync(AMR.Controllers.DataPatientConfigService.FacilityData FacilityData, string Token, long UserId, long FacilityId) {
            return base.Channel.SaveFacilityDataAsync(FacilityData, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.FacilityTableData GetFacilitiesForPractice(long PracticeId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilitiesForPractice(PracticeId, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityTableData> GetFacilitiesForPracticeAsync(long PracticeId, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilitiesForPracticeAsync(PracticeId, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.FacilityTableData FacilitySearch(AMR.Controllers.DataPatientConfigService.FacilitySearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.FacilitySearch(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilityTableData> FacilitySearchAsync(AMR.Controllers.DataPatientConfigService.FacilitySearchParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.FacilitySearchAsync(Parms, Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetPreferredLanguageCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetPreferredLanguageCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetPreferredLanguageCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetPreferredLanguageCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetGenderCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetGenderCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetGenderCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetGenderCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetRaceCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRaceCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRaceCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRaceCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetEthnicityCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEthnicityCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEthnicityCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEthnicityCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetMaritalStatusCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMaritalStatusCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetMaritalStatusCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetMaritalStatusCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetConditionStatusCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetConditionStatusCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetConditionStatusCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetConditionStatusCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetReligionCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetReligionCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetReligionCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetReligionCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetBloodTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetBloodTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetBloodTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetBloodTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetSmokingStatusCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSmokingStatusCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSmokingStatusCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSmokingStatusCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetFacilityTypesCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityTypesCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetFacilityTypesCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilityTypesCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetUserRoleCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetUserRoleCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetUserRoleCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetUserRoleCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetDocumentTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDocumentTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDocumentTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDocumentTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetAuditActionCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAuditActionCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAuditActionCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAuditActionCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetEMRSystemCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEMRSystemCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEMRSystemCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEMRSystemCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetRelationshipCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRelationshipCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRelationshipCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRelationshipCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableValue GetRelationshipSNOMED(string Token, long UserId, long FacilityId, string SNOMED) {
            return base.Channel.GetRelationshipSNOMED(Token, UserId, FacilityId, SNOMED);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableValue> GetRelationshipSNOMEDAsync(string Token, long UserId, long FacilityId, string SNOMED) {
            return base.Channel.GetRelationshipSNOMEDAsync(Token, UserId, FacilityId, SNOMED);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetSecurityQuestionCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSecurityQuestionCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSecurityQuestionCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSecurityQuestionCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetInstructionTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetInstructionTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetInstructionTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetInstructionTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetProblemCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetProblemCodes(Token, UserId, FacilityId, SearchValue);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetProblemCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetProblemCodesAsync(Token, UserId, FacilityId, SearchValue);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetVaccineCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetVaccineCodes(Token, UserId, FacilityId, SearchValue);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetVaccineCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetVaccineCodesAsync(Token, UserId, FacilityId, SearchValue);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetMedicationsCodes(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetMedicationsCodes(Token, UserId, FacilityId, SearchValue);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetMedicationsCodesAsync(string Token, long UserId, long FacilityId, string SearchValue) {
            return base.Channel.GetMedicationsCodesAsync(Token, UserId, FacilityId, SearchValue);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetFrequencyCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetFrequencyCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetFrequencyCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetCountryCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetCountryCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetCountryCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetCountryCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetStateCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetStateCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetStateCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetStateCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetSocialCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSocialCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetSocialCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetSocialCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetRouteOfAdministrationCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRouteOfAdministrationCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetRouteOfAdministrationCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetRouteOfAdministrationCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetDocUploadTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDocUploadTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDocUploadTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDocUploadTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetDoctorTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDoctorTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetDoctorTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetDoctorTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetPolicyTypeCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetPolicyTypeCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetPolicyTypeCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetPolicyTypeCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetAdvisorCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAdvisorCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAdvisorCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAdvisorCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetExerciseFrequencyCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetExerciseFrequencyCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetExerciseFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetExerciseFrequencyCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetActivityLevelCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetActivityLevelCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetActivityLevelCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetActivityLevelCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetAlcoholFrequencyCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAlcoholFrequencyCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetAlcoholFrequencyCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetAlcoholFrequencyCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetEducationLevelCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEducationLevelCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetEducationLevelCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetEducationLevelCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetThirdPartyCodes(string Token, long UserId, long FacilityId) {
            return base.Channel.GetThirdPartyCodes(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetThirdPartyCodesAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetThirdPartyCodesAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.CodeTableData GetCarriers(string Token, long UserId, long FacilityId) {
            return base.Channel.GetCarriers(Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.CodeTableData> GetCarriersAsync(string Token, long UserId, long FacilityId) {
            return base.Channel.GetCarriersAsync(Token, UserId, FacilityId);
        }
        
        public AMR.Controllers.DataPatientConfigService.FacilitySetupResp GetFacilitySetupData(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilitySetupData(Parms, Token, UserId, FacilityId);
        }
        
        public System.Threading.Tasks.Task<AMR.Controllers.DataPatientConfigService.FacilitySetupResp> GetFacilitySetupDataAsync(AMR.Controllers.DataPatientConfigService.FacilityParms Parms, string Token, long UserId, long FacilityId) {
            return base.Channel.GetFacilitySetupDataAsync(Parms, Token, UserId, FacilityId);
        }
    }
}
